{"version":3,"file":"bootstrap-vue.esm.js","sources":["../lib/utils/observe-dom.js","../lib/directives/_target.js","../lib/components/alert.vue","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/mixins/clickout.js","../lib/mixins/dropdown.js","../lib/mixins/generate-id.js","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/components/form-checkbox.vue","../lib/mixins/form-options.js","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/modal.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/pagination.vue","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, Object.assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","const all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets(el, binding, listen_types, fn) {\n    const vm = el.__vue__;\n\n    if (!vm) {\n        console.warn('__vue__ is not available on element', el);\n        return;\n    }\n\n    const targets = Object.keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vm});\n    };\n\n    Object.keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            console.log(type);\n            el.addEventListener(type, listener);\n        }\n    });\n}\n","<template>\n    <div :class=\"classObject\" role=\"alert\" v-if=\"localShow\">\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                aria-label=\"Close\"\n                v-if=\"dismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false\n            };\n        },\n        created() {\n            if (this.state) {\n                console.warn('<b-alrt> state property is deprecated, please use variant instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.dismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    return;\n                }\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","<template>\n    <a :is=\"componentType\"\n       :active-class=\"activeClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       @click=\"click\"\n    >\n        <slot></slot>\n    </a>\n</template>\n\n<script>\n    export default {\n        computed: {\n            componentType() {\n                return (this.$router && this.to) ? 'router-link' : 'a';\n            }\n        },\n        props: {\n            activeClass: {\n                type: String,\n                default: 'active'\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            to: {\n                type: [String, Object],\n                default: null\n            },\n            exact: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            click(e) {\n                if (this.disabled || this.href === '#') {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n\n                if (!this.disabled) {\n                    this.$emit('click', e);\n                    this.$root.$emit('shown::dropdown', this);\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"item in items2\" :class=\"['breadcrumb-item', item.__active ? 'active' : null]\"\n            @click=\"onclick(item)\">\n            <span v-if=\"item.active\" v-html=\"item.text\"></span>\n            <b-link v-else :to=\"item.to\" :href=\"item.href || item.link\" v-html=\"item.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            componentType() {\n                return this.to ? 'router-link' : 'a';\n            },\n            items2() {\n                const last = this.items.length > 0 && this.items[this.items.length - 1];\n\n                return this.items.map(item => {\n                    if (typeof item === 'string') {\n                        return {text: item, link: '#', active: item === last};\n                    }\n\n                    if (item.active !== true && item.active !== false) {\n                        item.__active = item === last;\n                    } else {\n                        item.__active = item.active;\n                    }\n\n                    return item;\n                });\n            }\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => [],\n                required: true\n            }\n        },\n        methods: {\n            onclick(item) {\n                this.$emit('click', item);\n                if (this.$router && this.to) {\n                    this.$router.push(this.to);\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            :is=\"componentType\"\n            :to=\"to\"\n            :href=\"href\"\n            @click=\"onclick\"\n            :disabled=\"disabled\"\n    >\n        <slot></slot>\n    </button>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'btn',\n                    this.btnVariant,\n                    this.btnSize,\n                    this.btnBlock,\n                    this.btnDisabled,\n                    this.inactive ? 'btn-inactive' : ''\n                ];\n            },\n            componentType() {\n                return (this.href || this.to) ? 'b-link' : 'button';\n            },\n            btnBlock() {\n                return this.block ? `btn-block` : '';\n            },\n            btnVariant() {\n                return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n            },\n            btnSize() {\n                return this.size ? `btn-${this.size}` : '';\n            },\n            btnDisabled() {\n                return this.disabled ? 'disabled' : '';\n            }\n        },\n        props: {\n            block: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            inactive: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: [String, Object]\n            },\n            href: {\n                type: String\n            }\n        },\n        methods: {\n            onclick(e) {\n                if (this.disabled) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                } else {\n                    this.$emit('click', e);\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-' + (this.toolbar ? 'toolbar' : 'group'),\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            toolbar: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"left\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <div :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" class=\"card-img\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || showHeader\" :is=\"headerTag\" class=\"card-header\">\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || showFooter\" :is=\"footerTag\" class=\"card-footer\">\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            showHeader: {\n                type: Boolean,\n                default: false\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            showFooter: {\n                type: Boolean,\n                default: false\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"['card-' + type]\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\" @mouseenter=\"pause\" @mouseleave=\"start\" :style=\"{background,height}\">\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\" v-show=\"indicators\">\n            <li v-for=\"n in slides.length\"\n                :class=\"{active:n-1 === index}\"\n                @click=\"index=n-1\"\n            ></li>\n        </ol>\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\" role=\"listbox\">\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\" href=\"#\" role=\"button\" data-slide=\"prev\" @click.stop.prevent=\"prev\">\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Previous</span>\n            </a>\n            <a class=\"carousel-control-next\" href=\"#\" role=\"button\" data-slide=\"next\" @click.stop.prevent=\"next\">\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Next</span>\n            </a>\n        </template>\n    </div>\n</template>\n\n<script>\n    const DIRECTION = {\n        next: {\n            current: 'carousel-item-left',\n            next: 'carousel-item-right',\n            overlay: 'carousel-item-next'\n        },\n        prev: {\n            current: 'carousel-item-right',\n            next: 'carousel-item-left',\n            overlay: 'carousel-item-prev'\n        }\n    };\n\n    export default {\n        data() {\n            return {\n                index: 0,\n                isSliding: false,\n                slides: []\n            };\n        },\n        props: {\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            }\n        },\n        methods: {\n            // Previous slide\n            prev() {\n                if (this.index <= 0) {\n                    this.index = this.slides.length - 1;\n                } else {\n                    this.index--;\n                }\n            },\n\n            // Next slide\n            next() {\n                if (this.index >= this.slides.length - 1) {\n                    this.index = 0;\n                } else {\n                    this.index++;\n                }\n            },\n\n            // Pause auto rotation\n            pause() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                clearInterval(this._intervalId);\n            },\n\n            // Start auto rotate slides\n            start() {\n                if (this.interval === 0 || typeof this.interval === 'undefined') {\n                    return;\n                }\n                this._intervalId = setInterval(() => {\n                    this.next();\n                }, this.interval);\n            }\n        },\n        mounted() {\n            // Get all slides\n            this.slides = this.$el.querySelectorAll('.carousel-item');\n\n            // Set first slide as active\n            this.slides[0].classList.add('active');\n\n            // Auto rotate slides\n            this.start();\n        },\n        watch: {\n            index(val, oldVal) {\n                if (val === oldVal) {\n                    return;\n                }\n\n                if (this.isSliding) {\n                    this.index = oldVal;\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n\n                nextSlide.classList.add(direction.next, direction.overlay);\n                currentSlide.classList.add(direction.current);\n\n                this._carouselAnimation = setTimeout(() => {\n                    this.isSliding = false;\n                    this.$emit('slide', val);\n\n                    currentSlide.classList.remove('active');\n                    nextSlide.classList.add('active');\n\n                    currentSlide.classList.remove(direction.current);\n                    nextSlide.classList.remove(direction.next, direction.overlay);\n                }, 500);\n            }\n        },\n        destroyed() {\n            clearTimeout(this._carouselAnimation);\n            clearInterval(this._intervalId);\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"carousel-item\" :style=\"{background,height}\">\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :class=\"contentClasses\">\n            <h3 v-if=\"caption\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            caption: {\n                type: String\n            },\n            text: {\n                type: String\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                const classes = {\n                    'carousel-caption': Boolean(this.caption)\n                };\n                if (this.contentVisibleUp) {\n                    classes['d-none'] = true;\n                    classes[`d-${this.contentVisibleUp}-block`] = true;\n                }\n                return classes;\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            @enter=\"enter\"\n            @after-enter=\"clearHeight\"\n            @leave=\"leave\"\n            @after-leave=\"clearHeight\"\n            name=\"collapse\"\n    >\n        <div :class=\"classObject\" v-show=\"show\">\n            <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<style scoped>\n    .collapse-enter-active, .collapse-leave-active {\n        transition: all .35s ease;\n        overflow: hidden;\n    }\n\n    .collapse-enter, .collapse-leave-to {\n        /*height: 0;*/\n    }\n</style>\n\n<script>\n    export default {\n\n        data() {\n            return {\n                show: false\n            };\n        },\n\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    show: this.show\n                };\n            }\n        },\n\n        props: {\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            id: {\n                type: String,\n                required: true\n            }\n        },\n\n        methods: {\n            toggle() {\n                this.show = !this.show;\n            },\n            enter(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = '0px';\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = realHeight;\n            },\n            leave(el) {\n                el.style.height = 'auto';\n                const realHeight = getComputedStyle(el).height;\n                el.style.height = realHeight;\n\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n\n                el.style.height = '0px';\n            },\n            clearHeight(el) {\n                el.style.height = null;\n            }\n        },\n\n        created() {\n            this.$root.$on('collapse::toggle', target => {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            });\n        }\n    };\n\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","const ITEM_SELECTOR = [\n    '.dropdown-item:not(.disabled):not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n    '.dropdown-header:not([style*=\"display: none\"]):not([style*=\"display:none\"])'\n].join(',');\n\nexport default {\n    props: {\n        split: {\n            type: Boolean,\n            default: false\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    created() {\n        this.$root.$on('shown::dropdown', el => {\n            // To keep one dropdown opened on page\n            if (el !== this) {\n                this.visible = false;\n            }\n        });\n    },\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n\n            if (state) {\n                this.$root.$emit('shown::dropdown', this);\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n            } else {\n                this.$root.$emit('hidden::dropdown', this);\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if (typeof document !== 'undefined' && 'ontouchstart' in document.documentElement) {\n                    const children = Array.prototype.slice.call(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    methods: {\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n            if (this.visible) {\n                this.$nextTick(function () {\n                    // Focus first visible non-disabled item\n                    const items = this.getItems();\n                    if (items.length > 0) {\n                        items[0].focus();\n                    }\n                });\n            }\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                this.$nextTick(function () {\n                    // Return focus to original trigger button\n                    let el;\n                    if (this.split && this.$refs.toggle) {\n                        el = this.$refs.toggle.$el || this.$refs.toggle;\n                    } else {\n                        el = this.$refs.button.$el || this.$refs.button;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            const items = this.getItems();\n            if (items.length < 1) {\n                return;\n            }\n            let index = items.indexOf(e.target);\n            if (up && index > 0) {\n                index--;\n            } else if (!up && index < items.length - 1) {\n                index++;\n            }\n            if (index < 0) {\n                index = 0;\n            }\n            items[index].focus();\n        },\n        getItems() {\n            return Array.prototype.slice.call(this.$refs.menu.querySelectorAll(ITEM_SELECTOR));\n        }\n    }\n};\n","/**\n * Tries to generate id using uid if no id prop is provided.\n * NOTE: this mixin should be used only when `aria` and `for` tags are needed, in other cases.\n * it is better to prefer references/refs and events over relying on generated id.\n * @see https://github.com/bootstrap-vue/bootstrap-vue/issues/281\n *\n * Currently is being used in:\n *  - dropdown.vue\n *  - form-checkbox-vue\n *  - form-file.vue\n *  - form-input.vue\n *  - form-select.vue\n */\n\nconst inBrowser = typeof window !== 'undefined';\nconst UNSAFE_UID = (inBrowser && window.UNSAFE_UID === true) || (!inBrowser && process.env.UNSAFE_UID === true);\n\nexport default {\n    computed: {\n        _id() {\n            if (!UNSAFE_UID || this.id) {\n                return this.id;\n            }\n\n            return `__b_${this._uid}__`;\n        }\n    }\n};\n","<template>\n    <div :class=\"['dropdown','btn-group',{dropup, show: visible}]\">\n\n        <b-button :class=\"{'dropdown-toggle': !split, 'btn-link': link}\"\n                  ref=\"button\"\n                  :id=\"_id\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"text\">{{text}}</slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split',{'btn-link': link}]\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"split ? null : _id\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import clickOut from '../mixins/clickout';\n    import dropdown from '../mixins/dropdown';\n    import generateId from '../mixins/generate-id';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [clickOut, dropdown, generateId],\n        components: {bButton},\n        data() {\n            return {\n                visible: false\n            };\n        },\n        props: {\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            link: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            clickOutListener() {\n                this.visible = false;\n            },\n            click(e) {\n                if (this.disabled) {\n                    this.visible = false;\n                    return;\n                }\n\n                if (this.split) {\n                    this.$emit('click', e);\n                    this.$root.$emit('shown::dropdown', this);\n                } else {\n                    this.toggle();\n                }\n            }\n        }\n    };\n\n</script>\n","<template>\n    <a :is=\"itemType\"\n       :class=\"['dropdown-item',{ disabled }]\"\n       :to=\"to\"\n       :href=\"hrefString\"\n       :disabled=\"disabled\"\n       tabindex=\"-1\"\n       role=\"menuitem\"\n       @click=\"click\"\n       @click.native=\"click\"\n    >\n        <slot></slot>\n    </a>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        extends: bLink,\n        computed: {\n            itemType() {\n                return (this.href || this.to) ? this.componentType : 'button';\n            }\n        }\n    };\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" tabindex=\"-1\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\">\n        <label :for=\"target\"\n               v-if=\"label\"\n               :class=\"['col-form-label',labelLayout,labelAlignClass]\"\n               v-html=\"label\"\n        ></label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div class=\"form-text form-control-feedback\"\n                 v-if=\"feedback\"\n                 role=\"alert\"\n                 aria-live=\"polite\"\n                 v-html=\"feedback\"\n            ></div>\n            <small class=\"form-text text-muted\"\n                   v-if=\"description\"\n                   v-html=\"description\"\n            ></small>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            labelLayout() {\n                return this.horizontal ? ('col-sm-' + this.labelSize) : 'col-12';\n            },\n            labelAlignClass() {\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.labelSize)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelSize: {\n                type: Number,\n                default: 3\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: 'input,select,textarea,.form-control,.form-control-static,.dropdown,.dropup'\n            }\n        }\n    };\n</script>\n","export default {\n    computed: {\n        inputClass() {\n            return [\n                this.size ? `form-control-${this.size}` : null,\n                this.state ? `form-control-${this.state}` : null\n            ];\n        },\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        name: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        plain: {\n            type: Boolean,\n            default: false\n        },\n        state: {\n            type: String\n        },\n        size: {\n            type: String\n        },\n        id: {\n            type: String\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","<template>\n    <label :class=\"[inputClass,checkboxClass,custom?'custom-checkbox':null]\">\n        <input\n                type=\"checkbox\"\n                :id=\"_id\"\n                :name=\"name\"\n                :value=\"value\"\n                :disabled=\"disabled\"\n\n                :class=\"[custom?'custom-control-input':null]\"\n                :checked=\"checked===value\"\n                @change=\"$emit('change',$event.target.checked?value:uncheckedValue)\"\n        >\n        <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\n        <span :class=\"[custom?'custom-control-description':null]\"><slot></slot></span>\n    </label>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n    import formCheckBoxMixin from '../mixins/form-checkbox';\n    import generateId from '../mixins/generate-id';\n\n    export default {\n        mixins: [formMixin, formCheckBoxMixin, generateId],\n        model: {\n            prop: 'checked',\n            event: 'change'\n        },\n        props: {\n            value: {\n                default: true\n            },\n            uncheckedValue: {\n                default: false\n            },\n            checked: {\n                default: true\n            }\n        }\n    };\n\n</script>\n","export default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (Array.isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = Object.keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            for (let i = 0; i < formOptions.length; i++) {\n                if (formOptions[i].value === this.localValue) {\n                    if (this.returnObject) {\n                        return formOptions[i];\n                    }\n                    return formOptions[i].value;\n                }\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: [String],\n            default: 'value'\n        },\n        textField: {\n            type: [String],\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","<template>\n    <div :class=\"[inputClass,this.stacked?'custom-controls-stacked':'']\">\n        <label :class=\"[checkboxClass,custom?'custom-radio':null]\" v-for=\"option in formOptions\">\n            <input\n                    v-model=\"localValue\"\n                    :class=\"custom?'custom-control-input':null\"\n                    type=\"radio\"\n                    :value=\"option.value\"\n                    :name=\"option.name\"\n                    :id=\"option.id\"\n                    :disabled=\"option.disabled\"\n                    ref=\"inputs\"\n            >\n\n            <span class=\"custom-control-indicator\" v-if=\"custom\"></span>\n\n            <span :class=\"custom?'custom-control-description':null\" v-html=\"option.text\"></span>\n\n        </label>\n    </div>\n</template>\n\n<script>\n    import formOptionsMixin from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n    import formCheckBoxMixin from '../mixins/form-checkbox';\n\n    export default {\n        mixins: [formMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        computed: {\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            }\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <p :id=\"_id\"\n       :class=\"['form-control-static',inputClass]\"\n       v-html=\"staticValue\"\n    >\n        <slot></slot>\n    </p>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n    import generateId from '../mixins/generate-id';\n\n    export default {\n        mixins: [formMixin, generateId],\n        computed: {\n            staticValue() {\n                return this.formatter ? this.formatter(this.value) : this.value;\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            formatter: {\n                type: Function\n            }\n        }\n    };\n\n</script>\n","<template>\n    <input v-if=\"!static\"\n           :type=\"type\"\n           :value=\"value\"\n           :name=\"name\"\n           :id=\"_id\"\n           :disabled=\"disabled\"\n           ref=\"input\"\n\n           :is=\"textarea?'textarea':'input'\"\n           :class=\"['form-control',inputClass]\"\n           :rows=\"rows || rowsCount\"\n\n           :placeholder=\"placeholder\"\n\n           @input=\"onInput($event.target.value)\"\n           @change=\"onChange($event.target.value)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    />\n    <b-form-input-static v-else\n                         :id=\"_id\"\n                         :value=\"value\"\n                         :formatter=\"formatter\"\n    ></b-form-input-static>\n</template>\n\n<script>\n    import formMixin from '../mixins/form';\n    import generateId from '../mixins/generate-id';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin, generateId],\n        components: {bFormInputStatic},\n        computed: {\n            rowsCount() {\n                return (this.value || '').toString().split('\\n').length;\n            }\n        },\n        methods: {\n            format(value) {\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value);\n                    if (formattedValue !== value) {\n                        value = formattedValue;\n                        this.$refs.input.value = formattedValue;\n                    }\n                }\n                return value;\n            },\n            onInput(value) {\n                if (!this.lazyFormatter) {\n                    value = this.format(value);\n                }\n                this.$emit('input', value);\n            },\n            onChange(value) {\n                value = this.format(value);\n                this.$emit('input', value);\n                this.$emit('change', value);\n            },\n            onKeyUp(e) {\n                this.$emit('keyup', e);\n            }\n        },\n        props: {\n            value: {\n                default: null\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <label :class=\"[custom?'custom-file':null,inputClass]\"\n           @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               :name=\"name\"\n               :id=\"_id\"\n               :disabled=\"disabled\"\n               ref=\"input\"\n               :accept=\"accept\"\n\n               class=\"custom-file-input\"\n               @change=\"onFileChange\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null,inputClass]\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </label>\n</template>\n\n<style>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import formMixin from '../mixins/form';\n    import generateId from '../mixins/generate-id';\n\n    export default {\n        mixins: [formMixin, generateId],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(Array.prototype.concat.apply([], filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(Array.prototype.concat.apply([], filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"[inputClass,custom?'custom-select':null]\"\n            :name=\"name\"\n            :id=\"_id\"\n            v-model=\"localValue\"\n            :disabled=\"disabled\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import formOptions from '../mixins/form-options';\n    import formMixin from '../mixins/form';\n    import generateId from '../mixins/generate-id';\n\n    export default {\n        mixins: [formMixin, formOptions, generateId],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\" :class=\"classObject\" ref=\"item\" :to=\"to\" :href=\"href\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    const actionTags = ['a', 'router-link', 'button', 'b-link'];\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'list-group-item',\n                    this.listState,\n                    this.active ? 'active' : null,\n                    this.disabled ? 'disabled' : null,\n                    this.isAction ? 'list-group-item-action' : null\n                ];\n            },\n            isAction() {\n                if (this.action === false) {\n                    return false;\n                }\n                return this.action || this.to || this.href || actionTags.indexOf(this.tag) !== -1;\n            },\n            listState() {\n                return this.variant ? `list-group-item-${this.variant}` : null;\n            },\n            myTag() {\n                if (this.tag) {\n                    return this.tag;\n                }\n                return (this.to || this.href) ? 'b-link' : 'div';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: null\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            action: {\n                type: Boolean,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            to: {\n                type: String,\n                default: null\n            },\n            href: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div key=\"modal\" :id=\"id\"\n                 v-show=\"is_visible\"\n                 :class=\"['modal',{fade: fade, show: is_visible, in: is_visible}]\"\n                 role=\"dialog\"\n                 @click=\"onClickOut($event)\"\n                 @keyup.esc=\"onEsc($event)\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '_modal_title')\"\n                         :aria-describedby=\"id ? (id + '_modal_body') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\" ref=\"header\" v-if=\"!hideHeader\">\n                            <slot name=\"modal-header\">\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"closeTitle\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                                <h5 class=\"modal-title\" :id=\"id ? (id + '_modal_title') : null\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '_modal_body') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn variant=\"secondary\" @click=\"hide(false)\">{{closeTitle}}</b-btn>\n                                <b-btn variant=\"primary\" @click=\"hide(true)\">{{okTitle}}</b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: fade, show: is_visible, in: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'input:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'select:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'textarea:not([disabled]):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        'a:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])',\n        '[tabindex]:not([disabled]):not(.disabled):not([style*=\"display: none\"]):not([style*=\"display:none\"])'\n    ].join(',');\n\n    export default {\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            fade: {\n                type: Boolean,\n                default: true\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            },\n            closeOnBackdrop: {\n                type: Boolean,\n                default: true\n            },\n            closeOnEsc: {\n                type: Boolean,\n                default: true\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n                this.$nextTick(function () {\n                    // Make sure DOM is updated before focusing\n                    this.focusFirst();\n                });\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hidden', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.closeOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && this.closeOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Focus the modal's first focusable item, searching footer, then body, then header, else the modal\n                let el;\n                if (this.$refs.footer) {\n                    el = this.$refs.footer.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el && this.$refs.body) {\n                    el = this.$refs.body.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el && this.$refs.header) {\n                    el = this.$refs.header.querySelector(FOCUS_SELECTOR);\n                }\n                if (!el) {\n                    el = this.$refs.content;\n                }\n                el.focus();\n            },\n            returnFocusTo() {\n                if (this.return_focus) {\n                    const el = (typeof this.return_focus === 'string') ?\n                        document.querySelector(this.returnFocus) :\n                        this.return_focus;\n\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            }\n        },\n        created() {\n            this.$root.$on('show::modal', (id, triggerEl) => {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || this.return_focus || this.returnFocus || null;\n                    this.show();\n                }\n            });\n\n            this.$root.$on('hide::modal', id => {\n                if (id === this.id) {\n                    this.hide();\n                }\n            });\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\" @click=\"onclick\">\n        <b-link :class=\"classObject\"\n                :to=\"to\"\n                :href=\"href\"\n                :exact=\"exact\"\n                :disabled=\"disabled\"\n        >\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\n    import bLink from './link.vue';\n\n    export default {\n        components: {bLink},\n        computed: {\n            classObject() {\n                return [\n                    'nav-link',\n                    this.active ? 'active' : '',\n                    this.disabled ? 'disabled' : ''\n                ];\n            }\n        },\n        props: {\n            active: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            to: {\n                type: [String, Object]\n            },\n            href: {\n                type: String\n            },\n            exact: {\n                type: Boolean\n            }\n        },\n        methods: {\n            onclick(e) {\n                // Hide all drop-downs including navbar-toggle\n                this.$root.$emit('shown::dropdown', this);\n                this.$emit('click', e);\n            }\n        }\n    };\n</script>\n","<template>\n    <li :class=\"['nav-item','dropdown', {dropup, show: visible}]\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"\"\n           ref=\"button\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"text\"><span v-html=\"text\"></span></slot>\n        </a>\n\n        <div :class=\"['dropdown-menu',{'dropdown-menu-right': right}]\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"'b_dropdown_button_' + _uid\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import clickOut from '../mixins/clickout';\n    import dropdown from '../mixins/dropdown';\n\n    export default {\n        mixins: [\n            clickOut,\n            dropdown\n        ],\n        data() {\n            return {\n                visible: false\n            };\n        },\n        computed: {\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            }\n        },\n        props: {\n            caret: {\n                type: Boolean,\n                default: true\n            }\n        },\n        methods: {\n            clickOutListener() {\n                this.visible = false;\n            }\n        }\n    };\n</script>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        }\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? `navbar-toggleable-${this.toggleBreakpoint}` : null\n                ];\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: 'sm'\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: String\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"btn-group pagination\" role=\"group\" aria-label=\"Pagination\">\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == 1 \"\n                @click.prevent=\"(currentPage == 1) ? _return : currentPage--\">\n            <span aria-hidden=\"true\">&laquo;</span>\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,currentPage === 1 ?  'active' : '']\"\n                @click.prevent=\"currentPage = 1\"\n                v-show=\"showPrev\">1\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showPrev\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn',\n                btnSize,\n                btnVariant(index),\n                index + diff === currentPage ? 'active' : '',\n                index + diff !== currentPage ? 'hidden-xs-down' : '']\"\n                v-for=\"_,index in pageLinks\"\n                @click.prevent=\"currentPage = index + diff\">{{index + diff}}\n        </button>\n\n        <span :class=\"['btn','btn-'+secondaryVariant,btnSize]\" v-show=\"showNext\">...</span>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize,numberOfPages === currentPage ? 'active' : '']\"\n                v-show=\"showNext\"\n                @click.prevent=\"currentPage = numberOfPages\">{{numberOfPages}}\n        </button>\n\n        <button type=\"button\"\n                :class=\"['btn','btn-'+secondaryVariant,btnSize]\"\n                :disabled=\"currentPage == numberOfPages\"\n                @click.prevent=\"(currentPage == numberOfPages) ? _return : currentPage++\">\n            <span aria-hidden=\"true\">&raquo;</span>\n        </button>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                diff: 1,\n                showPrev: false,\n                showNext: false,\n                currentPage: this.value\n            };\n        },\n        computed: {\n            numberOfPages() {\n                const result = Math.ceil(this.totalRows / this.perPage);\n                return (result < 1) ? 1 : result;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            pageLinks() {\n                if (this.currentPage > this.numberOfPages) {\n                    this.currentPage = 1;\n                }\n\n                // Defaults\n                this.diff = 1;\n                this.showPrev = false;\n                this.showNext = false;\n\n                // If less pages than limit just show this pages\n                if (this.numberOfPages <= this.limit) {\n                    return this.numberOfPages;\n                }\n\n                // If at the beginning of the list\n                if (this.currentPage <= this.limit - 2) {\n                    this.diff = 1;\n                    this.showNext = true;\n                    return this.limit - 2;\n                }\n\n                // If at the end of the list\n                if (this.currentPage > this.numberOfPages - this.limit + 2) {\n                    this.diff = this.numberOfPages - this.limit + 3;\n                    this.showPrev = true;\n                    return this.limit - 2;\n                }\n\n                // Else we are somewhere in the middle\n                this.diff = this.currentPage - 1;\n                this.showPrev = this.currentPage >= this.limit;\n                this.showNext = this.currentPage <= this.numberOfPages - this.limit + 1;\n                return this.limit;\n            }\n        },\n        methods: {\n            btnVariant(index) {\n                return (index + this.diff === this.currentPage) ? `btn-${this.variant}` : `btn-${this.secondaryVariant}`;\n            },\n            _return() {\n\n            }\n        },\n        watch: {\n            currentPage(newPage, oldPage) {\n                if (newPage === oldPage) {\n                    return;\n                }\n\n                this.$emit('input', newPage);\n            },\n            value(newValue, oldValue) {\n                if (newValue !== oldValue) {\n                    this.currentPage = newValue;\n                }\n            }\n        },\n        props: {\n            value: {\n                type: Number,\n                default: 1\n            },\n            limit: {\n                type: Number,\n                default: 3\n            },\n            perPage: {\n                type: Number,\n                default: 20\n            },\n            totalRows: {\n                type: Number,\n                default: 20\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            variant: {\n                type: String,\n                default: 'primary'\n            },\n            secondaryVariant: {\n                type: String,\n                default: 'secondary'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n\n        <div tabindex=\"-1\"\n             class=\"popover fade\"\n             :class=\"[classState ? 'show' : '', popoverAlignment]\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n             :style=\"popoverStyle\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import Tether from 'tether';\n\n    // Controls which events are mapped for each named trigger, and the expected popover behavior for each.\n    const TRIGGER_LISTENERS = {\n        click: {click: 'toggle'},\n        hover: {mouseenter: 'show', mouseleave: 'hide'},\n        focus: {focus: 'show', blur: 'hide'}\n    };\n\n    const PLACEMENT_PARAMS = {\n        top: 'bottom center',\n        bottom: 'top center',\n        left: 'middle right',\n        right: 'middle left'\n    };\n\n    const TETHER_CLASS_PREFIX = 'bs-tether';\n\n    const TETHER_CLASSES = {\n        element: false,\n        enabled: false\n    };\n\n    const TRANSITION_DURATION = 150;\n\n    export default {\n        props: {\n            constraints: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            debounce: {\n                type: [Number],\n                default: 300,\n                validator(value) {\n                    return value >= 0;\n                }\n            },\n            delay: {\n                type: [Number, Object],\n                default: 0,\n                validator(value) {\n                    if (typeof value === 'number') {\n                        return value >= 0;\n                    } else if (value !== null && typeof value === 'object') {\n                        return typeof value.show === 'number' &&\n                            typeof value.hide === 'number' &&\n                            value.show >= 0 &&\n                            value.hide >= 0;\n                    }\n\n                    return false;\n                }\n            },\n            offset: {\n                type: String,\n                default: '0 0',\n                validator(value) {\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n                }\n            },\n            placement: {\n                type: String,\n                default: 'top',\n                validator(value) {\n                    return Object.keys(PLACEMENT_PARAMS).indexOf(value) !== -1;\n                }\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            },\n            show: {\n                type: Boolean,\n                default: null\n            },\n            targetOffset: {\n                type: String,\n                default: '0 0',\n                validator(value) {\n                    // Regex test for a pair of units, either 0 exactly, px, or percentage\n                    return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n                }\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: () => ['click', 'focus'],\n                validator(value) {\n                    // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                    if (value === false || value === '') {\n                        return true;\n                    } else if (typeof value === 'string') {\n                        return Object.keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                    } else if (Array.isArray(value)) {\n                        const keys = Object.keys(TRIGGER_LISTENERS);\n                        value.forEach(item => {\n                            if (keys.indexOf(item) === -1) {\n                                return false;\n                            }\n                        });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        },\n\n        data() {\n            return {\n                triggerState: this.show,\n                classState: this.show,\n                lastEvent: null\n            };\n        },\n\n        computed: {\n            /**\n             * Arrange event trigger hooks as array for all input types.\n             *\n             * @return Array\n             */\n            normalizedTriggers() {\n                if (this.triggers === false) {\n                    return [];\n                } else if (typeof this.triggers === 'string') {\n                    return [this.triggers];\n                }\n                return this.triggers;\n            },\n\n            /**\n             * Class property to be used for Popover rendering\n             *\n             * @return String\n             */\n            popoverAlignment() {\n                return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n            },\n\n            /**\n             * Determine if the Popover should be shown.\n             *\n             * @return Boolean\n             */\n            showState() {\n                return this.show !== false && (this.triggerState || this.show);\n            }\n        },\n\n        watch: {\n            /**\n             * Refresh Tether display properties\n             */\n            constraints() {\n                this.setOptions();\n            },\n\n            /**\n             * Refresh Popover event triggers\n             * @param {Array} newTriggers\n             * @param {Array} oldTriggers\n             */\n            normalizedTriggers(newTriggers, oldTriggers) {\n                this.updateListeners(newTriggers, oldTriggers);\n            },\n\n            /**\n             * Refresh Tether display properties\n             */\n            offset() {\n                this.setOptions();\n            },\n\n            /**\n             * Refresh Tether display properties\n             */\n            placement() {\n                this.setOptions();\n            },\n\n            /**\n             * Affect 'show' state in response to status change\n             * @param  {Boolean} val\n             */\n            showState(val) {\n                const delay = this.getDelay(val);\n\n                clearTimeout(this._timeout);\n\n                if (delay) {\n                    this._timeout = setTimeout(() => this.togglePopover(val), delay);\n                } else {\n                    this.togglePopover(val);\n                }\n            }\n        },\n\n        methods: {\n            /**\n             * Add all event hooks for the given trigger\n             * @param {String} trigger\n             */\n            addListener(trigger) {\n                // eslint-disable-next-line guard-for-in\n                for (const item in TRIGGER_LISTENERS[trigger]) {\n                    this._trigger.addEventListener(item, e => this.eventHandler(e));\n                }\n            },\n\n            /**\n             * Tidy removal of Tether object from the DOM\n             */\n            destroyTether() {\n                if (this._tether && !this.showState) {\n                    this._tether.destroy();\n                    this._tether = null;\n\n                    const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                    this._trigger.className = this._trigger.className.replace(regx, '');\n                }\n            },\n\n            /**\n             * Handle multiple event triggers\n             * @param  {Object} e\n             */\n            eventHandler(e) {\n                // If this event is right after a previous successful event, ignore it (debounce)\n                if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                    return;\n                }\n\n                // Look up the expected popover action for the event\n                // eslint-disable-next-line guard-for-in\n                for (const trigger in TRIGGER_LISTENERS) {\n                    for (const event in TRIGGER_LISTENERS[trigger]) {\n                        if (event === e.type) {\n                            const action = TRIGGER_LISTENERS[trigger][event];\n\n                            // If the expected event action is the opposite of the current state, allow it\n                            if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                                this.triggerState = !this.triggerState;\n                                this.lastEvent = e.timeStamp;\n                            }\n                            return;\n                        }\n                    }\n                }\n            },\n\n            /**\n             * Get the currently applicable popover delay\n             *\n             * @returns Number\n             */\n            getDelay(state) {\n                if (typeof this.delay === 'object') {\n                    return state ? this.delay.show : this.delay.hide;\n                }\n\n                return this.delay;\n            },\n\n            /**\n             * Tether construct params for each show event.\n             *\n             * @return Object\n             */\n            getTetherOptions() {\n                return {\n                    attachment: PLACEMENT_PARAMS[this.placement],\n                    element: this._popover,\n                    target: this._trigger,\n                    classes: TETHER_CLASSES,\n                    classPrefix: TETHER_CLASS_PREFIX,\n                    offset: this.offset,\n                    constraints: this.constraints,\n                    targetOffset: this.targetOffset\n                };\n            },\n\n            /**\n             * Hide popover and fire event\n             */\n            hidePopover() {\n                this.classState = false;\n                clearTimeout(this._timeout);\n                this._timeout = setTimeout(() => {\n                    this._popover.style.display = 'none';\n                    this.destroyTether();\n                }, TRANSITION_DURATION);\n            },\n\n            /**\n             * Refresh the Popover position in order to respond to changes\n             */\n            refreshPosition() {\n                if (this._tether) {\n                    this.$nextTick(() => {\n                        this._tether.position();\n                    });\n                }\n            },\n\n            /**\n             * Remove all event hooks for the given trigger\n             * @param {String} trigger\n             */\n            removeListener(trigger) {\n                // eslint-disable-next-line guard-for-in\n                for (const item in TRIGGER_LISTENERS[trigger]) {\n                    this._trigger.removeEventListener(item, e => this.eventHandler(e));\n                }\n            },\n\n            /**\n             * Update tether options\n             */\n            setOptions() {\n                if (this._tether) {\n                    this._tether.setOptions(this.getTetherOptions());\n                }\n            },\n\n            /**\n             * Display popover and fire event\n             */\n            showPopover() {\n                clearTimeout(this._timeout);\n\n                if (!this._tether) {\n                    this._tether = new Tether(this.getTetherOptions());\n                }\n                this._popover.style.display = 'block';\n\n                // Make sure the popup is rendered in the correct location\n                this.refreshPosition();\n\n                this.$nextTick(() => {\n                    this.classState = true;\n                });\n            },\n\n            /**\n             * Handle Popover show or hide instruction\n             */\n            togglePopover(newShowState) {\n                this.$emit('showChange', newShowState);\n                if (newShowState) {\n                    this.showPopover();\n                    this.$root.$emit('shown::popover');\n                } else {\n                    this.hidePopover();\n                    this.$root.$emit('hidden::popover');\n                }\n            },\n\n            /**\n             * Study the 'triggers' component property and apply all selected triggers\n             * @param {Array} triggers\n             * @param {Array} appliedTriggers\n             */\n            updateListeners(triggers, appliedTriggers = []) {\n                const newTriggers = [];\n                const removeTriggers = [];\n\n                // Look for new events not yet mapped (all of them on first load)\n                triggers.forEach(item => {\n                    if (appliedTriggers.indexOf(item) === -1) {\n                        newTriggers.push(item);\n                    }\n                });\n\n                // Disable any removed event triggers\n                appliedTriggers.forEach(item => {\n                    if (triggers.indexOf(item) === -1) {\n                        removeTriggers.push(item);\n                    }\n                });\n\n                // Apply trigger mapping changes\n                newTriggers.forEach(item => this.addListener(item));\n                removeTriggers.forEach(item => this.removeListener(item));\n            }\n        },\n\n        created() {\n            this.$root.$on('hide::popover', () => {\n                this.triggerState = false;\n            });\n        },\n\n        mounted() {\n            // Configure tether\n            this._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n            this._popover = this.$refs.popover;\n            this._popover.style.display = 'none';\n            this._timeout = 0;\n\n            // Add listeners for specified triggers and complementary click event\n            this.updateListeners(this.normalizedTriggers);\n\n            // Display popover if prop is set on load\n            if (this.showState) {\n                this.showPopover();\n            }\n        },\n\n        updated() {\n            this.refreshPosition();\n        },\n\n        beforeDestroy() {\n            this.normalizedTriggers.forEach(item => this.removeListener(item));\n            clearTimeout(this._timeout);\n            this.destroyTether();\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :class=\"['table',striped?'table-striped':'',hover?'table-hover':'']\">\n        <thead>\n        <tr>\n            <th @click=\"headClick(field,key)\"\n                :class=\"[field.sortable?'sorting':null,sortBy===key?'sorting_'+(sortDesc?'desc':'asc'):'',field.class?field.class:null]\"\n                v-for=\"field,key in fields\"\n                v-html=\"field.label\"\n            ></th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr v-for=\"(item,index) in _items\" :key=\"items_key\" :class=\"[item.state?'table-'+item.state:null]\" @click=\"rowClicked(item, index)\">\n            <td v-for=\"(field,key) in fields\" :class=\"[field.class?field.class:null]\">\n                <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import bPagination from './pagination.vue';\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n\n        if (v instanceof Object) {\n            return Object.keys(v).map(k => toString(v[k])).join(' ');\n        }\n\n        return String(v);\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {numeric: true});\n    };\n\n    export default {\n        components: {bPagination},\n        data() {\n            return {\n                sortBy: null,\n                sortDesc: true\n            };\n        },\n        props: {\n            items: {\n                type: Array,\n                default: () => []\n            },\n            fields: {\n                type: Object,\n                default: () => {\n                }\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            items_key: {\n                type: String,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                type: Function,\n                default: null\n            },\n            value: {\n                type: Array,\n                default: () => []\n            }\n        },\n\n        computed: {\n            _items() {\n                if (!this.items) {\n                    return [];\n                }\n\n                if (this.itemsProvider) {\n                    return this.itemsProvider(this);\n                }\n\n                let items = this.items.slice();\n\n                // Apply filter\n                if (this.filter) {\n                    if (this.filter instanceof Function) {\n                        items = items.filter(this.filter);\n                    } else {\n                        let regex;\n                        if (this.filter instanceof RegExp) {\n                            regex = this.filter;\n                        } else {\n                            regex = new RegExp('.*' + this.filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(toString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n                }\n\n                // Apply Sort\n                const sortCompare = this.sortCompare || defaultSortCompare;\n                if (this.sortBy) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, this.sortBy);\n                        return this.sortDesc ? r : r * -1;\n                    });\n                }\n\n                this.$emit('input', items);\n\n                // Apply pagination\n                if (this.perPage) {\n                    items = items.slice((this.currentPage - 1) * this.perPage, this.currentPage * this.perPage);\n                }\n                return items;\n            }\n        },\n        methods: {\n            rowClicked(item, index) {\n                this.$emit('row-clicked', item, index);\n            },\n            headClick(field, key) {\n                if (!field.sortable) {\n                    this.sortBy = null;\n                    return;\n                }\n\n                if (key === this.sortBy) {\n                    this.sortDesc = !this.sortDesc;\n                }\n\n                this.sortBy = key;\n            }\n        }\n    };\n</script>\n\n\n<style>\n    /* https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table thead > tr > th.sorting_asc, table thead > tr > th.sorting_desc, table thead > tr > th.sorting,\n    table thead > tr > td.sorting_asc,\n    table thead > tr > td.sorting_desc,\n    table thead > tr > td.sorting {\n        padding-right: 30px;\n    }\n\n    table thead > tr > th:active,\n    table thead > tr > td:active {\n        outline: none;\n    }\n\n    table thead .sorting,\n    table thead .sorting_asc,\n    table thead .sorting_desc,\n    table thead .sorting_asc_disabled,\n    table thead .sorting_desc_disabled {\n        cursor: pointer;\n        position: relative;\n    }\n\n    table thead .sorting:before, table thead .sorting:after,\n    table thead .sorting_asc:before,\n    table thead .sorting_asc:after,\n    table thead .sorting_desc:before,\n    table thead .sorting_desc:after,\n    table thead .sorting_asc_disabled:before,\n    table thead .sorting_asc_disabled:after,\n    table thead .sorting_desc_disabled:before,\n    table thead .sorting_desc_disabled:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table thead .sorting:before,\n    table thead .sorting_asc:before,\n    table thead .sorting_desc:before,\n    table thead .sorting_asc_disabled:before,\n    table thead .sorting_desc_disabled:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table thead .sorting:after,\n    table thead .sorting_asc:after,\n    table thead .sorting_desc:after,\n    table thead .sorting_asc_disabled:after,\n    table thead .sorting_desc_disabled:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table thead .sorting_asc:before,\n    table thead .sorting_desc:after {\n        opacity: 1;\n    }\n\n    table thead .sorting_asc_disabled:before,\n    table thead .sorting_desc_disabled:after {\n        opacity: 0;\n    }\n</style>\n","<template>\n    <div class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card? 'card-header-'+navStyle: null]\">\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       v-if=\"!tab.headHtml\"\n                        v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    import observeDom from '../utils/observe-dom';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab + 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab - 1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force) {\n                // Prevent setting same tab!\n                if (!force && index === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore disabled\n                if (tab.disabled) {\n                    return;\n                }\n\n                // Deactivate previous active tab\n                if (this.tabs[this.currentTab]) {\n                    this.$set(this.tabs[this.currentTab], 'localActive', false);\n                }\n\n                // Set new tab as active\n                this.$set(tab, 'localActive', true);\n\n                // Update currentTab\n                this.currentTab = index;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Set initial active tab\n                let tabIndex = this.currentTab;\n\n                if (this.currentTab === null || this.currentTab === undefined) {\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                if (tabIndex > this.tabs.length - 1) {\n                    tabIndex = this.tabs.length - 1;\n                }\n\n                this.setTab(tabIndex || 0, true);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <div role=\"tabpanel\"\n             class=\"tab-pane\"\n             :class=\"[{show, fade, disabled, active: localActive}]\"\n             v-if=\"localActive || !lazy\"\n             v-show=\"localActive || lazy\"\n             ref=\"panel\">\n             <slot></slot>\n        </div>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: false,\n                lazy: true,\n                show: false\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div tabindex=\"-1\" :class=\"['tooltip','tooltip-' + this.placement]\"\n             ref=\"popover\" @focus=\"$emit('focus')\" @blur=\"$emit('blur')\"\n             :style=\"{opacity:showState?1:0}\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content || title\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block !important;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import bPopover from './popover.vue';\n\n    export default {\n        extends: bPopover,\n        props: {\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('collapse::toggle', target);\n            });\n        });\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n    bind(el, binding) {\n        target(el, binding, listen_types, ({targets, vm}) => {\n            targets.forEach(target => {\n                vm.$root.$emit('show::modal', target, el);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","obs","mutations","addedNodes","length","removedNodes","observe","Object","assign","childList","subtree","targets","binding","listen_types","fn","vm","__vue__","console","warn","keys","modifiers","filter","t","all_listen_types","value","push","listener","forEach","type","log","render","data","countDownTimerId","dismissed","created","this","state","computed","classObject","alertVariant","dismissible","variant","localShow","show","props","String","default","Boolean","Number","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","let","dismissCountDown","setInterval","componentType","$router","to","activeClass","disabled","exact","click","e","href","preventDefault","stopPropagation","$root","components","bLink","items2","last","items","map","item","text","link","active","__active","Array","required","onclick","btnVariant","btnSize","btnBlock","btnDisabled","inactive","block","size","toolbar","vertical","left","right","id","blockClass","overlay","cardVariant","cardInverse","inverse","indexOf","cardAlign","align","header","showHeader","headerTag","footer","showFooter","footerTag","title","subTitle","noBlock","img","imgAlt","deck","columns","DIRECTION","next","current","prev","index","isSliding","slides","interval","indicators","controls","height","background","pause","_intervalId","start","$el","querySelectorAll","classList","add","val","oldVal","direction","currentSlide","nextSlide","_carouselAnimation","setTimeout","remove","destroyed","clearTimeout","contentVisibleUp","caption","contentClasses","classes","carousel-caption","navbar-collapse","isNav","toggle","enter","style","realHeight","getComputedStyle","offsetHeight","leave","clearHeight","$on","target","document","documentElement","_clickOutListener","removeEventListener","contains","clickOutListener","ITEM_SELECTOR","join","split","dropup","visible","old","children","prototype","slice","call","body","noop","$nextTick","getItems","focus","onTab","onEsc","$refs","button","focusNext","up","menu","inBrowser","UNSAFE_UID","process","env","_id","_uid","mixins","clickOut","dropdown","generateId","bButton","toggleText","extends","itemType","tag","selected","dropdownToggle","caret","displayItem","returnObject","model","forceDefault","defaultText","result","list","position","select","hub","inline","inputState","labelLayout","horizontal","labelSize","labelAlignClass","labelTextAlign","inputLayout","updateTarget","content","input","querySelector","inputSelector","updated","label","description","feedback","inputClass","custom","plain","name","checkboxClass","custom-control","form-check-inline","formMixin","formCheckBoxMixin","prop","event","uncheckedValue","checked","formOptions","options","isArray","option","valueField","textField","selectedValue","i","localValue","old_value","formOptionsMixin","stacked","staticValue","formatter","Function","bFormInputStatic","rowsCount","toString","format","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","static","placeholder","rows","textarea","selectedFile","dragging","selectedLabel","multiple","selectedFormat","replace","file","computedChooseLabel","chooseLabel","newVal","onFileChange","dataTransfer","noTraverse","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","setFiles","concat","apply","files","filesArray","match","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","action","myTag","verticalAlignClass","verticalAlign","rightAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","hide","fade","closeTitle","okTitle","closeOnBackdrop","closeOnEsc","hideHeader","hideFooter","hideHeaderClose","enforceFocus","focusFirst","isOK","canceled","cancel","returnFocusTo","onClickOut","triggerEl","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","fixed","sticky","toggleable","toggleBreakpoint","diff","showPrev","showNext","currentPage","numberOfPages","Math","ceil","totalRows","perPage","pageLinks","limit","secondaryVariant","_return","newPage","oldPage","newValue","oldValue","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","TETHER_CLASS_PREFIX","TETHER_CLASSES","element","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","offset","test","placement","popoverStyle","targetOffset","triggers","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","getDelay","_timeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","RegExp","className","timeStamp","getTetherOptions","attachment","_popover","classPrefix","hidePopover","display","refreshPosition","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","beforeDestroy","progressVariant","striped","animated","styleObject","width","progress","p","pow","precision","round","max","showProgress","showValue","v","k","defaultSortCompare","a","b","sortBy","localeCompare","undefined","numeric","bPagination","sortDesc","fields","items_key","sortCompare","itemsProvider","_items","regex","lastIndex","sort","r","rowClicked","headClick","field","key","sortable","currentTab","noFade","card","small","lazy","setTab","$set","navStyle","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","tabIndex","observeDom","tabsContainer","bind","beforeLeave","localActive","headHtml","bPopover","ref","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"AAOA,QAAwBA,YAAWC,EAAIC,EAAUC,GAC7CC,GAAMC,GAAmBC,OAAOD,kBAAoBC,OAAOC,uBACrDC,EAAyBF,OAAOG,gBAEtC,IAAIJ,EAAkB,CAElBD,GAAMM,GAAM,GAAIL,GAAiB,SAAAM,IACzBA,EAAU,GAAGC,WAAWC,OAAS,GAAKF,EAAU,GAAGG,aAAaD,OAAS,IACzEX,KAKRQ,GAAIK,QAAQd,EAAIe,OAAOC,QAAQC,WAAW,EAAMC,SAAS,GAAOhB,QACzDK,KACPP,EAAGQ,iBAAiB,kBAAmBP,GAAU,GACjDD,EAAGQ,iBAAiB,iBAAkBP,GAAU,ICrBxD,QAAwBkB,SAAQnB,EAAIoB,EAASC,EAAcC,GACvDnB,GAAMoB,GAAKvB,EAAGwB,OAEd,KAAKD,EAED,WADAE,SAAQC,KAAK,sCAAuC1B,EAIxDG,IAAMgB,GAAUJ,OAAOY,KAAKP,EAAQQ,eAC/BC,OAAO,SAAAC,UAAMC,iBAAiBD,IAE/BV,GAAQY,OACRb,EAAQc,KAAKb,EAAQY,MAGzB7B,IAAM+B,GAAW,WACbZ,GAAIH,QAAAA,EAASI,GAAAA,IAGjBR,QAAOY,KAAKI,kBAAkBI,QAAQ,SAAAC,IAC9Bf,EAAae,IAAShB,EAAQQ,UAAUQ,MACxCX,QAAQY,IAAID,GACZpC,EAAGQ,iBAAiB4B,EAAMF,2BCRtC,YAAgBI,kbACZC,gBACI,OACIC,iBAAkB,KAClBC,WAAW,IAGnBC,mBACQC,KAAKC,OACLnB,QAAQC,KAAK,uEAGrBmB,UACIC,uBACI,OAAQ,QAASH,KAAKI,aAAcJ,KAAKK,YAAc,oBAAsB,KAEjFD,wBACI5C,GAAM8C,GAAUN,KAAKC,OAASD,KAAKM,SAAW,MAC9C,OAAO,SAASA,GAEpBC,qBACI,OAAQP,KAAKF,YAAcE,KAAKH,kBAAoBG,KAAKQ,QAGjEC,OACIH,SACIb,KAAMiB,OACNC,QAAS,QAEbV,OACIR,KAAMiB,OACNC,QAAS,MAEbN,aACIZ,KAAMmB,QACND,SAAS,GAEbH,MACIf,MAAOmB,QAASC,QAChBF,SAAS,IAGjBG,OACIN,gBACIR,KAAKe,gBAGbC,mBACIhB,KAAKe,eAETE,SACIC,mBACIlB,KAAKF,WAAY,EACjBE,KAAKmB,MAAM,aACXnB,KAAKoB,gBAETA,wBACQpB,KAAKH,kBACLwB,cAAcrB,KAAKH,mBAG3BkB,iCAKI,IAHAf,KAAKF,WAAY,EAGbE,KAAKQ,QAAS,GAAQR,KAAKQ,QAAS,GAAuB,OAAdR,KAAKQ,MAA+B,IAAdR,KAAKQ,KAA5E,CAIAc,GAAIC,GAAmBvB,KAAKQ,IAC5BR,MAAKmB,MAAM,qBAAsBI,GAGjCvB,KAAKoB,eACLpB,KAAKH,iBAAmB2B,YAAY,WAChC,MAAID,GAAmB,EACZvB,EAAKkB,WAEhBK,QACAvB,GAAKmB,MAAM,qBAAsBI,KAClC,gBCnFC5B,wRACZO,UACIuB,yBACI,MAAQzB,MAAK0B,SAAW1B,KAAK2B,GAAM,cAAgB,MAG3DlB,OACImB,aACInC,KAAMiB,OACNC,QAAS,UAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEbgB,IACIlC,MAAOiB,OAAQtC,QACfuC,QAAS,MAEbmB,OACIrC,KAAMmB,QACND,SAAS,IAGjBM,SACIc,eAAMC,IACEhC,KAAK6B,UAA0B,MAAd7B,KAAKiC,QACtBD,EAAEE,iBACFF,EAAEG,mBAGDnC,KAAK6B,WACN7B,KAAKmB,MAAM,QAASa,GACpBhC,KAAKoC,MAAMjB,MAAM,kBAAmBnB,sBCjCpCL,saACZ0C,YAAaC,MAAAA,OACbpC,UACIuB,yBACI,MAAOzB,MAAK2B,GAAK,cAAgB,KAErCY,kBACI/E,GAAMgF,GAAOxC,KAAKyC,MAAMxE,OAAS,GAAK+B,KAAKyC,MAAMzC,KAAKyC,MAAMxE,OAAS,EAErE,OAAO+B,MAAKyC,MAAMC,IAAI,SAAAC,GAClB,MAAoB,gBAATA,IACCC,KAAMD,EAAME,KAAM,IAAKC,OAAQH,IAASH,IAGhDG,EAAKG,UAAW,GAAQH,EAAKG,UAAW,EACxCH,EAAKI,SAAWJ,IAASH,EAEzBG,EAAKI,SAAWJ,EAAKG,OAGlBH,OAInBlC,OACIgC,OACIhD,KAAMuD,MACNrC,QAAS,qBACTsC,UAAU,IAGlBhC,SACIiC,iBAAQP,GACJ3C,KAAKmB,MAAM,QAASwB,GAChB3C,KAAK0B,SAAW1B,KAAK2B,IACrB3B,KAAK0B,QAAQpC,KAAKU,KAAK2B,aClCvBhC,0OACZ0C,YAAaC,MAAAA,OACbpC,UACIC,uBACI,OACI,MACAH,KAAKmD,WACLnD,KAAKoD,QACLpD,KAAKqD,SACLrD,KAAKsD,YACLtD,KAAKuD,SAAW,eAAiB,KAGzC9B,yBACI,MAAQzB,MAAKiC,MAAQjC,KAAK2B,GAAM,SAAW,UAE/C0B,oBACI,MAAOrD,MAAKwD,MAAQ,YAAc,IAEtCL,sBACI,MAAOnD,MAAKM,QAAU,OAAON,KAAKM,QAAY,iBAElD8C,mBACI,MAAOpD,MAAKyD,KAAO,OAAOzD,KAAKyD,KAAS,IAE5CH,uBACI,MAAOtD,MAAK6B,SAAW,WAAa,KAG5CpB,OACI+C,OACI/D,KAAMmB,QACND,SAAS,GAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEb4C,UACI9D,KAAMmB,QACND,SAAS,GAEb8C,MACIhE,KAAMiB,OACNC,QAAS,MAEbL,SACIb,KAAMiB,OACNC,QAAS,MAEbgB,IACIlC,MAAOiB,OAAQtC,SAEnB6D,MACIxC,KAAMiB,SAGdO,SACIiC,iBAAQlB,GACAhC,KAAK6B,UACLG,EAAEG,kBACFH,EAAEE,kBAEFlC,KAAKmB,MAAM,QAASa,mBCvEpBrC,mKACZO,UACIC,uBACI,OACI,QAAUH,KAAK0D,QAAU,UAAY,SACrC1D,KAAK2D,SAAW,qBAAuB,GACvC3D,KAAKyD,KAAQ,aAAezD,KAAKyD,KAAQ,MAIrDhD,OACIkD,UACIlE,KAAMmB,QACND,SAAS,GAEb+C,SACIjE,KAAMmB,QACND,SAAS,GAEb8C,MACIhE,KAAMiB,OACNC,QAAS,oBCbLhB,oWACZO,UACIC,uBACI,OACI,cACAH,KAAKyD,KAAQ,eAAiBzD,KAAKyD,KAAQ,GAC3CzD,KAAKC,MAAS,OAASD,KAAKC,MAAS,MAIjDQ,OACIgD,MACIhE,KAAMiB,OACNC,QAAS,MAEbV,OACIR,KAAMiB,OACNC,QAAS,MAEbiD,MACInE,KAAMiB,OACNC,QAAS,MAEbkD,OACIpE,KAAMiB,OACNC,QAAS,yBCjCLhB,0KACZc,OACIqD,IACIrE,KAAMiB,OACNC,QAAS,0BCJLhB,wJACZc,gBC4BYd,w0BACZO,UACI6D,sBACI,OACI,aACA/D,KAAKgE,QAAU,mBAAqB,OAG5CC,uBACI,MAAOjE,MAAKM,QAAU,QAAQN,KAAKM,QAAY,MAEnD4D,uBACI,MAAIlE,MAAKgE,SAAWhE,KAAKmE,QACd,eAGU,OAAjBnE,KAAKmE,SAAoBnE,KAAKM,SAAWN,KAAKM,QAAQrC,OAAS,GAC/D+B,KAAKM,QAAQ8D,QAAQ,cAAe,EAC7B,eAFX,QAKJC,qBACI,MAAOrE,MAAKsE,MAAQ,QAAQtE,KAAKsE,MAAU,OAGnD7D,OACI6D,OACI7E,KAAMiB,OACNC,QAAS,MAEbwD,SACI1E,KAAMmB,QAEND,QAAS,MAEbL,SACIb,KAAMiB,OACNC,QAAS,MAIb4D,QACI9E,KAAMiB,OACNC,QAAS,MAEb6D,YACI/E,KAAMmB,QACND,SAAS,GAEb8D,WACIhF,KAAMiB,OACNC,QAAS,OAIb+D,QACIjF,KAAMiB,OACNC,QAAS,MAEbgE,YACIlF,KAAMmB,QACND,SAAS,GAEbiE,WACInF,KAAMiB,OACNC,QAAS,OAIbkE,OACIpF,KAAMiB,OACNC,QAAS,MAEbmE,UACIrF,KAAMiB,OACNC,QAAS,MAEboE,SACItF,KAAMmB,QACND,SAAS,GAIbqE,KACIvF,KAAMiB,OACNC,QAAS,MAEbsE,QACIxF,KAAMiB,OACNC,QAAS,MAEbqD,SACIvE,KAAMmB,QACND,SAAS,gBC1HLhB,iJACZO,UACIT,gBACI,MAAIO,MAAKkF,KACE,OAGPlF,KAAKmF,QACE,UAGJ,UAGf1E,OACIyE,MACIzF,KAAMmB,QACND,SAAS,GAEbwE,SACI1F,KAAMmB,QACND,SAAS,KCEfyE,WACFC,MACIC,QAAS,qBACTD,KAAM,sBACNrB,QAAS,sBAEbuB,MACID,QAAS,sBACTD,KAAM,qBACNrB,QAAS,iCAIDrE,qrCACZC,gBACI,OACI4F,MAAO,EACPC,WAAW,EACXC,YAGRjF,OACIkF,UACIlG,KAAMoB,OACNF,QAAS,KAEbiF,YACInG,KAAMmB,QACND,SAAS,GAEbkF,UACIpG,KAAMmB,QACND,SAAS,GAEbmF,QACIrG,KAAMiB,QAEVqF,YACItG,KAAMiB,SAGdO,SAEIsE,gBACQvF,KAAKwF,OAAS,EACdxF,KAAKwF,MAAQxF,KAAK0F,OAAOzH,OAAS,EAElC+B,KAAKwF,SAKbH,gBACQrF,KAAKwF,OAASxF,KAAK0F,OAAOzH,OAAS,EACnC+B,KAAKwF,MAAQ,EAEbxF,KAAKwF,SAKbQ,iBAC0B,IAAlBhG,KAAK2F,UAA2C,mBAAlB3F,MAAK2F,UAGvCtE,cAAcrB,KAAKiG,cAIvBC,2BAC0B,KAAlBlG,KAAK2F,UAA2C,mBAAlB3F,MAAK2F,WAGvC3F,KAAKiG,YAAczE,YAAY,WAC3BxB,EAAKqF,QACNrF,KAAK2F,aAGhB3E,mBAEIhB,KAAK0F,OAAS1F,KAAKmG,IAAIC,iBAAiB,kBAGxCpG,KAAK0F,OAAO,GAAGW,UAAUC,IAAI,UAG7BtG,KAAKkG,SAETpF,OACI0E,eAAMe,EAAKC,aACP,IAAID,IAAQC,EAAZ,CAIA,GAAIxG,KAAKyF,UAEL,YADAzF,KAAKwF,MAAQgB,EAKjBlF,IAAImF,GAAaF,EAAMC,EAAUpB,UAAUC,KAAOD,UAAUG,IAG7C,KAAXiB,GAAgBD,IAAQvG,KAAK0F,OAAOzH,OAAS,EAC7CwI,EAAYrB,UAAUG,KACfiB,IAAWxG,KAAK0F,OAAOzH,OAAS,GAAa,IAARsI,IAC5CE,EAAYrB,UAAUC,KAI1B7H,IAAMkJ,GAAe1G,KAAK0F,OAAOc,GAC3BG,EAAY3G,KAAK0F,OAAOa,EAEzBG,IAAiBC,IAKtB3G,KAAKyF,WAAY,EAEjBkB,EAAUN,UAAUC,IAAIG,EAAUpB,KAAMoB,EAAUzC,SAClD0C,EAAaL,UAAUC,IAAIG,EAAUnB,SAErCtF,KAAK4G,mBAAqBC,WAAW,WACjC7G,EAAKyF,WAAY,EACjBzF,EAAKmB,MAAM,QAASoF,GAEpBG,EAAaL,UAAUS,OAAO,UAC9BH,EAAUN,UAAUC,IAAI,UAExBI,EAAaL,UAAUS,OAAOL,EAAUnB,SACxCqB,EAAUN,UAAUS,OAAOL,EAAUpB,KAAMoB,EAAUzC,UACtD,SAGX+C,qBACIC,aAAahH,KAAK4G,oBAClBvF,cAAcrB,KAAKiG,8BC3JXtG,0bACZc,OACIuE,KACIvF,KAAMiB,QAEVuE,QACIxF,KAAMiB,QAEVuG,kBACIxH,KAAMiB,QAEVwG,SACIzH,KAAMiB,QAEVkC,MACInD,KAAMiB,QAEVqF,YACItG,KAAMiB,QAEVoF,QACIrG,KAAMiB,SAGdR,UACIiH,0BACI3J,GAAM4J,IACFC,mBAAoBzG,QAAQZ,KAAKkH,SAMrC,OAJIlH,MAAKiH,mBACLG,EAAQ,WAAY,EACpBA,EAAQ,KAAKpH,KAAKiH,4BAA4B,GAE3CG,eCnBHzH,8VAEZC,gBACI,OACIY,MAAM,IAIdN,UACIC,uBACI,OACImH,kBAAmBtH,KAAKuH,MACxB/G,KAAMR,KAAKQ,QAKvBC,OACI8G,OACI9H,KAAMmB,QACND,SAAS,GAEbmD,IACIrE,KAAMiB,OACNuC,UAAU,IAIlBhC,SACIuG,kBACIxH,KAAKQ,MAAQR,KAAKQ,MAEtBiH,eAAMpK,GACFA,EAAGqK,MAAM5B,OAAS,MAClBtI,IAAMmK,GAAaC,iBAAiBvK,GAAIyI,MACxCzI,GAAGqK,MAAM5B,OAAS,MAGlBzI,EAAGwK,aAEHxK,EAAGqK,MAAM5B,OAAS6B,GAEtBG,eAAMzK,GACFA,EAAGqK,MAAM5B,OAAS,MAClBtI,IAAMmK,GAAaC,iBAAiBvK,GAAIyI,MACxCzI,GAAGqK,MAAM5B,OAAS6B,EAGlBtK,EAAGwK,aAEHxK,EAAGqK,MAAM5B,OAAS,OAEtBiC,qBAAY1K,GACRA,EAAGqK,MAAM5B,OAAS,OAI1B/F,6BACIC,MAAKoC,MAAM4F,IAAI,mBAAoB,SAAAC,GAC3BA,IAAWjI,EAAK8D,IAGpB9D,EAAKwH,uBCvFbxG,mBAC4B,mBAAbkH,WACPA,SAASC,gBAAgBtK,iBAAiB,QAASmC,KAAKoI,oBAGhErB,qBAC4B,mBAAbmB,WACPA,SAASG,oBAAoB,QAASrI,KAAKoI,oBAGnDnH,SACImH,2BAAkBpG,GACThC,KAAKmG,IAAImC,SAAStG,EAAEiG,SACjBjI,KAAKuI,kBACLvI,KAAKuI,sBCfnBC,eACF,2GACA,+EACFC,KAAK,iBAGHhI,OACIiI,OACIjJ,KAAMmB,QACND,SAAS,GAEbiC,MACInD,KAAMiB,OACNC,QAAS,IAEbgI,QACIlJ,KAAMmB,QACND,SAAS,GAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEbkD,OACIpE,KAAMmB,QACND,SAAS,IAGjBZ,6BACIC,MAAKoC,MAAM4F,IAAI,kBAAmB,SAAA3K,GAE1BA,IAAO2C,IACPA,EAAK4I,SAAU,MAI3B9H,OACI8H,iBAAQ3I,EAAO4I,aACX,IAAI5I,IAAU4I,EAId,GAAI5I,GAQA,GAPAD,KAAKoC,MAAMjB,MAAM,kBAAmBnB,MAOZ,mBAAbkI,WAA4B,gBAAkBA,UAASC,gBAAiB,CAC/E3K,GAAMsL,GAAW9F,MAAM+F,UAAUC,MAAMC,KAAKf,SAASgB,KAAKJ,SAC1DA,GAAStJ,QAAQ,SAAAnC,GACbA,EAAGQ,iBAAiB,YAAamC,EAAKmJ,aAS9C,IALAnJ,KAAKoC,MAAMjB,MAAM,mBAAoBnB,MAKb,mBAAbkI,WAA4B,gBAAkBA,UAASC,gBAAiB,CAC/E3K,GAAMsL,GAAW9F,MAAM+F,UAAUC,MAAMC,KAAKf,SAASgB,KAAKJ,SAC1DA,GAAStJ,QAAQ,SAAAnC,GACbA,EAAGgL,oBAAoB,YAAarI,EAAKmJ,WAM7DlI,SACIkI,kBAGA3B,kBACI,MAAIxH,MAAK6B,cACL7B,KAAK4I,SAAU,IAGnB5I,KAAK4I,SAAW5I,KAAK4I,aACjB5I,KAAK4I,SACL5I,KAAKoJ,UAAU,WAEX5L,GAAMiF,GAAQzC,KAAKqJ,UACf5G,GAAMxE,OAAS,GACfwE,EAAM,GAAG6G,aAKzBC,iBACQvJ,KAAK4I,UACL5I,KAAK4I,SAAU,IAGvBY,eAAMxH,GACEhC,KAAK4I,UACL5I,KAAK4I,SAAU,EACf5G,EAAEE,iBACFF,EAAEG,kBACFnC,KAAKoJ,UAAU,WAEX9H,GAAIjE,EAEAA,GADA2C,KAAK0I,OAAS1I,KAAKyJ,MAAMjC,OACpBxH,KAAKyJ,MAAMjC,OAAOrB,KAAOnG,KAAKyJ,MAAMjC,OAEpCxH,KAAKyJ,MAAMC,OAAOvD,KAAOnG,KAAKyJ,MAAMC,OAEzCrM,GAAMA,EAAGiM,OACTjM,EAAGiM,YAKnBK,mBAAU3H,EAAG4H,GACT,GAAK5J,KAAK4I,QAAV,CAGA5G,EAAEE,iBACFF,EAAEG,iBACF3E,IAAMiF,GAAQzC,KAAKqJ,UACnB,MAAI5G,EAAMxE,OAAS,GAAnB,CAGAqD,GAAIkE,GAAQ/C,EAAM2B,QAAQpC,EAAEiG,OACxB2B,IAAMpE,EAAQ,EACdA,KACQoE,GAAMpE,EAAQ/C,EAAMxE,OAAS,GACrCuH,IAEAA,EAAQ,IACRA,EAAQ,GAEZ/C,EAAM+C,GAAO8D,WAEjBD,oBACI,MAAOrG,OAAM+F,UAAUC,MAAMC,KAAKjJ,KAAKyJ,MAAMI,KAAKzD,iBAAiBoC,mBC3HzEsB,UAA8B,mBAAXpM,QACnBqM,WAAcD,WAAapM,OAAOqM,cAAe,IAAWD,WAAaE,QAAQC,IAAIF,cAAe,cAGtG7J,UACIgK,eACI,OAAKH,YAAc/J,KAAK8D,GACb9D,KAAK8D,GAGT,OAAO9D,KAAKmK,uBC0BfxK,s5CACZyK,QAASC,SAAUC,WAAUC,YAC7BlI,YAAamI,QAAAA,MACb5K,gBACI,OACIgJ,SAAS,IAGjBnI,OACIgK,YACIhL,KAAMiB,OACNC,QAAS,mBAEb8C,MACIhE,KAAMiB,OACNC,QAAS,MAEbL,SACIb,KAAMiB,OACNC,QAAS,MAEbkC,MACIpD,KAAMmB,QACND,SAAS,IAGjBM,SACIsH,4BACIvI,KAAK4I,SAAU,GAEnB7G,eAAMC,GACF,MAAIhC,MAAK6B,cACL7B,KAAK4I,SAAU,QAIf5I,KAAK0I,OACL1I,KAAKmB,MAAM,QAASa,GACpBhC,KAAKoC,MAAMjB,MAAM,kBAAmBnB,OAEpCA,KAAKwH,2BCxEL7H,qUACZ+K,QAASpI,MACTpC,UACIyK,oBACI,MAAQ3K,MAAKiC,MAAQjC,KAAK2B,GAAM3B,KAAKyB,cAAgB,6BCjBjD9B,8JACZc,0BCCYd,8LACZc,OACImK,KACInL,KAAMiB,OACNC,QAAS,wBCWLhB,qvBACZC,gBACI,OACIY,MAAM,EACNqK,UAAU,IAGlB3K,UACIiD,sBACI,MAAQnD,MAAKM,SAA4B,YAAjBN,KAAKM,QAA0C,OAAON,KAAKM,QAA9B,iBAEzD8C,mBACI,MAAQpD,MAAKyD,MAAsB,YAAdzD,KAAKyD,KAA0B,OAAOzD,KAAKyD,KAAjB,IAEnDqH,0BACI,MAAO9K,MAAK+K,MAAQ,kBAAoB,IAE5CC,uBAEI,GAAKhL,KAAKiL,cAAgBjL,KAAKkL,QAAUlL,KAAKkL,MAAMtI,OAAW5C,KAAKiL,cAAgBjL,KAAKkL,OAA+B,IAAtBlL,KAAKkL,MAAMjN,QAAiB+B,KAAKmL,aAC/H,MAAOnL,MAAKoL,WAIhB,IAAIpL,KAAKiL,cAAgBjL,KAAKkL,OAASlL,KAAKkL,MAAMtI,KAC9C,MAAO5C,MAAKkL,MAAMtI,IAItB,KAAK5C,KAAKiL,cAAgBjL,KAAKkL,MAAO,CAClC5J,GAAI+J,GAASrL,KAAKkL,OAAS,EAM3B,OALAlL,MAAKsL,KAAK9L,QAAQ,SAAUmD,GACpBA,EAAKtD,QAAUW,KAAKkL,QACpBG,EAAS1I,EAAKC,QAGfyI,EAGX,MAAO,KAGf5K,OACIqD,IACIrE,KAAMiB,QAEVwK,OACIjI,UAAU,GAEdqI,MACI7L,KAAMuD,MACNrC,WACAsC,UAAU,GAEd8H,OACItL,KAAMmB,QACND,SAAS,GAEb4K,UACI9L,KAAMiB,OACNC,QAAS,QAEb8C,MACIhE,KAAMiB,OACNC,QAAS,IAEbL,SACIb,KAAMiB,OACNC,QAAS,WAEbyK,aACI3L,KAAMiB,OACNC,QAAS,oBAEbwK,cACI1L,KAAMmB,QACND,SAAS,GAEbsK,cACIxL,KAAMmB,QACND,SAAS,GAEbgI,QACIlJ,KAAMmB,QACND,SAAS,GAEbkB,UACIpC,KAAMmB,QACND,SAAS,IAGjBM,SACIuG,gBAAOxF,GAEHhC,KAAKQ,MAAQR,KAAKQ,KAEdR,KAAKQ,MACLR,KAAKoC,MAAMjB,MAAM,iBAAkBnB,KAAK8D,IACxC9B,EAAEG,mBAEFnC,KAAKoC,MAAMjB,MAAM,mBAAoBnB,KAAK8D,KAGlD0H,gBAAO7I,GAEC3C,KAAKiL,aACLjL,KAAKkL,MAAQvI,EAEb3C,KAAKkL,MAAQvI,EAAKtD,MAEtBW,KAAKQ,MAAO,EAEZR,KAAKoC,MAAMjB,MAAM,qBAAsBnB,KAAK8D,GAAI9D,KAAKkL,SAG7DnL,mBACIvC,GAAMiO,GAAMzL,KAAKoC,KACjBqJ,GAAIzD,IAAI,iBAAkB,WACtBhI,KAAKQ,MAAO,YCrIRb,+IACZO,UACIC,uBACI,OACIH,KAAK0L,OAAS,cAAgB,MAI1CjL,OACIiL,QACIjM,KAAMmB,QACND,SAAS,mBCMLhB,umBACZC,gBACI,OACIqI,OAAQ,OAGhB/H,UACIyL,sBACI,MAAO3L,MAAKC,MAAQ,OAAOD,KAAKC,MAAU,IAE9C2L,uBACI,MAAO5L,MAAK6L,WAAc,UAAY7L,KAAK8L,UAAa,UAE5DC,2BACI,MAAO/L,MAAKgM,eAAiB,QAAQhM,KAAKgM,eAAmB,MAEjEC,uBACI,MAAOjM,MAAK6L,WAAc,WAAa,GAAK7L,KAAK8L,WAAc,WAGvE7K,SACIiL,wBACI1O,GAAM2O,GAAUnM,KAAKyJ,MAAM0C,OAC3B,KAAKA,EACD,MAAO,KAEX3O,IAAM4O,GAAQD,EAAQE,cAAcrM,KAAKsM,cACzCtM,MAAKiI,OAAUmE,GAASA,EAAMtI,GAAMsI,EAAMtI,GAAK,OAGvD9C,mBACIhB,KAAKkM,gBAETK,mBACIvM,KAAKkM,gBAETzL,OACIR,OACIR,KAAMiB,OACNC,QAAS,MAEbkL,YACIpM,KAAMmB,QACND,SAAS,GAEbmL,WACIrM,KAAMoB,OACNF,QAAS,GAEbqL,gBACIvM,KAAMiB,OACNC,QAAS,MAEb6L,OACI/M,KAAMiB,OACNC,QAAS,MAEb8L,aACIhN,KAAMiB,OACNC,QAAS,MAEb+L,UACIjN,KAAMiB,OACNC,QAAS,MAEb2L,eACI7M,KAAMiB,OACNC,QAAS,2FC1FjBT,UACIyM,sBACI,OACI3M,KAAKyD,KAAO,gBAAgBzD,KAAKyD,KAAS,KAC1CzD,KAAKC,MAAQ,gBAAgBD,KAAKC,MAAU,OAGpD2M,kBACI,OAAQ5M,KAAK6M,QAGrBpM,OACIqM,MACIrN,KAAMiB,QAEVmB,UACIpC,KAAMmB,SAEViM,OACIpN,KAAMmB,QACND,SAAS,GAEbV,OACIR,KAAMiB,QAEV+C,MACIhE,KAAMiB,QAEVoD,IACIrE,KAAMiB,6BC7BdR,UACI6M,yBACI,OACIC,iBAAkBhN,KAAK4M,OACvBK,oBAAqBjN,KAAK0L,yBCkB1B/L,8lBACZyK,QAAS8C,UAAWC,kBAAmB5C,YACvCW,OACIkC,KAAM,UACNC,MAAO,UAEX5M,OACIpB,OACIsB,SAAS,GAEb2M,gBACI3M,SAAS,GAEb4M,SACI5M,SAAS,kBCpCjBT,UACIsN,kCACQC,EAAUzN,KAAKyN,WAgCnB,OA5BIA,GAFAzK,MAAM0K,QAAQD,GAEJA,EAAQ/K,IAAI,SAAAiL,GAClB,MAAsB,gBAAXA,IAEHtO,MAAOsO,EAAO3N,EAAK4N,YACnBhL,KAAM+K,EAAO3N,EAAK6N,WAClBhM,SAAU8L,EAAO9L,WAAY,IAI7Be,KAAMlC,OAAOiN,GAAStO,MAAOsO,SAI/BvP,OAAOY,KAAKyO,GAAS/K,IAAI,SAAArD,GAC/BiC,GAAIqM,GAASF,EAAQpO,MAUrB,OAPsB,gBAAXsO,KACPA,GAAU/K,KAAMlC,OAAOiN,KAI3BA,EAAOtO,MAAQsO,EAAO3N,EAAK4N,aAAevO,EAEnCsO,KAMnBG,yBAEI,IAAKxM,WADCkM,EAAcxN,KAAKwN,YAChBO,EAAI,EAAGA,EAAIP,EAAYvP,OAAQ8P,IACpC,GAAIP,EAAYO,GAAG1O,QAAUW,EAAKgO,WAC9B,MAAIhO,GAAKiL,aACEuC,EAAYO,GAEhBP,EAAYO,GAAG1O,QAKtCoB,OACImN,YACInO,MAAOiB,QACPC,QAAS,SAEbkN,WACIpO,MAAOiB,QACPC,QAAS,SAGjBG,OACIkN,oBAAW3O,EAAO4O,GACV5O,IAAU4O,GAGdjO,KAAKmB,MAAM,QAASnB,KAAK8N,gBAE7BzO,eAAMA,EAAO4O,GACL5O,IAAU4O,IAGdjO,KAAKgO,WAAa3O,iBC3CdM,qxBACZyK,QAAS8C,UAAWC,kBAAmBe,aACvCtO,gBACI,OACIoO,WAAYhO,KAAKX,QAGzBa,UACIyL,sBACI,MAAO3L,MAAKC,MAAQ,OAAOD,KAAKC,MAAU,KAGlDQ,OACIpB,SACAoO,SACIhO,MAAOuD,MAAO5E,QACduC,QAAS,KACTsC,UAAU,GAEdkL,SACI1O,KAAMmB,QACND,SAAS,GAEbsK,cACIxL,KAAMmB,QACND,SAAS,uBCvCLhB,6NACZyK,QAAS8C,UAAW3C,YACpBrK,UACIkO,uBACI,MAAOpO,MAAKqO,UAAYrO,KAAKqO,UAAUrO,KAAKX,OAASW,KAAKX,QAGlEoB,OACIpB,OACIsB,QAAS,MAEb0N,WACI5O,KAAM6O,uBCQF3O,mmBACZyK,QAAS8C,UAAW3C,YACpBlI,YAAakM,iBAAAA,kBACbrO,UACIsO,qBACI,OAAQxO,KAAKX,OAAS,IAAIoP,WAAW/F,MAAM,MAAMzK,SAGzDgD,SACIyN,gBAAOrP,GACH,GAAIW,KAAKqO,UAAW,CAChB7Q,GAAMmR,GAAiB3O,KAAKqO,UAAUhP,EAClCsP,KAAmBtP,IACnBA,EAAQsP,EACR3O,KAAKyJ,MAAM2C,MAAM/M,MAAQsP,GAGjC,MAAOtP,IAEXuP,iBAAQvP,GACCW,KAAK6O,gBACNxP,EAAQW,KAAK0O,OAAOrP,IAExBW,KAAKmB,MAAM,QAAS9B,IAExByP,kBAASzP,GACLA,EAAQW,KAAK0O,OAAOrP,GACpBW,KAAKmB,MAAM,QAAS9B,GACpBW,KAAKmB,MAAM,SAAU9B,IAEzB0P,iBAAQ/M,GACJhC,KAAKmB,MAAM,QAASa,KAG5BvB,OACIpB,OACIsB,QAAS,MAEblB,MACIA,KAAMiB,OACNC,QAAS,QAEbqO,QACIvP,KAAMmB,QACND,SAAS,GAEbsO,aACIxP,KAAMiB,OACNC,QAAS,MAEbuO,MACIzP,KAAMoB,OACNF,QAAS,MAEbwO,UACI1P,KAAMmB,QACND,SAAS,GAEb0N,WACI5O,KAAM6O,UAEVO,eACIpP,KAAMmB,QACND,SAAS,eCXLhB,y6BACZyK,QAAS8C,UAAW3C,YACpB3K,gBACI,OACIwP,aAAc,KACdC,UAAU,IAGlBnP,UACIoP,yBACI,MAAKtP,MAAKoP,cAA6C,IAA7BpP,KAAKoP,aAAanR,OAIxC+B,KAAKuP,SAC4B,IAA7BvP,KAAKoP,aAAanR,OACX+B,KAAKoP,aAAa,GAAGtC,KAGzB9M,KAAKwP,eACPC,QAAQ,SAAUzP,KAAKoP,aAAa1M,IAAI,SAAAgN,SAAQA,GAAK5C,OAAMrE,KAAK,MAChEgH,QAAQ,SAAUzP,KAAKoP,aAAanR,QAGtC+B,KAAKoP,aAAatC,KAbd9M,KAAKiP,aAAe,kBAenCU,+BACI,MAAO3P,MAAK4P,cAAgB5P,KAAKuP,SAAW,eAAiB,iBAGrEzO,OACIsO,sBAAaS,EAAQrJ,GACbqJ,IAAWrJ,KAIVqJ,GAAU7P,KAAKuP,SAChBvP,KAAKmB,MAAM,YAEXnB,KAAKmB,MAAM,QAAS0O,MAIhC5O,SACI6O,sBAAa9N,aAEThC,MAAKmB,MAAM,SAAUa,EAIrBxE,IAAMiF,GAAQT,EAAE+N,cAAgB/N,EAAE+N,aAAatN,KAC/C,IAAIA,IAAUzC,KAAKgQ,WAAY,CAE3B,IAAK1O,GADC2O,MACGlC,EAAI,EAAGA,EAAItL,EAAMxE,OAAQ8P,IAAK,CACnCvQ,GAAMmF,GAAOF,EAAMsL,GAAGmC,kBAClBvN,IACAsN,EAAM3Q,KAAKU,EAAKmQ,iBAAiBxN,IAMzC,WAHAyN,SAAQC,IAAIJ,GAAOK,KAAK,SAAAC,GACpBvQ,EAAKwQ,SAASxN,MAAM+F,UAAU0H,OAAOC,SAAUH,MAMvDvQ,KAAKwQ,SAASxO,EAAEiG,OAAO0I,OAAS3O,EAAE+N,aAAaY,QAEnDH,kBAASG,aACL,KAAKA,EAED,YADA3Q,KAAKoP,aAAe,KAIxB,KAAKpP,KAAKuP,SAEN,YADAvP,KAAKoP,aAAeuB,EAAM,GAM9B,KAAKrP,GADCsP,MACG7C,EAAI,EAAGA,EAAI4C,EAAM1S,OAAQ8P,IAC1B4C,EAAM5C,GAAGtO,KAAKoR,MAAM7Q,EAAK8Q,SACzBF,EAAWtR,KAAKqR,EAAM5C,GAI9B/N,MAAKoP,aAAewB,GAExBG,kBAAS/O,GACDhC,KAAKgR,SAIThR,KAAKqP,UAAW,EAChBrN,EAAE+N,aAAakB,WAAa,SAEhCC,cAAKlP,GACGhC,KAAKgR,SAIThR,KAAKqP,UAAW,EACZrN,EAAE+N,aAAaY,OAAS3O,EAAE+N,aAAaY,MAAM1S,OAAS,GACtD+B,KAAK8P,aAAa9N,KAG1BmO,0BAAiBxN,EAAMwO,aAEnB,OAAO,IAAIf,SAAQ,SAAAgB,GACfD,EAAOA,GAAQ,GACXxO,EAAK0O,OAEL1O,EAAK+M,KAAK,SAAAA,GACNA,EAAK4B,MAAQH,EACbC,EAAQ1B,KAEL/M,EAAK4O,aAEZ5O,EAAK6O,eAAeC,YAAY,SAAAC,GAE5B,IAAKpQ,GADC2O,MACGlC,EAAI,EAAGA,EAAI2D,EAAQzT,OAAQ8P,IAChCkC,EAAM3Q,KAAKU,EAAKmQ,iBAAiBuB,EAAQ3D,GAAIoD,EAAOxO,EAAKmK,KAAO,KAEpEsD,SAAQC,IAAIJ,GAAOK,KAAK,SAAAC,GACpBa,EAAQpO,MAAM+F,UAAU0H,OAAOC,SAAUH,YAOjE9P,OACIqQ,QACIrR,KAAMiB,OACNC,QAAS,IAEbsO,aACIxP,KAAMiB,OACNC,QAAS,MAEbiP,aACInQ,KAAMiB,OACNC,QAAS,MAEb4O,UACI9P,KAAMmB,QACND,SAAS,GAEbgR,WACIlS,KAAMmB,QACND,SAAS,GAEbqP,YACIvQ,KAAMmB,QACND,SAAS,GAEb6O,gBACI/P,KAAMiB,OACNC,QAAS,gBAEbqQ,QACIvR,KAAMmB,QACND,SAAS,GAEbiR,WACInS,KAAMiB,OACNC,QAAS,iCCvOLhB,qoBACZyK,QAAS8C,UAAWM,YAAajD,YACjC3K,gBACI,OACIoO,WAAYhO,KAAKX,QAGzBoB,OACIpB,SACAoO,SACIhO,MAAOuD,MAAO5E,QACd6E,UAAU,GAEdgI,cACIxL,KAAMmB,QACND,SAAS,gBCzBLhB,iZACZO,YACAO,OACIoR,OACIpS,KAAMmB,QACND,SAAS,GAEbmR;AACIrS,KAAMmB,QACND,SAAS,GAEb4D,QACI9E,KAAMiB,OACNC,QAAS,MAEboR,MACItS,KAAMiB,OACNC,QAAS,eCrBLhB,sKACZO,UACI8R,wBACI,MAAQhS,MAAKM,SAA4B,YAAjBN,KAAKM,QAA0C,SAASN,KAAKM,QAAhC,iBAEzD2R,qBACI,MAAOjS,MAAKkS,KAAO,aAAe,KAG1CzR,OACIH,SACIb,KAAMiB,OACNC,QAAS,WAEbuR,MACIzS,KAAMmB,QACND,SAAS,gBChBLhB,+LACZc,OACImK,KACInL,KAAMiB,OACNC,QAAS,OAEbwR,OACI1S,KAAMmB,QACND,SAAS,KCNfyR,YAAc,IAAK,cAAe,SAAU,yBAElCzS,uMACZ0C,YAAaC,MAAAA,OACbpC,UACIC,uBACI,OACI,kBACAH,KAAKqS,UACLrS,KAAK8C,OAAS,SAAW,KACzB9C,KAAK6B,SAAW,WAAa,KAC7B7B,KAAKsS,SAAW,yBAA2B,OAGnDA,oBACI,MAAItS,MAAKuS,UAAW,IAGbvS,KAAKuS,QAAUvS,KAAK2B,IAAM3B,KAAKiC,MAAQmQ,WAAWhO,QAAQpE,KAAK4K,QAAS,IAEnFyH,qBACI,MAAOrS,MAAKM,QAAU,mBAAmBN,KAAKM,QAAY,MAE9DkS,iBACI,MAAIxS,MAAK4K,IACE5K,KAAK4K,IAER5K,KAAK2B,IAAM3B,KAAKiC,KAAQ,SAAW,QAGnDxB,OACImK,KACInL,KAAMiB,OACNC,QAAS,MAEbmC,QACIrD,KAAMmB,QACND,SAAS,GAEb4R,QACI9S,KAAMmB,QACND,QAAS,MAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEbL,SACIb,KAAMiB,OACNC,QAAS,MAEbgB,IACIlC,KAAMiB,OACNC,QAAS,MAEbsB,MACIxC,KAAMiB,OACNC,QAAS,eCnDLhB,gXACZO,UACIuS,8BACI,MAAO,cAAczS,KAAK0S,gBAGlCjS,OACIkS,YACIlT,KAAMmB,QACND,SAAS,GAEb+R,eACIjT,KAAMiB,OACNC,QAAS,SCoDfiS,gBACF,oFACA,mFACA,oFACA,sFACA,8FACA,wGACFnK,KAAK,YAES9I,szDACZ0C,YAAawQ,KAAAA,MACbjT,gBACI,OACIkT,YAAY,EACZC,aAAc/S,KAAKgT,aAAe,OAG1C9H,OACIkC,KAAM,UACNC,MAAO,UAEXnN,UACIgJ,gBACI,GAAwB,mBAAbhB,UACP,MAAOA,UAASmE,cAAc,UAI1CvL,OACI8H,iBAAQqK,EAASC,GACTD,IAAYC,IAIZD,EACAjT,KAAKQ,OAELR,KAAKmT,UAIjB1S,OACIqD,IACIrE,KAAMiB,OACNC,QAAS,MAEbkE,OACIpF,KAAMiB,OACNC,QAAS,IAEb8C,MACIhE,KAAMiB,OACNC,QAAS,MAEbyS,MACI3T,KAAMmB,QACND,SAAS,GAEb0S,YACI5T,KAAMiB,OACNC,QAAS,SAEb2S,SACI7T,KAAMiB,OACNC,QAAS,MAEb4S,iBACI9T,KAAMmB,QACND,SAAS,GAEb6S,YACI/T,KAAMmB,QACND,SAAS,GAEb8S,YACIhU,KAAMmB,QACND,SAAS,GAEb+S,YACIjU,KAAMmB,QACND,SAAS,GAEbgT,iBACIlU,KAAMmB,QACND,SAAS,GAEbqS,aACIrS,QAAS,OAGjBM,SACIT,gBACQR,KAAK8S,aAGT9S,KAAK8S,YAAa,EAClB9S,KAAKoC,MAAMjB,MAAM,eAAgBnB,KAAK8D,IACtC9D,KAAKkJ,KAAK7C,UAAUC,IAAI,cACxBtG,KAAKmB,MAAM,SACXnB,KAAKmB,MAAM,UAAU,GACG,mBAAb+G,YAEPA,SAASG,oBAAoB,UAAWrI,KAAK4T,cAAc,GAE3D1L,SAASrK,iBAAiB,UAAWmC,KAAK4T,cAAc,IAE5D5T,KAAKoJ,UAAU,WAEXpJ,KAAK6T,iBAGbV,cAAKW,GACD,GAAK9T,KAAK8S,WAAV,CAKAxR,GAAIyS,IAAW,EACT/R,GACF8R,KAAAA,EACAE,kBACID,GAAW,GAKnB/T,MAAKmB,MAAM,UAAU,GACrBnB,KAAKmB,MAAM,SAAUa,GAEjB8R,KAAS,EACT9T,KAAKmB,MAAM,KAAMa,GACV8R,KAAS,GAChB9T,KAAKmB,MAAM,SAAUa,GAIpB+R,IACuB,mBAAb7L,YAEPA,SAASG,oBAAoB,UAAWrI,KAAK4T,cAAc,GAE3D5T,KAAKiU,iBAETjU,KAAK8S,YAAa,EAClB9S,KAAKoC,MAAMjB,MAAM,gBAAiBnB,KAAK8D,IACvC9D,KAAKkJ,KAAK7C,UAAUS,OAAO,iBAGnCoN,sBAEQlU,KAAKuT,iBACLvT,KAAKmT,QAGb3J,iBAEQxJ,KAAK8S,YAAc9S,KAAKwT,YACxBxT,KAAKmT,QAGbU,sBAEIvS,GAAIjE,EACA2C,MAAKyJ,MAAM/E,SACXrH,EAAK2C,KAAKyJ,MAAM/E,OAAO2H,cAAcuG,kBAEpCvV,GAAM2C,KAAKyJ,MAAMP,OAClB7L,EAAK2C,KAAKyJ,MAAMP,KAAKmD,cAAcuG,kBAElCvV,GAAM2C,KAAKyJ,MAAMlF,SAClBlH,EAAK2C,KAAKyJ,MAAMlF,OAAO8H,cAAcuG,iBAEpCvV,IACDA,EAAK2C,KAAKyJ,MAAM0C,SAEpB9O,EAAGiM,SAEP2K,yBACI,GAAIjU,KAAK+S,aAAc,CACnBvV,GAAMH,GAAmC,gBAAtB2C,MAAK+S,aACpB7K,SAASmE,cAAcrM,KAAKgT,aAC5BhT,KAAK+S,YAEL1V,IAAMA,EAAG8I,KAA+B,kBAAjB9I,GAAG8I,IAAImD,MAC9BjM,EAAG8I,IAAImD,QACAjM,GAA0B,kBAAbA,GAAGiM,OACvBjM,EAAGiM,UAIfsK,sBAAa5R,GAGLhC,KAAK8S,YACL5K,WAAalG,EAAEiG,QACfjI,KAAKyJ,MAAM0C,SACXnM,KAAKyJ,MAAM0C,UAAYnK,EAAEiG,SACxBjI,KAAKyJ,MAAM0C,QAAQ7D,SAAStG,EAAEiG,SAC/BjI,KAAKyJ,MAAM0C,QAAQ7C,UAI/BvJ,6BACIC,MAAKoC,MAAM4F,IAAI,cAAe,SAAClE,EAAIqQ,GAC3BrQ,IAAO9D,EAAK8D,KACZ9D,EAAK+S,aAAeoB,GAAanU,EAAK+S,cAAgB/S,EAAKgT,aAAe,KAC1EhT,EAAKQ,UAIbR,KAAKoC,MAAM4F,IAAI,cAAe,SAAAlE,GACtBA,IAAO9D,EAAK8D,IACZ9D,EAAKmT,UAIjBnS,mBACQhB,KAAK4I,WAAY,GACjB5I,KAAKQ,QAGbuG,qBAE4B,mBAAbmB,WACPA,SAASG,oBAAoB,UAAWrI,KAAK4T,cAAc,UCxSvDjU,+JACZO,UACIC,uBACI,OACIiU,KAAK,EACLC,aAAcrU,KAAKsU,SACnBC,WAAYvU,KAAKwU,KACjBC,YAAazU,KAAK0U,MAClBC,cAAe3U,KAAK2D,SACpBiR,WAAY5U,KAAK6U,QAI7BpU,OACIhB,MACIA,KAAMiB,OACNC,QAAS,MAEbkU,MACIpV,KAAMmB,QACND,SAAS,GAEb6T,MACI/U,KAAMmB,QACND,SAAS,GAEb+T,OACIjV,KAAMmB,QACND,SAAS,GAEbgD,UACIlE,KAAMmB,QACND,SAAS,GAEb2T,UACI7U,KAAMmB,QACND,SAAS,cC5BLhB,yQACZ0C,YAAaC,MAAAA,OACbpC,UACIC,uBACI,OACI,WACAH,KAAK8C,OAAS,SAAW,GACzB9C,KAAK6B,SAAW,WAAa,MAIzCpB,OACIqC,QACIrD,KAAMmB,QACND,SAAS,GAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEbgB,IACIlC,MAAOiB,OAAQtC,SAEnB6D,MACIxC,KAAMiB,QAEVoB,OACIrC,KAAMmB,UAGdK,SACIiC,iBAAQlB,GAEJhC,KAAKoC,MAAMjB,MAAM,kBAAmBnB,MACpCA,KAAKmB,MAAM,QAASa,uBCjBhBrC,69BACZyK,QACIC,SACAC,YAEJ1K,gBACI,OACIgJ,SAAS,IAGjB1I,UACI4K,0BACI,MAAO9K,MAAK+K,MAAQ,kBAAoB,KAGhDtK,OACIsK,OACItL,KAAMmB,QACND,SAAS,IAGjBM,SACIsH,4BACIvI,KAAK4I,SAAU,gBC5CXjJ,6OACZO,UACIC,uBACI,OACI,iBACA,kBAAoBH,KAAKuL,YAKrC9K,OACI+L,OACI/M,KAAMiB,OACNC,QAAS,qBAEb4K,UACI9L,KAAMiB,OACNC,QAAS,SAEbsH,QACIhF,UAAU,IAIlBhC,SACIiC,mBACI1F,GAAMyK,GAASjI,KAAKiI,MAChBA,GAAOT,QACPS,EAAOT,SAEXxH,KAAKoC,MAAMjB,MAAM,mBAAoBnB,KAAKiI,mBClCtCtI,8IACZO,UACIC,uBACI,OACI,SACAH,KAAKP,KAAO,UAAUO,KAAKP,KAAS,KACpCO,KAAKM,QAAU,MAAMN,KAAKM,QAAY,KACtCN,KAAK8U,MAAQ,SAAS9U,KAAK8U,MAAU,KACrC9U,KAAK+U,OAAS,aAAe,KAC7B/U,KAAKgV,WAAa,qBAAqBhV,KAAKiV,iBAAqB,QAI7ExU,OACIhB,MACIA,KAAMiB,OACNC,QAAS,SAEbL,SACIb,KAAMiB,QAEVsU,YACIvV,KAAMmB,QACND,SAAS,GAEbsU,kBACIxV,KAAMiB,OACNC,QAAS,MAEbmU,OACIrV,KAAMiB,QAEVqU,QACItV,KAAMiB,uBCMFf,q7DACZC,gBACI,OACIsV,KAAM,EACNC,UAAU,EACVC,UAAU,EACVC,YAAarV,KAAKX,QAG1Ba,UACIoV,yBACI9X,GAAM6N,GAASkK,KAAKC,KAAKxV,KAAKyV,UAAYzV,KAAK0V,QAC/C,OAAQrK,GAAS,EAAK,EAAIA,GAE9BjI,mBACI,MAAQpD,MAAKyD,MAAsB,YAAdzD,KAAKyD,KAA0B,OAAOzD,KAAKyD,KAAjB,IAEnDkS,qBAWI,MAVI3V,MAAKqV,YAAcrV,KAAKsV,gBACxBtV,KAAKqV,YAAc,GAIvBrV,KAAKkV,KAAO,EACZlV,KAAKmV,UAAW,EAChBnV,KAAKoV,UAAW,EAGZpV,KAAKsV,eAAiBtV,KAAK4V,MACpB5V,KAAKsV,cAIZtV,KAAKqV,aAAerV,KAAK4V,MAAQ,GACjC5V,KAAKkV,KAAO,EACZlV,KAAKoV,UAAW,EACTpV,KAAK4V,MAAQ,GAIpB5V,KAAKqV,YAAcrV,KAAKsV,cAAgBtV,KAAK4V,MAAQ,GACrD5V,KAAKkV,KAAOlV,KAAKsV,cAAgBtV,KAAK4V,MAAQ,EAC9C5V,KAAKmV,UAAW,EACTnV,KAAK4V,MAAQ,IAIxB5V,KAAKkV,KAAOlV,KAAKqV,YAAc,EAC/BrV,KAAKmV,SAAWnV,KAAKqV,aAAerV,KAAK4V,MACzC5V,KAAKoV,SAAWpV,KAAKqV,aAAerV,KAAKsV,cAAgBtV,KAAK4V,MAAQ,EAC/D5V,KAAK4V,SAGpB3U,SACIkC,oBAAWqC,GACP,MAAQA,GAAQxF,KAAKkV,OAASlV,KAAKqV,YAAe,OAAOrV,KAAKM,QAAY,OAAON,KAAK6V,kBAE1FC,sBAIJhV,OACIuU,qBAAYU,EAASC,GACbD,IAAYC,GAIhBhW,KAAKmB,MAAM,QAAS4U,IAExB1W,eAAM4W,EAAUC,GACRD,IAAaC,IACblW,KAAKqV,YAAcY,KAI/BxV,OACIpB,OACII,KAAMoB,OACNF,QAAS,GAEbiV,OACInW,KAAMoB,OACNF,QAAS,GAEb+U,SACIjW,KAAMoB,OACNF,QAAS,IAEb8U,WACIhW,KAAMoB,OACNF,QAAS,IAEb8C,MACIhE,KAAMiB,OACNC,QAAS,MAEbL,SACIb,KAAMiB,OACNC,QAAS,WAEbkV,kBACIpW,KAAMiB,OACNC,QAAS,eCzHfwV,mBACFpU,OAAQA,MAAO,UACfqU,OAAQC,WAAY,OAAQC,WAAY,QACxChN,OAAQA,MAAO,OAAQiN,KAAM,SAG3BC,kBACFC,IAAK,gBACLC,OAAQ,aACR9S,KAAM,eACNC,MAAO,eAGL8S,oBAAsB,YAEtBC,gBACFC,SAAS,EACTC,SAAS,GAGPC,oBAAsB,cAEZpX,opBACZc,OACIuW,aACIvX,KAAMuD,MACNrC,mBACI,WAGRwL,SACI1M,KAAMiB,OACNC,QAAS,IAEbsW,UACIxX,MAAOoB,QACPF,QAAS,IACTuW,mBAAU7X,GACN,MAAOA,IAAS,IAGxB8X,OACI1X,MAAOoB,OAAQzC,QACfuC,QAAS,EACTuW,mBAAU7X,GACN,MAAqB,gBAAVA,GACAA,GAAS,EACC,OAAVA,GAAmC,gBAAVA,KACH,gBAAfA,GAAMmB,MACM,gBAAfnB,GAAM8T,MACb9T,EAAMmB,MAAQ,GACdnB,EAAM8T,MAAQ,KAM9BiE,QACI3X,KAAMiB,OACNC,QAAS,MACTuW,mBAAU7X,GAEN,MAAO,uCAAuCgY,KAAKhY,KAG3DiY,WACI7X,KAAMiB,OACNC,QAAS,MACTuW,mBAAU7X,GACN,MAAOjB,QAAOY,KAAKwX,kBAAkBpS,QAAQ/E,MAAW,IAGhEkY,cACI9X,KAAMrB,OACNuC,QAAS,MAEbH,MACIf,KAAMmB,QACND,QAAS,MAEb6W,cACI/X,KAAMiB,OACNC,QAAS,MACTuW,mBAAU7X,GAEN,MAAO,uCAAuCgY,KAAKhY,KAG3DwF,OACIpF,KAAMiB,OACNC,QAAS,IAEb8W,UACIhY,MAAOmB,QAASF,OAAQsC,OACxBrC,QAAS,kBAAO,QAAS,UACzBuW,mBAAU7X,GAEN,GAAIA,KAAU,GAAmB,KAAVA,EACnB,OAAO,CACJ,IAAqB,gBAAVA,GACd,MAAOjB,QAAOY,KAAKmX,mBAAmB/R,QAAQ/E,MAAW,CACtD,IAAI2D,MAAM0K,QAAQrO,GAAQ,CAC7B7B,GAAMwB,GAAOZ,OAAOY,KAAKmX,kBAMzB,OALA9W,GAAMG,QAAQ,SAAAmD,GACV,GAAI3D,EAAKoF,QAAQzB,MAAU,EACvB,OAAO,KAGR,EAEX,OAAO,KAKnB/C,gBACI,OACI8X,aAAc1X,KAAKQ,KACnBmX,WAAY3X,KAAKQ,KACjBoX,UAAW,OAInB1X,UAMI2X,8BACI,MAAI7X,MAAKyX,YAAa,KAEc,gBAAlBzX,MAAKyX,UACXzX,KAAKyX,UAEVzX,KAAKyX,UAQhBK,4BACI,MAAQ9X,MAAKsX,WAAgC,YAAnBtX,KAAKsX,UAA0C,WAAWtX,KAAKsX,UAAhC,eAQ7DS,qBACI,MAAO/X,MAAKQ,QAAS,IAAUR,KAAK0X,cAAgB1X,KAAKQ,QAIjEM,OAIIkW,uBACIhX,KAAKgY,cAQTH,4BAAmBI,EAAaC,GAC5BlY,KAAKmY,gBAAgBF,EAAaC,IAMtCd,kBACIpX,KAAKgY,cAMTV,qBACItX,KAAKgY,cAOTD,mBAAUxR,cACA4Q,EAAQnX,KAAKoY,SAAS7R,EAE5BS,cAAahH,KAAKqY,UAEdlB,EACAnX,KAAKqY,SAAWxR,WAAW,iBAAM7G,GAAKsY,cAAc/R,IAAM4Q,GAE1DnX,KAAKsY,cAAc/R,KAK/BtF,SAKIsX,qBAAYC,aAER,KAAKhb,GAAMmF,KAAQwT,mBAAkBqC,GACjCxY,EAAKyY,SAAS5a,iBAAiB8E,EAAM,SAAAX,SAAKhC,GAAK0Y,aAAa1W,MAOpE2W,yBACI,GAAI3Y,KAAK4Y,UAAY5Y,KAAK+X,UAAW,CACjC/X,KAAK4Y,QAAQC,UACb7Y,KAAK4Y,QAAU,IAEfpb,IAAMsb,GAAO,GAAIC,QAAO,eAAiBpC,oBAAsB,QAAS,IACxE3W,MAAKyY,SAASO,UAAYhZ,KAAKyY,SAASO,UAAUvJ,QAAQqJ,EAAM,MAQxEJ,sBAAa1W,aAET,MAAIhC,KAAK6X,mBAAmB5Z,OAAS,GAAK+B,KAAKiX,SAAW,GAAwB,OAAnBjX,KAAK4X,WAAsB5V,EAAEiX,WAAajZ,KAAK4X,UAAY5X,KAAKiX,UAM/H,IAAKzZ,GAAMgb,KAAWrC,mBAClB,IAAK3Y,GAAM6P,KAAS8I,mBAAkBqC,GAClC,GAAInL,IAAUrL,EAAEvC,KAAM,CAClBjC,GAAM+U,GAAS4D,kBAAkBqC,GAASnL,EAO1C,cAJe,WAAXkF,GAAwBvS,EAAK0X,cAA2B,SAAXnF,IAAwBvS,EAAK0X,cAA2B,SAAXnF,KAC1FvS,EAAK0X,cAAgB1X,EAAK0X,aAC1B1X,EAAK4X,UAAY5V,EAAEiX,cAavCb,kBAASnY,GACL,MAA0B,gBAAfD,MAAKmX,MACLlX,EAAQD,KAAKmX,MAAM3W,KAAOR,KAAKmX,MAAMhE,KAGzCnT,KAAKmX,OAQhB+B,4BACI,OACIC,WAAY3C,iBAAiBxW,KAAKsX,WAClCT,QAAS7W,KAAKoZ,SACdnR,OAAQjI,KAAKyY,SACbrR,QAASwP,eACTyC,YAAa1C,oBACbS,OAAQpX,KAAKoX,OACbJ,YAAahX,KAAKgX,YAClBQ,aAAcxX,KAAKwX,eAO3B8B,iCACItZ,MAAK2X,YAAa,EAClB3Q,aAAahH,KAAKqY,UAClBrY,KAAKqY,SAAWxR,WAAW,WACvB7G,EAAKoZ,SAAS1R,MAAM6R,QAAU,OAC9BvZ,EAAK2Y,iBACN5B,sBAMPyC,qCACQxZ,MAAK4Y,SACL5Y,KAAKoJ,UAAU,WACXpJ,EAAK4Y,QAAQrN,cASzBkO,wBAAejB,aAEX,KAAKhb,GAAMmF,KAAQwT,mBAAkBqC,GACjCxY,EAAKyY,SAASpQ,oBAAoB1F,EAAM,SAAAX,SAAKhC,GAAK0Y,aAAa1W,MAOvEgW,sBACQhY,KAAK4Y,SACL5Y,KAAK4Y,QAAQZ,WAAWhY,KAAKkZ,qBAOrCQ,iCACI1S,cAAahH,KAAKqY,UAEbrY,KAAK4Y,UACN5Y,KAAK4Y,QAAU,GAAIe,GAAO3Z,KAAKkZ,qBAEnClZ,KAAKoZ,SAAS1R,MAAM6R,QAAU,QAG9BvZ,KAAKwZ,kBAELxZ,KAAKoJ,UAAU,WACXpJ,EAAK2X,YAAa,KAO1BW,uBAAcsB,GACV5Z,KAAKmB,MAAM,aAAcyY,GACrBA,GACA5Z,KAAK0Z,cACL1Z,KAAKoC,MAAMjB,MAAM,oBAEjBnB,KAAKsZ,cACLtZ,KAAKoC,MAAMjB,MAAM,qBASzBgX,yBAAgBV,EAAUoC,gCACtBrc,IAAMya,MACA6B,IAGNrC,GAASjY,QAAQ,SAAAmD,GACTkX,EAAgBzV,QAAQzB,MAAU,GAClCsV,EAAY3Y,KAAKqD,KAKzBkX,EAAgBra,QAAQ,SAAAmD,GAChB8U,EAASrT,QAAQzB,MAAU,GAC3BmX,EAAexa,KAAKqD,KAK5BsV,EAAYzY,QAAQ,SAAAmD,SAAQ3C,GAAKuY,YAAY5V,KAC7CmX,EAAeta,QAAQ,SAAAmD,SAAQ3C,GAAKyZ,eAAe9W,OAI3D5C,6BACIC,MAAKoC,MAAM4F,IAAI,gBAAiB,WAC5BhI,EAAK0X,cAAe,KAI5B1W,mBAEIhB,KAAKyY,SAAWzY,KAAKyJ,MAAM+O,QAAQ1P,SAAS,IAAM9I,KAAKyJ,MAAM+O,QAC7DxY,KAAKoZ,SAAWpZ,KAAKyJ,MAAMsQ,QAC3B/Z,KAAKoZ,SAAS1R,MAAM6R,QAAU,OAC9BvZ,KAAKqY,SAAW,EAGhBrY,KAAKmY,gBAAgBnY,KAAK6X,oBAGtB7X,KAAK+X,WACL/X,KAAK0Z,eAIbnN,mBACIvM,KAAKwZ,mBAGTQ,mCACIha,MAAK6X,mBAAmBrY,QAAQ,SAAAmD,SAAQ3C,GAAKyZ,eAAe9W,KAC5DqE,aAAahH,KAAKqY,UAClBrY,KAAK2Y,4BCzaGhZ,4YACZO,UACIC,uBACI,OACI,eACAH,KAAKia,gBACJja,KAAKka,SAAWla,KAAKma,SAAY,uBAAyB,GAC3Dna,KAAKma,SAAW,wBAA0B,KAGlDC,uBACI,OACIC,MAAOra,KAAKsa,SAAW,MAG/BL,2BACI,MAAOja,MAAKM,QAAU,MAAMN,KAAKM,QAAY,MAEjDga,oBACI9c,GAAM+c,GAAIhF,KAAKiF,IAAI,GAAIxa,KAAKya,UAC5B,OAAOlF,MAAKmF,MAAO,IAAMH,EAAIva,KAAKX,MAASW,KAAK2a,KAAOJ,IAG/D9Z,OACIyZ,SACIza,KAAMmB,QACND,SAAS,GAEbwZ,UACI1a,KAAMmB,QACND,SAAS,GAEb8Z,WACIhb,KAAMoB,OACNF,QAAS,GAEbtB,OACII,KAAMoB,OACNF,QAAS,GAEbga,KACIlb,KAAMoB,OACNF,QAAS,KAEbL,SACIb,KAAMiB,OACNC,QAAS,MAEbia,cACInb,KAAMmB,QACND,SAAS,GAEbka,WACIpb,KAAMmB,QACND,SAAS,KCxDf8N,SAAW,SAAAqM,GACb,MAAKA,GAIDA,YAAa1c,QACNA,OAAOY,KAAK8b,GAAGpY,IAAI,SAAAqY,SAAKtM,UAASqM,EAAEC,MAAKtS,KAAK,KAGjD/H,OAAOoa,GAPH,IAUTE,mBAAqB,SAACC,EAAGC,EAAGC,GAC9B,MAAO1M,UAASwM,EAAEE,IAASC,cAAc3M,SAASyM,EAAEC,IAAUE,QAAYC,SAAS,YAGvE3b,6sBACZ0C,YAAakZ,YAAAA,aACb3b,gBACI,OACIub,OAAQ,KACRK,UAAU,IAGlB/a,OACIgC,OACIhD,KAAMuD,MACNrC,QAAS,sBAEb8a,QACIhc,KAAMrB,OACNuC,QAAS,cAGbuZ,SACIza,KAAMmB,QACND,SAAS,GAEbyV,OACI3W,KAAMmB,QACND,SAAS,GAEb+U,SACIjW,KAAMoB,OACNF,QAAS,MAEb+a,WACIjc,KAAMiB,OACNC,QAAS,MAEb0U,aACI5V,KAAMoB,OACNF,QAAS,GAEbzB,QACIO,MAAOiB,OAAQqY,OAAQzK,UACvB3N,QAAS,MAEbgb,aACIlc,KAAM6O,SACN3N,QAAS,MAEbib,eACInc,KAAM6O,SACN3N,QAAS,MAEbtB,OACII,KAAMuD,MACNrC,QAAS,uBAIjBT,UACI2b,4BACI,KAAK7b,KAAKyC,MACN,QAGJ,IAAIzC,KAAK4b,cACL,MAAO5b,MAAK4b,cAAc5b,KAG9BsB,IAAImB,GAAQzC,KAAKyC,MAAMuG,OAGvB,IAAIhJ,KAAKd,OACL,GAAIc,KAAKd,iBAAkBoP,UACvB7L,EAAQA,EAAMvD,OAAOc,KAAKd,YACvB,CACHoC,GAAIwa,EAEAA,GADA9b,KAAKd,iBAAkB6Z,QACf/Y,KAAKd,OAEL,GAAI6Z,QAAO,KAAO/Y,KAAKd,OAAS,KAAM,MAElDuD,EAAQA,EAAMvD,OAAO,SAAAyD,GACjBnF,GAAM6Z,GAAOyE,EAAMzE,KAAK5I,SAAS9L,GAEjC,OADAmZ,GAAMC,UAAY,EACX1E,IAMnB7Z,GAAMme,GAAc3b,KAAK2b,aAAeX,kBAcxC,OAbIhb,MAAKmb,SACL1Y,EAAQA,EAAMuZ,KAAK,SAACf,EAAGC,GACnB1d,GAAMye,GAAIN,EAAYV,EAAGC,EAAGlb,EAAKmb,OACjC,OAAOnb,GAAKwb,SAAWS,EAAIA,GAAI,KAIvCjc,KAAKmB,MAAM,QAASsB,GAGhBzC,KAAK0V,UACLjT,EAAQA,EAAMuG,OAAOhJ,KAAKqV,YAAc,GAAKrV,KAAK0V,QAAS1V,KAAKqV,YAAcrV,KAAK0V,UAEhFjT,IAGfxB,SACIib,oBAAWvZ,EAAM6C,GACbxF,KAAKmB,MAAM,cAAewB,EAAM6C,IAEpC2W,mBAAUC,EAAOC,GACb,MAAKD,GAAME,UAKPD,IAAQrc,KAAKmb,SACbnb,KAAKwb,UAAYxb,KAAKwb,eAG1Bxb,KAAKmb,OAASkB,SARVrc,KAAKmb,OAAS,eCrHdxb,+9BACZC,gBACI,OACI2c,WAAYvc,KAAKX,MACjBmV,UAGR/T,OACI+b,QACI/c,KAAMmB,QACND,SAAS,GAEb8b,MACIhd,KAAMmB,QACND,SAAS,GAEb+b,OACIjd,KAAMmB,QACND,SAAS,GAEbtB,OACII,KAAMoB,OACNF,QAAS,GAEb+T,OACIjV,KAAMmB,QACND,SAAS,GAEbgc,MACIld,KAAMmB,QACND,SAAS,GAEb+V,QACIjX,KAAMmB,QACND,SAAS,IAGjBG,OACIyb,oBAAWhW,EAAKsC,GACRtC,IAAQsC,IAIZ7I,KAAKoC,MAAMjB,MAAM,eAAgBnB,KAAMuG,EAAKvG,KAAKwU,KAAKjO,IACtDvG,KAAKmB,MAAM,QAASoF,GACpBvG,KAAKwU,KAAKjO,GAAKpF,MAAM,WAEzB9B,eAAMkH,EAAKsC,GACHtC,IAAQsC,GAIZ7I,KAAK4c,OAAOrW,IAEhB6M,cAAK7M,EAAKsC,aACFtC,KAAQsC,GAIZ7I,KAAKwU,KAAKhV,QAAQ,SAAAmD,GACd3C,EAAK6c,KAAKla,EAAM,OAAQ4D,OAIpCrG,UACIkT,gBACI,OAAQpT,KAAKwc,QAEjBM,oBACI,MAAO9c,MAAK0U,MAAQ,QAAU,SAGtCzT,SAII8b,mBACI/c,KAAK4c,OAAO5c,KAAKuc,WAAa,IAMlCS,uBACIhd,KAAK4c,OAAO5c,KAAKuc,WAAa,IAMlCK,gBAAOpX,EAAOyX,GAEV,GAAKA,GAASzX,IAAUxF,KAAKuc,WAA7B,CAIA/e,GAAM0f,GAAMld,KAAKwU,KAAKhP,EAGjB0X,KAKDA,EAAIrb,WAKJ7B,KAAKwU,KAAKxU,KAAKuc,aACfvc,KAAK6c,KAAK7c,KAAKwU,KAAKxU,KAAKuc,YAAa,eAAe,GAIzDvc,KAAK6c,KAAKK,EAAK,eAAe,GAG9Bld,KAAKuc,WAAa/W,MAMtB2X,gCAEQnd,MAAKod,OAAOzc,QACZX,KAAKwU,KAAOxU,KAAKod,OAAOzc,QAAQzB,OAAO,SAAAge,SAAOA,GAAIG,oBAAqB,IAClE3a,IAAI,SAAAwa,SAAOA,GAAIG,oBAEpBrd,KAAKwU,QAGTxU,KAAKwU,KAAKhV,QAAQ,SAAA0d,GACdld,EAAK6c,KAAKK,EAAK,OAAQld,EAAKoT,MAC5BpT,EAAK6c,KAAKK,EAAK,OAAQld,EAAK2c,OAIhCrb,IAAIgc,GAAWtd,KAAKuc,UAEI,QAApBvc,KAAKuc,YAA2ClB,SAApBrb,KAAKuc,YACjCvc,KAAKwU,KAAKhV,QAAQ,SAAC0d,EAAK1X,GAChB0X,EAAIpa,SACJwa,EAAW9X,KAMnB8X,EAAWtd,KAAKwU,KAAKvW,OAAS,IAC9Bqf,EAAWtd,KAAKwU,KAAKvW,OAAS,GAGlC+B,KAAK4c,OAAOU,GAAY,GAAG,KAGnCtc,mBACIhB,KAAKmd,aAGLI,WAAWvd,KAAKyJ,MAAM+T,cAAexd,KAAKmd,WAAWM,KAAKzd,OAAQzB,SAAS,WCpLnEoB,ieACZsB,SACIwG,iBACIzH,KAAKQ,MAAO,GAEhBkd,uBACI1d,KAAKQ,MAAO,IAGpBZ,gBACI,OACIwT,MAAM,EACNuK,aAAa,EACbhB,MAAM,EACNnc,MAAM,IAGdC,OACIqD,IACIrE,KAAMiB,OACNC,QAAS,IAEbkE,OACIpF,KAAMiB,OACNC,QAAS,IAEbid,UACIne,KAAMiB,OACNC,QAAS,MAEbkB,UACIpC,KAAMmB,QACND,SAAS,GAEbmC,QACIrD,KAAMmB,QACND,SAAS,GAEbsB,MACIxC,KAAMiB,OACNC,QAAS,gBC9BLhB,mdACZ+K,QAASmT,SACTpd,OACIgX,UACIhY,MAAOmB,QAASF,OAAQsC,OACxBrC,QAAS,q8BlD7BfvB,kBAAoBgX,OAAO,EAAMrU,OAAO,EAAMuH,OAAO,GmDErD5K,cAAgBqD,OAAO,WAGzB0b,cAAKpgB,EAAIoB,GACLwJ,QAAO5K,EAAIoB,EAASC,aAAc,SAACof,MAACtf,aAASI,MACzCJ,GAAQgB,QAAQ,SAAAyI,GACZrJ,EAAGwD,MAAMjB,MAAM,mBAAoB8G,SCN7CvJ,gBAAgBqD,OAAO,YAGzB0b,cAAKpgB,EAAIoB,GACLwJ,QAAO5K,EAAIoB,EAASC,eAAc,SAACof,MAACtf,aAASI,MACzCJ,GAAQgB,QAAQ,SAAAyI,GACZrJ,EAAGwD,MAAMjB,MAAM,cAAe8G,EAAQ5K,mECHhD0gB,WACFC,QAAS,SAAUC,GACf,IAAIA,EAAIC,yBAAR,CAIAD,EAAIC,0BAA2B,CAG/B,KAAK,GAAIC,KAAa9b,YAClB4b,EAAIE,UAAUA,EAAW9b,WAAW8b,GAIxC,KAAK,GAAIC,KAAaC,YAClBJ,EAAIG,UAAUA,EAAWC,WAAWD,MAK1B,oBAAX1gB,SAA0BA,OAAOugB,KACxCvgB,OAAOugB,IAAIK,IAAIP"}