{"version":3,"file":"bootstrap-vue.js","sources":["../lib/utils/observe-dom.js","../lib/utils/warn.js","../lib/mixins/dropdown.js","../lib/mixins/link.js","../lib/components/button-toolbar.vue","../lib/components/carousel.vue","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/components/pagination-nav.vue","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/array.js","../lib/utils/object.js","../lib/components/alert.vue","../lib/mixins/clickout.js","../lib/mixins/listen-on-root.js","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/mixins/form-custom.js","../lib/mixins/form-options.js","../lib/mixins/popover.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/components/form-checkbox.vue","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/navbar-brand.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/utils/range.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["\nimport { assign } from '../utils/object';\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\nfunction warn(message) {\n    console.warn(`[Bootstrap-Vue warn]: ${message}`)\n}\n\nexport default warn\n","import clickOut from './clickout';\nimport listenOnRootMixin from './listen-on-root'\nimport { from as arrayFrom } from '../utils/array'\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n    return els ? els.filter(el => isVisible(el)) : [];\n}\n\n// Dropdown item CSS selectors\nconst ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        id: {\n            type: String\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            visible: false\n        };\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.listenOnRoot('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.listenOnRoot('clicked::link', listener);\n    },\n    mounted: clickOut.mounted,\n    destroyed: clickOut.destroyed,\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n            if (state) {\n                this.emitOnRoot('shown::dropdown', this);\n                this.$emit('shown');\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if ('ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n\n                // Focus on the first item on show\n                this.$nextTick(() => { this.focusFirstItem() });\n\n            } else {\n                this.emitOnRoot('hidden::dropdown', this);\n                this.$emit('hidden');\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if ('ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    computed: {\n        toggler() {\n            if (this.split && this.$refs.toggle) {\n                return this.$refs.toggle.$el || this.$refs.toggle;\n            } \n            return this.$refs.button.$el || this.$refs.button;\n        }\n    },\n    methods: {\n        ...clickOut.methods,\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        clickOutListener() {\n            this.visible = false;\n        },\n        click(e) {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            if (this.split) {\n                this.$emit('click', e);\n                this.emitOnRoot('shown::dropdown', this);\n            } else {\n                this.toggle();\n            }\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                // Return focus to original trigger button\n                this.$nextTick(() => { this.focusToggler() });\n            }\n        },\n        onMouseOver(evt) {\n            // Focus the item on hover\n            const item = evt.target;\n            if (item.classList.contains('dropdown-item')\n                    && !item.disabled\n                    && !item.classList.contains('disabled')\n                    && item.focus) {\n                item.focus();\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (up && index > 0) {\n                    index--;\n                } else if (!up && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.focusItem(index, items);\n            });\n        },\n        focusItem(idx, items) {\n            let el = items.find((el, i) => i === idx)\n            if (el && el.getAttribute('tabindex') !== \"-1\") {\n                el.focus()\n            }\n        },\n        getItems() {\n            // Get all items\n            return filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ITEM_SELECTOR)));\n        },\n        getFirstItem() {\n            // Get the first non-disabled item\n            let item = this.getItems()[0];\n            return item || null;\n        },\n        focusFirstItem() {\n            const item = this.getFirstItem();\n            if (item) {\n                this.focusItem(0, [item]);\n            }\n        },\n        focusToggler() {\n            let toggler = this.toggler\n            if (toggler && toggler.focus) {\n                toggler.focus();\n            }\n        }\n    }\n};\n","import { warn } from '../utils';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\nexport const props = {\n    active: {\n        type: Boolean,\n        default: false\n    },\n\n    activeClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    append: {\n        type: Boolean,\n        default: false\n    },\n\n    disabled: {\n        type: Boolean,\n        default: false\n    },\n\n    event: {\n        type: [String, Array],\n        default: \"click\"\n    },\n\n    exact: {\n        type: Boolean,\n        default: false\n    },\n\n    exactActiveClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    href: {\n        type: String,\n        default: \"#\"\n    },\n\n    rel: {\n        type: String,\n        default: null\n    },\n\n    replace: {\n        type: Boolean,\n        default: false\n    },\n\n    routerTag: {\n        type: String,\n        default: \"a\"\n    },\n\n    tag: {\n        type: String,\n        default: null\n    },\n\n    target: {\n        type: String,\n        default: \"_self\"\n    },\n\n    to: {\n        type: [String, Object],\n        default: null\n    }\n};\n\nexport const computed = {\n    linkProps() {\n        return keys(props).reduce((memo, prop) => {\n            memo[prop] = this[prop];\n\n            return memo;\n        }, {});\n    },\n\n    isRouterLink() {\n        return Boolean(this.$router && this.to && !this.disabled);\n    },\n\n    _href() {\n        if (this.disabled) {\n            return \"#\";\n        }\n\n        // If href explicitly provided\n        if (this.href) {\n            return this.href;\n        }\n\n        // Fallback to `to` prop\n        if (this.to && typeof this.to === \"string\") {\n            return this.to;\n        }\n    },\n\n    computedRel() {\n        if (this.target === \"_blank\" && this.rel === null) {\n            return \"noopener\";\n        }\n        return this.rel || null;\n    },\n\n    componentTag(){\n        if (this.tag) {\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\n\n            return this.tag;\n        }\n\n        return this.routerTag;\n    },\n\n    linkClassObject() {\n        return [\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n            this.disabled ? \"disabled\" : null\n        ];\n    }\n};\n\nexport const methods = {\n    linkClick(e) {\n        if (!this.disabled) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        } else {\n            e.stopPropagation();\n        }\n\n        if (!this.isRouterLink && this._href === \"#\") {\n            // stop scroll-to-top behavior\n            e.preventDefault();\n        }\n    }\n};\n\nexport default {\n    props,\n    computed,\n    methods\n};\n\nexport function pickLinkProps(...propsToPick) {\n    return keys(props).reduce((memo, prop) => {\n        if (arrayIncludes(propsToPick, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n\nexport function omitLinkProps(...propsToOmit) {\n    return keys(props).reduce((memo, prop) => {\n        if (!arrayIncludes(propsToOmit, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled])',\n        '.form-control:not(.disabled):not([disabled])',\n        'select:not(.disabled):not([disabled])',\n        'input[type=\"checkbox\"]:not(.disabled)',\n        'input[type=\"radio\"]:not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            keyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                let items = arrayFrom(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items.filter(el => isVisible(el));\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             ref=\"inner\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                :key=\"'slide_' + n\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"setSlide(n-1)\"\n                @keydown.enter.stop.prevent=\"setSlide(n-1)\"\n                @keydown.space.stop.prevent=\"setSlide(n-1)\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array';\n    import { observeDom } from '../utils';\n\n    // Slide directional classes\n    const DIRECTION = {\n        next: {\n            dirClass: 'carousel-item-left',\n            overlayClass: 'carousel-item-next'\n        },\n        prev: {\n            dirClass: 'carousel-item-right',\n            overlayClass: 'carousel-item-prev'\n        }\n    };\n    \n    // Fallback Transition duration (with a little buffer) in ms\n    const TRANS_DURATION = 600 + 50;\n\n    // Transition Event names\n    const TransitionEndEvents = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'otransitionend',\n        transition: 'transitionend'\n    };\n\n    // Return the brtowser specific transitionend event name\n    function getTransisionEndEvent(el) {\n        for (const name in TransitionEndEvents) {\n            if (el.style[name] !== undefined) {\n                return TransitionEndEvents[name];\n            }\n        }\n        // fallback\n        return null;\n    }\n\n    export default {\n        data() {\n            return {\n                index: this.value || 0,\n                isSliding: false,\n                intervalId: null,\n                transitionEndEvent: null,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            },\n            value: {\n                type: Number,\n                default: 0\n            }\n        },\n        computed: {\n            isCycling() {\n                return Boolean(this.intervalId);\n            }\n        },\n        methods: {\n            // Set slide\n            setSlide(slide) {\n                // Don't animate when page is not visible\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    return;\n                }\n\n                const len = this.slides.length;\n                \n                // Don't do anything if nothing to slide to\n                if (len === 0) {\n                    return;\n                }\n                \n                // Don't change slide while transitioning, wait until transition is done\n                if (this.isSliding) {\n                    // Schedule slide after sliding complete\n                    this.$once('slid', () => this.setSlide(slide));\n                    return;\n                }\n\n                // Make sure we have an integer (you never know!)\n                slide = Math.floor(slide);\n\n                // Set new slide index. Wrap around if necessary\n                this.index = slide >= len ? 0 : (slide >= 0 ? slide : len - 1);\n            },\n\n            // Previous slide\n            prev() {\n                this.setSlide(this.index - 1);\n            },\n\n            // Next slide\n            next() {\n                this.setSlide(this.index + 1);\n            },\n            \n            // Pause auto rotation\n            pause() {\n                if (this.isCycling) {\n                    clearInterval(this.intervalId);\n                    this.intervalId = null;\n\n                    // Make current slide focusable for screen readers\n                    this.slides[this.index].tabIndex = 0;\n                }\n            },\n\n            // Start auto rotate slides\n            start() {\n                // Don't start if no intetrval, or if we are already running\n                if (!Boolean(this.interval) || this.isCycling) {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this.intervalId = setInterval(() => {\n                    this.next();\n                }, Math.max(1000, this.interval));\n            },\n\n            // Re-Start auto rotate slides when focus/hover leaves the carousel\n            restart(evt) {\n                if (!evt.relatedTarget || !this.$el.contains(evt.relatedTarget)) {\n                    this.start();\n                }\n            },\n\n            // Update slide list\n            updateSlides() {\n                this.pause();\n\n                // Get all slides\n                this.slides = arrayFrom(this.$refs.inner.querySelectorAll('.carousel-item'));\n\n                const id = this.id;\n                const numSlides = this.slides.length;\n\n                // Keep slide number in range\n                const index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));\n\n                this.slides.forEach((slide, idx) => {\n                    const n = idx + 1;\n\n                    slide.classList[idx === index ? 'add' : 'remove']('active');\n                    slide.setAttribute('aria-current', idx === index ? 'true' : 'false');\n                    slide.setAttribute('aria-posinset', String(n));\n                    slide.setAttribute('aria-setsize', String(numSlides));\n                    slide.tabIndex = -1;\n                    if (id) {\n                        slide.setAttribute('aria-controlledby', id + '__BV_indicator_' + n + '_');\n                    }\n                });\n\n                // Set slide as active\n                this.setSlide(index);\n\n                this.start();\n            }\n\n        },\n        watch: {\n            value(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.setSlide(newVal);\n                }\n            },\n            interval(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n                if (!Boolean(newVal)) {\n                    // Pausing slide show\n                    this.pause();\n                } else {\n                    // Restarting or Changing interval\n                    this.pause();\n                    this.start();\n                }\n            },\n            index(val, oldVal) {\n                if (val === oldVal || this.isSliding) {\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                // Don't do anything if there aren't any slides to slide to\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n                this.$emit('slide', val);\n\n                // Update v-model\n                this.$emit('input', this.index);\n\n                nextSlide.classList.add(direction.overlayClass);\n                // Trigger a reflow of next slide\n                // eslint-ignore-next-line no-void\n                void(nextSlide.offsetHeight);\n\n                currentSlide.classList.add(direction.dirClass);\n                nextSlide.classList.add(direction.dirClass);\n\n                // Transition End handler\n                let called = false;\n                const onceTransEnd = (evt) => {\n                    if (called) {\n                        return;\n                    }\n                    called = true;\n                    if (this.transitionEndEvent) {\n                        currentSlide.removeEventListener(this.transitionEndEvent, onceTransEnd);\n                    }\n                    this._animationTimeout = null;\n\n                    nextSlide.classList.remove(direction.dirClass);\n                    nextSlide.classList.remove(direction.overlayClass);\n                    nextSlide.classList.add('active');\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.classList.remove(direction.dirClass);\n                    currentSlide.classList.remove(direction.overlayClass);\n\n                    currentSlide.setAttribute('aria-current', 'false');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n\n                    currentSlide.tabIndex = -1;\n                    nextSlide.tabIndex = -1;\n\n                    if (!this.isCycling) {\n                        // Focus the next slide for screen readers if not in play mode\n                        nextSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            nextSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                    // Notify ourselves that we're done sliding (slid)\n                    this.$nextTick(() => this.$emit('slid', val));\n                };\n\n                // Clear transition classes after transition ends\n                if (this.transitionEndEvent) {\n                    currentSlide.addEventListener(this.transitionEndEvent, onceTransEnd);\n                }\n                // Fallback to setTimeout\n                this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);\n            }\n        },\n        created() {\n            // Create private non-reactive props\n            this._animationTimeout = null;\n        },\n        mounted() {\n            // Cache current browser transitionend event name\n            this.transitionEndEvent = getTransisionEndEvent(this.$el) || null;\n\n            // Get all slides\n            this.updateSlides();\n\n            // Observe child changes so we can update slide list\n            observeDom(this.$refs.inner, this.updateSlides.bind(this), {subtree: false});\n        },\n        destroyed() {\n            clearInterval(this.intervalId);\n            clearTimeout(this._animationTimeout);\n            this._animationTimeout = null;\n        }\n    };\n\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_header_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\"\n                                ref=\"header\"\n                                :id=\"id ? (id + '__BV_header_') : null\"\n                                v-if=\"!hideHeader\"\n                        >\n                            <slot name=\"modal-header\">\n                                <h5 :is=\"titleTag\" class=\"modal-title\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"headerCloseLabel\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn v-if=\"!okOnly\"\n                                       variant=\"secondary\"\n                                       :size=\"buttonSize\"\n                                       @click=\"hide(false)\"\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\n                                <b-btn variant=\"primary\"\n                                       :size=\"buttonSize\"\n                                       :disabled=\"okDisabled\"\n                                       @click=\"hide(true)\"\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible, in: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n    import { listenOnRootMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array'\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled])',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'a:not([disabled]):not(.disabled)',\n        '[tabindex]:not([disabled]):not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    // Find the first visible element contained in a given root element\n    function findFirstVisible(root, selector) {\n        if (!root || !root.querySelectorAll || !selector) {\n            return null;\n        }\n        let els = arrayFrom(root.querySelectorAll(selector));\n\n        // IE 10 & 11 do not support native array.find()\n        // So we try native find first, then fall back to a loop\n        let el = els.find ? els.find(el => isVisible(el)) : null;\n        for (let i = 0; !el && i < els.length; i++) {\n            if (isVisible(els[i])) {\n                el = els[i];\n            }\n        }\n        return el;\n    }\n\n    export default {\n        mixins: [listenOnRootMixin],\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h5'\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            buttonSize: {\n                type: String,\n                default: 'md'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            noAutoFocus: {\n                type: Boolean,\n                default: false\n            },\n            noEnforceFocus: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            headerCloseLabel: {\n                type: String,\n                default: 'Close'\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Don't try and focus if we are SSR\n                if (typeof document === 'undefined') {\n                    return;\n                }\n                this.$nextTick(() => {\n                    // If activeElement is child of content, no need to change focus\n                    if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                        return;\n                    }\n\n                    let el;\n                    if (!this.noAutoFocus) {\n                        // Focus the modal's first focusable item, searching body, footer, then header\n                        if (this.$refs.body) {\n                            el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.footer) {\n                            el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.header) {\n                            el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\n                        }\n                    }\n                    if (!el) {\n                        // Focus the modal content wrapper\n                        el = this.$refs.content;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            },\n            returnFocusTo() {\n                // Prrefer returnFocus prop over event specified value\n                let el = this.returnFocus || this.return_focus || null;\n\n                if (el) {\n                    if (typeof el === 'string') {\n                        // CSS Selector\n                        el = document.querySelector(el);\n                    }\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        // Component vm reference\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        // Plain element\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (!this.noEnforceFocus &&\n                    this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            },\n            showHandler(id, triggerEl) {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || null;\n                    this.show();\n                }\n            },\n            hideHandler(id) {\n                if (id === this.id) {\n                    this.hide();\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('show::modal', this.showHandler);\n            this.listenOnRoot('hide::modal', this.hideHandler);\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <ul :class=\"['pagination',btnSize,alignment]\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        role=\"menubar\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelFirstPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   role=\"menuitem\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, 1)\"\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\n                   @keydown.space.prevent=\"setPage($event, 1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <a class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               :aria-controls=\"ariaControls || null\"\n               role=\"menuitem\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\" role=\"none presentation\" :class=\"pageItemClasses(page)\" :key=\"page.number\">\n            <a :class=\"pageLinkClasses(page)\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : null\"\n               :aria-label=\"labelPage + ' ' + page.number\"\n               :aria-checked=\"isActive(page.number) ? 'true' : 'false'\"\n               :aria-controls=\"ariaControls || null\"\n               :aria-posinset=\"page.number\"\n               :aria-setsize=\"numberOfPages\"\n               role=\"menuitemradio\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, page.number)\"\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\n               @keydown.space.prevent=\"setPage($event, page.number)\"\n            >{{ page.number }}</a>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <a class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               :aria-controls=\"ariaControls || null\"\n               role=\"menuitem\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\"\n                class=\"page-item disabled\"\n                role=\"none presentation\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelLastPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   role=\"menuitem\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\nexport default {\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    computed: {\n        numberOfPages() {\n            const result = Math.ceil(this.totalRows / this.perPage);\n            return (result < 1) ? 1 : result;\n        },\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        alignment() {\n            if (this.align === 'center') {\n                return 'justify-content-center';\n            } else if  (this.align === 'end' || this.align === 'right') {\n                return 'justify-content-end';\n            }\n            return '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n\n            let numLinks = this.limit;\n            let startNum = 1;\n\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n\n            return pages;\n        }\n    },\n    methods: {\n        isActive(page) {\n            return page === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        setPage(e, num) {\n            if (this.disabled) {\n                e.preventDefault();\n                e.stopPropagation();\n                return;\n            }\n            if (num > this.numberOfPages) {\n                this.currentPage = this.numberOfPages;\n            } else if (num < 1) {\n                this.currentpage = 1;\n            } else {\n                this.currentPage = num;\n            }\n            this.$nextTick(() => {\n                // Keep the current button focused if possible\n                if (isVisible(e.target) && e.target.focus) {\n                    e.target.focus();\n                } else {\n                    this.focusCurrent();\n                }\n            });\n            this.$emit('change', this.currentPage);\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    },\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        perPage: {\n            type: Number,\n            default: 20\n        },\n        totalRows: {\n            type: Number,\n            default: 20\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        },\n        ariaControls: {\n            type: String,\n            default: null\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n","<template>\n<nav>\n    <ul :class=\"['pagination',btnSize,alignment]\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        role=\"menubar\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <b-link class=\"page-link\"\n                        v-bind=\"linkProps(1)\"\n                        :aria-label=\"labelFirstPage\"\n                        role=\"menuitem\"\n                        tabindex=\"-1\"\n                        @click=\"onClick(1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></b-link>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <b-link class=\"page-link\"\n                    v-bind=\"linkProps(currentPage - 1)\"\n                    :aria-label=\"labelPrevPage\"\n                    role=\"menuitem\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></b-link>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\" role=\"none presentation\" :class=\"pageItemClasses(page)\" :key=\"page.number\">\n            <span v-if=\"disabled\" class=\"page-link\">{{ page.number }}</span>\n            <b-link v-else\n                    v-bind=\"linkProps(page.number)\"\n                    :class=\"pageLinkClasses(page)\"\n                    :disabled=\"disabled\"\n                    :aria-disabled=\"disabled ? 'true' : null\"\n                    :aria-label=\"labelPage + ' ' + page.number\"\n                    :aria-checked=\"isActive(page.number) ? 'true' : 'false'\"\n                    :aria-posinset=\"page.number\"\n                    :aria-setsize=\"numberOfPages\"\n                    role=\"menuitemradio\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(page.number)\"\n            >{{ makePage(page.number) }}</b-link>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <b-link class=\"page-link\"\n                    v-bind=\"linkProps(currentPage + 1)\"\n                    :aria-label=\"labelNextPage\"\n                    role=\"menuitem\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></b-link>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\"\n                class=\"page-item disabled\"\n                role=\"none presentation\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <b-link class=\"page-link\"\n                        v-bind=\"linkProps(numberOfPages)\"\n                        :aria-label=\"labelLastPage\"\n                        role=\"menuitem\"\n                        @click=\"onClick(numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></b-link>\n            </li>\n        </template>\n    </ul>\n</nav>\n</template>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n\n<script>\nimport bLink from './link.vue';\nimport { pickLinkProps } from '../mixins/link';\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\nimport { assign } from '../utils/object';\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\n// Props needed for router links\nconst routerProps = pickLinkProps('activeClass','exactActiveClass','append','exact','replace','target','rel');\n\n// Props object\nconst props = assign(\n    // pagination-nav specific props\n    {\n        numberOfPages: {\n            type: Number,\n            default: 1\n        },\n        baseUrl: {\n            type: String,\n            default: '/'\n        },\n        useRouter: {\n            type: Boolean,\n            default: false\n        },\n        linkGen: {\n            type: Function,\n            default: null\n        },\n        pageGen: {\n            type: Function,\n            default: null\n        }\n    },\n    // pagination common props\n    {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        }\n    },\n    // Router specific props\n    routerProps\n);\n\nexport default {\n    components: { bLink },\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    props,\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    computed: {\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        alignment() {\n            if (this.align === 'center') {\n                return 'justify-content-center';\n            } else if  (this.align === 'end' || this.align === 'right') {\n                return 'justify-content-end';\n            }\n            return '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n            let numLinks = this.limit;\n            let startNum = 1;\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n            return pages;\n        }\n    },\n    methods: {\n        onClick(pageNum) {\n            this.currentPage = pageNum;\n        },\n        makeLink(pagenum) {\n            if (this.linkGen && typeof this.linkGen === 'function') {\n                return this.linkGen(pagenum);\n            }\n            const link = `${this.baseUrl}${pagenum}`;\n            return this.useRouter ? { path: link } : link;\n        },\n        makePage(pagenum) {\n            if (this.pageGen && typeof this.pageGen === 'function') {\n                return this.pageGen(pagenum);\n            }\n            return pagenum;\n        },\n        linkProps(pagenum) {\n            const link = this.makeLink(pagenum);\n            let props = {\n                href: typeof link === 'string' ? link : null,\n                target: this.target || null,\n                rel: this.rel || null,\n                disabled: this.disabled\n            };\n            if (this.useRouter || typeof link === 'object') {\n                props = assign(props, {\n                    to: link,\n                    exact: this.exact,\n                    activeClass: this.activeClass,\n                    exactActiveClass: this.exactActiveClass,\n                    append: this.append,\n                    replace: this.replace\n                });\n            }\n            return props;\n        },\n        isActive(pagenum) {\n            return pagenum === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    }\n};\n</script>\n","import { keys } from '../utils/object';\nconst all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets (vnode, binding, listen_types, fn) {\n\n    const targets = keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vnode});\n    };\n\n    keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            vnode.elm.addEventListener(type, listener);\n        }\n    });\n\n    // Return the list of targets\n    return targets;\n}\n","import { isArray, from as arrayFrom } from '../utils/array';\nimport { assign, keys } from '../utils/object';\nconst inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Polyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 100\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return arrayFrom(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Fake a resize event to schedule a refresh/process\nScrollSpy.prototype.scheduleRefresh = function () {\n    this.handleEvent({type:'resize'});\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(self._resizeTimeout);\n        self._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange' || e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding).listen();\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    update(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    componentUpdated(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n    Array.from = (function() {\n        const toStr = Object.prototype.toString\n        const isCallable = fn => typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\"\n        const toInteger = value => {\n            const number = Number(value)\n            if (isNaN(number)) {\n                return 0\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number\n            }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n        }\n        const maxSafeInteger = Math.pow(2, 53) - 1\n        const toLength = value => Math.min(Math.max(toInteger(value), 0), maxSafeInteger)\n\n        // The length property of the from method is 1.\n        return function from(arrayLike /*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            const C = this\n\n            // 2. Let items be ToObject(arrayLike).\n            const items = Object(arrayLike)\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError(\"Array.from requires an array-like object - not null or undefined\")\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            const mapFn = arguments.length > 1 ? arguments[1] : void undefined\n            let T\n\n            if (typeof mapFn !== \"undefined\") {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError(\"Array.from: when provided, the second argument must be a function\")\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2]\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            const len = toLength(items.length)\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            let A = isCallable(C) ? Object(new C(len)) : new Array(len)\n\n            // 16. Let k be 0.\n            let k = 0\n            // 17. Repeat, while k < len… (also steps a - h)\n            let kValue\n            while (k < len) {\n                kValue = items[k]\n                if (mapFn) {\n                    A[k] = typeof T === \"undefined\" ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\n                } else {\n                    A[k] = kValue\n                }\n                k += 1\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len\n            // 20. Return A.\n            return A\n        }\n    })()\n}\n\nif (!Array.isArray) {\n    Array.isArray = arg => Object.prototype.toString.call(arg) === \"[object Array]\"\n}\n\n// Static\nexport const from = Array.from\nexport const isArray = Array.isArray\n\n// Instance\nexport const arrayIncludes = (array, value) => array.indexOf(value) !== -1\n","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function(target, varArgs) {\n        // .length of function is 2\n\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n\n        let to = Object(target);\n\n        for (let index = 1; index < arguments.length; index++) {\n            const nextSource = arguments[index];\n\n            if (nextSource != null) {\n                // Skip over if undefined or null\n                for (const nextKey in nextSource) {\n                    // Avoid bugs when hasOwnProperty is shadowed\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n        }\n        return to;\n    };\n}\n\nexport const assign = Object.assign;\nexport const getOwnPropertyNames = Object.getOwnPropertyNames;\nexport const keys = Object.keys;\nexport const defineProperties = Object.defineProperties;\nexport const defineProperty = Object.defineProperty;\nexport const freeze = Object.freeze;\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport const getPrototypeOf = Object.getPrototypeOf;\nexport const create = Object.create;\nexport const isFrozen = Object.isFrozen;\nexport const is = Object.is;\n\nexport function readonlyDescriptor() {\n    return { enumerable: true, configurable: false, writable: false };\n}\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                :aria-label=\"dismissLabel\"\n                v-if=\"localDismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false,\n                localDismissible: this.dismissible\n            };\n        },\n        created() {\n            if (this.state) {\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.localDismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    this.localDismissible = this.dismissible;\n                    return;\n                }\n\n                // Hide dismiss button for auto-dismissing\n                this.localDismissible = false;\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","import { isArray } from '../utils/array';\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\nconst BVRL = '__BV_root_listeners__';\n\nexport default {\n    methods: {\n        /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n        listenOnRoot(event, callback) {\n            if (!this[BVRL] || !isArray(this[BVRL])) {\n                this[BVRL] = [];\n            }\n            this[BVRL].push({ event, callback });\n            this.$root.$on(event, callback);\n            return this;\n        },\n\n        /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n        emitOnRoot(event, ...args) {\n            this.$root.$emit(event, ...args);\n            return this;\n        }\n    },\n\n    destroyed() {\n        if (this[BVRL] && isArray(this[BVRL])) {\n            while (this[BVRL].length > 0) {\n                // shift to process in order\n                const { event, callback } = this[BVRL].shift();\n                this.$root.$off(event, callback);\n            }\n        }\n    }\n}\n","export default {\n    props: {\n        name: {\n            type: String\n        },\n        id: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        required: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","export default {\n    computed: {\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        plain: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n","import { isArray } from '../utils/array';\nimport { keys } from '../utils/object';\n\nexport default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    // Resolve text field (uses key as value if not provided)\n                    option.text = option[this.textField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            if (this.returnObject && !this.multiple) {\n                for (let i = 0; i < formOptions.length; i++) {\n                    if (formOptions[i].value === this.localValue) {\n                        return formOptions[i];\n                    }\n                }\n                return null;\n            } else {\n                return this.localValue;\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: String,\n            default: 'value'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","import Tether from 'tether';\nimport listenOnRootMixin from './listen-on-root'\nimport { isArray, arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator: value => arrayIncludes(keys(PLACEMENT_PARAMS), value)\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            // Regex test for a pair of units, either 0 exactly, px, or percentage\n            validator: value => /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value)\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (isArray(value)) {\n                    const triggerKeys = keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (arrayIncludes(triggerKeys, item)) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                if (this.$data._trigger && this.$data._trigger.className) {\n                    this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n                }\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.emitOnRoot('shown::popover');\n            } else {\n                this.hidePopover();\n                this.emitOnRoot('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.listenOnRoot('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"componentTag\"\n       :class=\"linkClassObject\"\n       @click.native=\"linkClick\">\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport { linkMixin } from '../mixins';\n\nexport default {\n    mixins: [linkMixin]\n};\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"normalizedItem in normalizedItems\"\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\n            @click=\"onClick(normalizedItem._originalItem)\"\n            role=\"presentation\">\n            <span v-if=\"normalizedItem.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"normalizedItem.text\"></span>\n            <b-link v-else\n                    v-bind=\"normalizedItem._linkProps\"\n                    v-html=\"normalizedItem.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as linkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign, keys } from '../utils/object';\n\nconst bLinkPropKeys = keys(linkProps);\n\nexport default {\n    components: { bLink },\n    computed: {\n        normalizedItems() {\n            let userDefinedActive = false;\n            const originalItemsLength = this.items.length;\n\n            return this.items.map((item, index) => {\n                let normalizedItem = { _originalItem: item };\n                // if no active state is defined,\n                // default to the last item in the array as active\n                const isLast = index === originalItemsLength - 1;\n\n                // nothing defined except the text\n                if (typeof item === 'string') {\n                    assign(normalizedItem, { text: item, link: '#', active: isLast });\n                } else {\n                    assign(normalizedItem, item);\n                }\n\n                // don't default the active state if given a boolean value,\n                // or if a user defined value has already been given\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\n                    normalizedItem.active = isLast;\n                } else if (normalizedItem.active) {\n                    // here we know we've been given an active value,\n                    // so we won't set a default value\n                    userDefinedActive = true;\n                }\n\n                if (normalizedItem.link) {\n                    // default the link value to bLink's href prop\n                    normalizedItem.href = normalizedItem.link;\n                }\n\n                // stuff all the bLink props into a single place\n                // so we can bind to the component\n                // for dynamic prop proxying\n                normalizedItem._linkProps = keys(normalizedItem).reduce((memo, itemProp) => {\n                    if (arrayIncludes(bLinkPropKeys, itemProp)) {\n                        memo[itemProp] = normalizedItem[itemProp];\n                    }\n\n                    return memo;\n                }, {});\n\n                return normalizedItem;\n            });\n        }\n    },\n    props: {\n        items: {\n            type: Array,\n            default: () => [],\n            required: true\n        },\n        ariaCurrent: {\n            type: String,\n            default: 'location'\n        }\n    },\n    methods: {\n        onClick(item) {\n            this.$emit('click', item);\n        }\n    }\n};\n</script>\n","<template>\n    <button v-bind=\"conditionalLinkProps\"\n            :is=\"componentType\"\n            :class=\"classList\"\n            :data-toggle=\"dataToggle\"\n            :aria-pressed=\"ariaPressed\"\n            :type=\"btnType\"\n            :disabled=\"disabled\"\n            :tabindex=\"tabIndex\"\n            @focusin.native=\"handleFocus\"\n            @focusout.native=\"handleFocus\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href' and 'to' props\n// that we will reconstruct without any defaults\n// so our computed 'componentType' functions properly\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type }\n});\n\nexport default {\n    components: { bLink },\n    computed: {\n        linkProps: computed.linkProps,\n        classList() {\n            return [\n                'btn',\n                this.btnVariant,\n                this.btnSize,\n                this.btnBlock,\n                this.btnDisabled,\n                this.btnPressed\n            ];\n        },\n        componentType() {\n            return (this.href || this.to) ? 'b-link' : 'button';\n        },\n        btnBlock() {\n            return this.block ? 'btn-block' : '';\n        },\n        btnVariant() {\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n        },\n        btnSize() {\n            return this.size ? `btn-${this.size}` : '';\n        },\n        btnDisabled() {\n            return this.disabled ? 'disabled' : '';\n        },\n        btnType() {\n            return (this.href || this.to) ? null : this.type;\n        },\n        isToggle() {\n            return this.pressed === true || this.pressed === false;\n        },\n        btnPressed() {\n            return this.pressed ? 'active' : '';\n        },\n        ariaPressed() {\n            if (this.isToggle) {\n                // If a toggle button, Add aria-pressed state (must be string, not Boolean)\n                return this.pressed ? 'true' : 'false';\n            }\n            // Else remove aria-pressed attribute\n            return null;\n        },\n        dataToggle() {\n            // Toggle button needs the data-toggle=\"button\" attribute for propper styling\n            return this.isToggle ? 'button' : null;\n        },\n        tabIndex() {\n            // Disabled buttons automatically take themselves out of the tab order.\n            // Links do not, so we emulate this behaviour by setting tabindex to -1\n            return (this.disabled && this.componentType !== 'button') ? '-1' : null;\n        },\n        conditionalLinkProps() {\n            // Add conditional props only intended for 'b-link'\n            return this.componentType === 'button' ? {} : this.linkProps;\n        }\n    },\n    // merge our prepared link props with button props\n    props: assign(linkProps, {\n        block: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        type: {\n            type: String,\n            default: 'button'\n        },\n        pressed: {\n            // tri-state syncable prop: true, false or null\n            type: Boolean,\n            default: null\n        }\n    }),\n    methods: {\n        onClick(evt) {\n            if (this.disabled) {\n                evt.stopPropagation();\n                evt.preventDefault();\n            } else {\n                this.$emit('click', evt);\n                if (this.isToggle) {\n                    // Emit .sync notification to parent about pressed prop state changing\n                    this.$emit('update:pressed', !this.pressed);\n                }\n            }\n        },\n        handleFocus(evt) {\n            // When in toggle mode, we need to handle focus styling manualy via a class\n            if (this.isToggle) {\n                const classList = evt.target.classList;\n                if (evt.type === 'focusin') {\n                    classList.add('focus');\n                } else if (evt.type === 'focusout') {\n                    classList.remove('focus');\n                }\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" :class=\"['card-img', 'img-fluid']\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" :is=\"titleTag\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" :is=\"subTitleTag\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            titleTag: {\n                type: String,\n                default: 'h4'\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            subTitleTag: {\n                type: String,\n                default: 'h6'\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :is=\"contentTag\" :class=\"contentClasses\">\n            <h3 v-if=\"caption\" :is=\"captionTag\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" :is=\"textTag\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            contentTag: {\n                type: String,\n                default: \"div\"\n            },\n            caption: {\n                type: String\n            },\n            captionTag: {\n                type: String,\n                default: \"h3\"\n            },\n            text: {\n                type: String\n            },\n            textTag: {\n                type: String,\n                default: \"p\"\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                return [\n                    'carousel-caption',\n                    this.contentVisibleUp ? 'd-none' : '',\n                    this.contentVisibleUp ? `d-${this.contentVisibleUp}-block` : ''\n                ];\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            enter-class=\"\"\n            enter-active-class=\"collapsing\"\n            enter-to-class=\"\"\n            leave-class=\"\"\n            leave-active-class=\"collapsing\"\n            leave-to-class=\"\"\n            @enter=\"onEnter\"\n            @after-enter=\"onAfterEnter\"\n            @leave=\"onLeave\"\n            @after-leave=\"onAfterLeave\"\n    >\n        <div v-show=\"show\"\n             :id=\"id || null\"\n             :class=\"classObject\"\n             @click=\"clickHandler\"\n        ><slot></slot></div>\n    </transition>\n</template>\n\n<script>\n    import { listenOnRootMixin } from '../mixins';\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                show: this.visible,\n                transitioning: false\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        props: {\n            id: {\n                type: String,\n                required: true\n            },\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            accordion: {\n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                }\n            },\n            show(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.emitState();\n                }\n            }\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    'collapse': !this.transitioning,\n                    'show': this.show && !this.transitioning\n                };\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n            },\n            onEnter(el) {\n                el.style.height = 0;\n                this.reflow(el);\n                el.style.height = el.scrollHeight + 'px';\n                this.transitioning = true;\n                this.$emit('show');\n            },\n            onAfterEnter(el) {\n                el.style.height = null;\n                this.transitioning = false;\n                this.$emit('shown');\n            },\n            onLeave(el) {\n                el.style.height = 'auto';\n                el.style.display = 'block';\n                el.style.height = el.getBoundingClientRect().height + 'px';\n                this.reflow(el);\n                this.transitioning = true;\n                el.style.height = 0;\n                this.$emit('hide');\n            },\n            onAfterLeave(el) {\n                el.style.height = null;\n                this.transitioning = false;\n                this.$emit('hidden');\n            },\n            reflow(el) {\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            },\n            clickHandler(evt) {\n                // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n                const el = evt.target;\n                if (!this.isNav || !el || getComputedStyle(this.$el).display !== 'block') {\n                    return;\n                }\n                if (el.classList.contains('nav-link') || el.classList.contains('dropdown-item')) {\n                    this.show = false;\n                }\n            },\n            handleToggleEvt(target) {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            },\n            handleAccordionEvt(openedId, accordion) {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    // Open this collapse if not shown\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    // Close this collapse if shown\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            },\n            handleResize() {\n                // Handler for orientation/resize to set collapsed state in nav/navbar\n                this.show = (getComputedStyle(this.$el).display === 'block');\n            },\n        },\n        created() {\n            this.listenOnRoot('collapse::toggle', this.handleToggleEvt);\n            this.listenOnRoot('accordion::toggle', this.handleAccordionEvt);\n        },\n        mounted() {\n            if (this.isNav && typeof document !== 'undefined') {\n                // Set up handlers\n                window.addEventListener('resize', this.handleResize, false);\n                window.addEventListener('orientationchange', this.handleResize, false);\n                this.handleResize();\n            }\n            this.emitState();\n        },\n        destroyed() {\n            if (this.isNav && typeof document !== 'undefined') {\n                window.removeEventListener('resize', this.handleResize, false);\n                window.removeEventListener('orientationchange', this.handleResize, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :id=\"id || null\" :class=\"dropdownClasses\">\n\n        <b-button :class=\"{'dropdown-toggle': !split}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\">{{text}}</slot></slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split']\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"menuClasses\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @mouseover=\"onMouseOver\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [dropdownMixin],\n        components: {bButton},\n        props: {\n            split: {\n                type: Boolean,\n                default: false\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            }\n        },\n        computed: {\n            dropdownClasses() {\n                return [\n                    'b-dropdown',\n                    'dropdown',\n                    'btn-group',\n                    this.dropup ? 'dropup' : '',\n                    this.visible ? 'show' : ''\n                ];\n            },\n            menuClasses() {\n                return [\n                    'dropdown-menu',\n                    this.right ? 'dropdown-menu-right' : '',\n                    this.visible ? 'show' : ''\n                ];\n            }\n        }\n    };\n</script>\n\n<style>\n.b-dropdown .dropdown-item:focus:not(.active),\n.b-dropdown .dropdown-item:hover:not(.active) {\n    /* @See https://github.com/twbs/bootstrap/issues/23329 */\n    box-shadow: inset 0px 0px 400px 110px rgba(0, 0, 0, .09);\n}\n\n.b-dropdown .dropdown-item:active {\n    box-shadow: initial;\n}\n</style>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            v-bind=\"linkProps\"\n            @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\nimport { props, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            role=\"menuitem\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        onClick(e) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        },\n    }\n};\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\" @submit=\"$emit('submit',$event)\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label || $slots['label']\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n        >\n            <slot name=\"label\"><span v-html=\"label\"></span></slot>\n        </label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback || $slots['feedback']\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n            >\n                <slot name=\"feedback\"><span v-html=\"feedback\"></span></slot>\n            </div>\n            <small v-if=\"description || $slots['description']\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n            >\n                <slot name=\"description\"><span v-html=\"description\"></span></slot>\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    const INPUT_SELECTOR = [\n        '[role=\"radiogroup\"]',\n        'input',\n        'select',\n        'textarea',\n        '.form-control',\n        '.form-control-static',\n        '.dropdown',\n        '.dropup'\n    ].join(',');\n\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            computedLabelCols() {\n                if (this.labelSize) {\n                    warn('b-form-fieldset: prop label-size has been deprecated. Use label-cols instead');\n                    return this.labelSize;\n                }\n                return this.labelCols;\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.computedLabelCols) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.computedLabelCols)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.labelFor) {\n                    // User supplied for target\n                    return this.labelFor;\n                }\n                // Else find first input with ID\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            labelFor: {\n                type: String,\n                default() {\n                    if (this && this.for) {\n                        // Deprecate prop for\n                        warn(\"b-form-fieldet: prop 'for' has been deprecated. Use 'label-for' instead\");\n                        return this.for;\n                    }\n                    return null;\n                }\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelCols: {\n                type: Number,\n                default: 3,\n                validator(value) {\n                    if (value >= 1 && value <= 11) {\n                        return true;\n                    }\n                    warn('b-form-fieldset: label-cols must be a value between 1 and 11');\n                    return false;\n                }\n            },\n            labelSize: {\n                type: Number\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: INPUT_SELECTOR\n            }\n        }\n    };\n</script>\n","<template>\n    <label :class=\"button ? btnLabelClasses : labelClasses\"\n           :aria-pressed=\"button ? (isChecked ? 'true' : 'false') : null\"\n    >\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               ref=\"check\"\n               autocomplete=\"off\"\n               :aria-required=\"required ? 'true' : null\"\n               :class=\"(custom && !button ) ? 'custom-control-input' : null\"\n               :checked=\"isChecked\"\n               @focus=\"handleFocus\"\n               @blur=\"handleFocus\"\n               @change=\"handleChange\">\n        <span v-if=\"custom && !button\"\n              class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n        ></span>\n        <span :class=\"(custom && !button) ? 'custom-control-description' : null\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport { formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\nimport { arrayIncludes, isArray } from '../utils/array';\n\nexport default {\n    mixins: [formMixin, formCustomMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        },\n        indeterminate: {\n            type: Boolean,\n            default: false,\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        button: {\n            type: Boolean,\n            default: false,\n        },\n        buttonVariant: {\n            type: String,\n            default: 'secondary',\n        }\n    },\n    computed: {\n        labelClasses() {\n            return [\n                this.size ? `form-control-${this.size}` : '',\n                this.custom ? 'custom-checkbox' : '',\n                this.checkboxClass\n            ];\n        },\n        btnLabelClasses() {\n            return [\n                'btn',\n                `btn-${this.buttonVariant}`,\n                this.size ? `btn-${this.size}` : '',\n                this.isChecked ? 'active' : '',\n                this.disabled ? 'disabled' : ''\n            ];\n        },\n        isChecked() {\n            if (isArray(this.checked)) {\n                return arrayIncludes(this.checked, this.value);\n            } else {\n                return this.checked === this.value;\n            }\n        }\n    },\n    watch: {\n        indeterminate(newVal, oldVal) {\n            this.setIndeterminate(newVal);\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n            this.$emit('update:indeterminate', this.$refs.check.indeterminate);\n        },\n        setIndeterminate(state) {\n            this.$refs.check.indeterminate = state;\n            // Emit update event to prop\n            this.$emit('update:indeterminate', this.$refs.check.indeterminate);\n        },\n        handleFocus(evt) {\n            // Add or remove 'focus' class on label in button mode\n            if (this.button && evt.target && evt.target.parentElement) {\n                const label = evt.target.parentElement;\n                if (evt.type === 'focus') {\n                    label.classList.add('focus');\n                } else if (evt.type === 'blur') {\n                    label.classList.remove('focus');\n                }\n            }\n        }\n    },\n    mounted() {\n        // Set initial indeterminate state\n        this.setIndeterminate(this.indeterminate);\n    }\n};\n\n</script>\n","<template>\n    <div :id=\"id || null\"\n         :class=\"buttons ? btnGroupClasses : radioGroupClasses\"\n         role=\"radiogroup\"\n         :data-toggle=\"buttons ? 'buttons' : null\"\n         :aria-required=\"required ? 'true' : null\"\n         :aria-invalid=\"invalid ? 'true' : null\"\n    >\n        <label v-for=\"(option, idx) in formOptions\"\n               :class=\"buttons ? btnLabelClasses(option, idx) : labelClasses\"\n               :key=\"idx\"\n               :aria-pressed=\"buttons ? (option.value === localValue ? 'true' : 'false') : null\"\n        >\n            <input :id=\"id ? (id + '__BV_radio_' + idx) : null\"\n                   :class=\"(custom && !buttons) ? 'custom-control-input' : null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   autocomplete=\"off\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"name\"\n                   :required=\"name && required\"\n                   :disabled=\"option.disabled || disabled\"\n                   @focus=\"handleFocus\"\n                   @blur=\"handleFocus\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom && !buttons\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"(custom && !buttons) ? 'custom-control-description' : null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import { formOptionsMixin, formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            buttons: {\n                // Render as button style\n                type: Boolean,\n                default: false\n            },\n            buttonVariant: {\n                // Only applicable when rendered with button style\n                type: String,\n                default: 'secondary'\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        },\n        computed: {\n            radioGroupClasses() {\n                return [\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `has-${this.state}` : '',\n                    this.stacked ? 'custom-controls-stacked' : ''\n               ];\n            },\n            btnGroupClasses() {\n                return [\n                    'btn-group',\n                    this.size ? `btn-group-${this.size}` : null,\n                    this.stacked ? 'btn-group-vertical' : ''\n                 ];\n            },\n            labelClasses() {\n                return [\n                    this.checkboxClass,\n                    this.custom ? 'custom-radio' : null\n                ];\n            },\n            inline() {\n                return !this.stacked;\n            }\n        },\n        methods: {\n            btnLabelClasses(option, idx) {\n                return [\n                    'btn',\n                    `btn-${this.buttonVariant}`,\n                    (option.disabled || this.disabled) ? 'disabled' : '',\n                    option.value === this.localValue ? 'active' : null,\n                    // Fix staking issue (remove space between buttons)\n                    (this.stacked && idx === this.formOptions.length - 1) ? '' : 'mb-0'\n                ];\n            },\n            handleFocus(evt) {\n                // When in buttons mode, we need to add 'focus' class to label when radio focused\n                if (this.buttons && evt.target && evt.target.parentElement) {\n                    const label = evt.target.parentElement;\n                    if (evt.type ==='focus') {\n                        label.classList.add('focus');\n                    } else if (evt.type ==='blur') {\n                        label.classList.remove('focus');\n                    }\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"inputClass\"\n       v-html=\"staticValue\"\n    ></p>\n</template>\n\n<script>\n    export default {\n        computed: {\n            staticValue() {\n                const val = this.value;\n                return (val === '' || val === null) ? '&nbsp;' : val;\n            },\n            inputClass() {\n                return [\n                    'form-control-static',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            value: {\n                default: null\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <b-form-input-static v-if=\"static\"\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :size=\"size\"\n                         :state=\"state\"\n    ></b-form-input-static>\n    <textarea v-else-if=\"isTextArea\"\n              ref=\"input\"\n              :name=\"name\"\n              :value=\"value\"\n              :id=\"id || null\"\n              :disabled=\"disabled\"\n              :required=\"required\"\n              :autocomplete=\"autocomplete || null\"\n              :aria-required=\"required ? 'true' : null\"\n              :aria-invalid=\"ariaInvalid\"\n              :readonly=\"readonly\"\n              :class=\"inputClass\"\n              :rows=\"rows || rowsCount\"\n              :placeholder=\"placeholder\"\n              @input=\"onInput($event.target.value, $event.target)\"\n              @change=\"onChange($event.target.value, $event.target)\"\n              @keyup=\"onKeyUp($event)\"\n              @focus=\"$emit('focus')\"\n              @blur=\"$emit('blur')\"\n    ></textarea>\n    <input v-else\n           ref=\"input\"\n           :name=\"name\"\n           :value=\"value\"\n           :type=\"type\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :required=\"required\"\n           :autocomplete=\"autocomplete || null\"\n           :aria-required=\"required ? 'true' : null\"\n           :aria-invalid=\"ariaInvalid\"\n           :readonly=\"readonly\"\n           :class=\"inputClass\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value, $event.target)\"\n           @change=\"onChange($event.target.value, $event.target)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    >\n</template>\n\n<script>\n    import {formMixin} from '../mixins';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            isTextArea () {\n                return this.textarea || this.type === 'textarea';\n            },\n            rowsCount () {\n                return (this.value || '').toString().split('\\n').length;\n            },\n            inputClass () {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            },\n            ariaInvalid () {\n                if (this.invalid === false) {\n                    return null;\n                }\n                if (this.invalid === true) {\n                    return 'true';\n                }\n                return this.invalid;\n            }\n        },\n        watch:{\n            value(newVal, oldVal) {\n                if (newVal !== oldVal){\n                    this.$refs.input.value = newVal;\n                }\n            }\n        },\n        methods: {\n            format (value, el) {\n\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value, el);\n                    if (formattedValue !== value) {\n                        this.$refs.input.value = formattedValue;\n                        return formattedValue;\n                    }\n                }\n                this.$refs.input.value = value;\n                return value;\n            },\n\n            onInput (value, el) {\n                let formattedValue = value;\n                if (!this.lazyFormatter) {\n                    formattedValue = this.format(value, el);\n                }\n                this.$emit('input', formattedValue);\n            },\n            onChange (value, el) {\n                const formattedValue = this.format(value, el);\n                this.$emit('input', formattedValue);\n                this.$emit('change', formattedValue);\n            },\n            onKeyUp (e) {\n                this.$emit('keyup', e);\n            },\n            focus () {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                type: String,\n                default: ''\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            autocomplete: {\n                type: String,\n                default: null\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"custom?'custom-file':null\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               :aria-required=\"required ? 'true' : null\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import { formCustomMixin, formMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array';\n\n    export default {\n        mixins: [formMixin, formCustomMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            reset() {\n                try {\n                    // Wrapped in try in case IE < 11 craps out\n                    this.$refs.input.value = '';\n                } catch (e) {\n                }\n\n                // IE < 11 doesn't support setting input.value to '' or null\n                // So we use this little extra hack to reset the value, just in case\n                // This also appears to work on modern browsers as well.\n                this.$refs.input.type = '';\n                this.$refs.input.type = 'file';\n\n                this.selectedFile = this.multiple ? [] : null;\n            },\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(arrayFrom(filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(arrayFrom(filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"inputClass\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :multiple=\"multiple || null\"\n            :size=\"(multiple || selectSize > 1) ? selectSize : null\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :aria-required=\"required ? 'true' : null\"\n            :aria-invalid=\"ariaInvalid\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import { formMixin, formOptionsMixin, formCustomMixin } from '../mixins';\n    import { warn } from '../utils';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.multiple ? (this.value || []) : this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    (this.plain || this.multiple || this.selectSize > 1) ? null : 'custom-select'\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            selectSize: {\n                // Browsers default size to 0, which typically shows 4 rows in most browsers\n                // Size of 1 can bork out firefox\n                type: Number,\n                default: 0\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        },\n        created() {\n            if (this.returnObject) {\n                warn('form-select: return-object has been deprecated and will be removed in future releases');\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 :is=\"headerTag\" v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            headerTag: {\n                type: String,\n                default: 'h1'\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\"\n               :class=\"classObject\"\n               ref=\"item\"\n               v-bind=\"conditionalLinkProps\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign } from '../utils/object';\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\n// to ensure proper component tag computation\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: originalLinkProps.tag.type }\n});\n\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\n\nexport default {\n    components: { bLink },\n\n    computed: {\n        linkProps: computed.linkProps,\n\n        classObject() {\n            return [\n                'list-group-item',\n                this.listState,\n                this.active ? 'active' : null,\n                this.disabled ? 'disabled' : null,\n                this.isAction ? 'list-group-item-action' : null\n            ];\n        },\n\n        isAction() {\n            if (this.action === false) {\n                return false;\n            }\n\n            // this previously could return a string,\n            // coercing to a boolean for more consistent expected value\n            return !!(this.action || this.to || this.href || arrayIncludes(actionTags, this.tag));\n        },\n\n        listState() {\n            return this.variant ? `list-group-item-${this.variant}` : null;\n        },\n\n        myTag() {\n            if (this.tag) {\n                return this.tag;\n            }\n\n            return (this.to || this.href) ? 'b-link' : 'div';\n        },\n\n        conditionalLinkProps() {\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\n        }\n    },\n\n    // merge the link props with list-group-item props\n    props: assign(linkProps, {\n        action: {\n            type: Boolean,\n            default: null\n        },\n\n        variant: {\n            type: String,\n            default: null\n        },\n    })\n};\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill,\n                'nav-justified': this.justified\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                v-bind=\"linkProps\"\n                @click=\"$emit('click', $event)\">\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\nimport { props as linkProps, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"dropdownClasses\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n        </a>\n\n        <div :class=\"menuClasses\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @mouseover=\"onMouseOver\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n\n    export default {\n        mixins: [dropdownMixin],\n        computed: {\n            dropdownToggle() {\n                return this.noCaret ? '' : 'dropdown-toggle';\n            },\n            dropdownClasses() {\n                return [\n                    'nav-item',\n                    'b-nav-dropdown',\n                    'dropdown',\n                    this.dropup ? 'dropup' : '',\n                    this.visible ? 'show' : ''\n                ];\n            },\n            menuClasses() {\n                return [\n                    'dropdown-menu',\n                    this.right ? 'dropdown-menu-right': '',\n                    this.visible ? 'show' : ''\n                ];\n            }\n        },\n        props: {\n            noCaret: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n\n<style>\n.b-nav-dropdown .dropdown-item:focus:not(.active),\n.b-nav-dropdown .dropdown-item:hover:not(.active) {\n    /* @See https://github.com/twbs/bootstrap/issues/23329 */\n    box-shadow: inset 0px 0px 400px 110px rgba(0, 0, 0, .09);\n}\n\n.b-nav-dropdown .dropdown-item:active {\n    box-shadow: initial;\n}\n</style>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\nimport { listenOnRootMixin } from '../mixins';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        },\n        handleStateEvt(target, state) {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        }\n    },\n    created() {\n        this.listenOnRoot('collapse::toggle::state', this.handleStateEvt);\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n     <component :is=\"componentTag\" \n             class=\"navbar-brand\"\n             v-bind=\"conditionalLinkProps\"\n             @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href', 'to', and 'tag' props\n// that we will reconstruct without any defaults\n// so our component functions properly\nconst linkProps = assign(omitLinkProps('href', 'to', 'tag'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: String }\n});\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps,\n        isLink() {\n            return this.to || this.href;\n        },\n        componentTag(){\n            return this.isLink ? `b-link` : (this.tag || 'div');\n        },\n        conditionalLinkProps() {\n            return this.isLink ? this.linkProps : {};\n        }\n    }\n};\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","/**\n * @param {number} length\n * @return {Array}\n */\nexport default length => Array.apply(null, { length })\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 :is=\"titletag\" class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h3'\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n        <tr>\n            <th v-for=\"(field,key) in fields\"\n                @click.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                :key=\"key\"\n                :class=\"fieldClass(field,key)\"\n                :style=\"field.thStyle || {}\"\n                :aria-label=\"field.sortable ? ((localSortDesc && localSortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                :aria-sort=\"(field.sortable && localSortBy === key) ? (localSortDesc ? 'descending' : 'ascending') : null\"\n                :tabindex=\"field.sortable?'0':null\"\n            >\n                <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n            </th>\n        </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n        <tr>\n            <th v-for=\"(field,key) in fields\"\n                @click.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                :key=\"key\"\n                :class=\"fieldClass(field,key)\"\n                :style=\"field.thStyle || {}\"\n                :aria-label=\"field.sortable ? ((localSortDesc && localSortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                :aria-sort=\"(field.sortable && localSortBy === key) ? (localSortDesc ? 'descending' : 'ascending') : null\"\n                :tabindex=\"field.sortable?'0':null\"\n            >\n                <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\"\n                      :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n                <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n            </th>\n        </tr>\n        </tfoot>\n        <tbody>\n        <tr v-for=\"(item,index) in _items\"\n            :key=\"index\"\n            :class=\"rowClass(item)\"\n            @click=\"rowClicked($event,item,index)\"\n            @dblclick=\"rowDblClicked($event,item,index)\"\n            @hover=\"rowHovered($event,item,index)\"\n        >\n            <template v-for=\"(field,key) in fields\">\n                <td v-if=\"!hasFormatter(field)\" :class=\"tdClass(field, item, key)\" :key=\"key\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n                <td v-else :key=\"key\" :class=\"tdClass(field, item, key)\"\n                    v-html=\"callFormatter(item, key, field)\">\n                </td>\n            </template>\n        </tr>\n        <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\">\n            <td :colspan=\"keys(fields).length\">\n                <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                    <slot name=\"emptyfiltered\">\n                        <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                    </slot>\n                </div>\n                <div v-else role=\"alert\" aria-live=\"polite\">\n                    <slot name=\"empty\">\n                        <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                    </slot>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import { warn } from '../utils';\n    import { keys } from '../utils/object.js';\n    import { listenOnRootMixin } from '../mixins';\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = obj => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        return toString(keys(obj).reduce((o, k) => {\n            // Ignore fields 'state' and ones that start with _\n            if (!(/^_/.test(k) || k === 'state')) {\n                o[k] = obj[k];\n            }\n            return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            return ((a[sortBy] < b[sortBy]) && -1) || ((a[sortBy] > b[sortBy]) && 1) || 0;\n        }\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n            numeric: true\n        });\n    };\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                localSortBy: this.sortBy || '',\n                localSortDesc: this.sortDesc || false,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default() {\n                    if (this && this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        warn('b-table: prop \\'items-provider\\' has been deprecated. Pass a function to \\'items\\' instead');\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            sortBy: {\n                type: String,\n                default: null\n            },\n            sortDesc: {\n                type: Boolean,\n                default: false\n            },\n            apiUrl: {\n                type: String,\n                default: ''\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (newVal === this.localSortDesc) {\n                    return;\n                }\n                this.localSortDesc = newVal || false;\n            },\n            localSortDesc(newVal, oldVal) {\n                // Emit update to sort-desc.sync\n                if (newVal !== oldVal) {\n                    this.$emit('update:sortDesc', newVal);\n                    if (!this.noProviderSorting) {\n                        this._providerUpdate();\n                    }\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (newVal === this.localSortBy) {\n                    return;\n                }\n                this.localSortBy = newVal || null;\n            },\n            localSortBy(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.$emit('update:sortBy', newVal);\n                    if (!this.noProviderSorting) {\n                        this._providerUpdate();\n                    }\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            this.localSortBy = this.sortBy;\n            this.localSortDesc = this.sortDesc;\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.listenOnRoot('table::refresh', id => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    apiUrl: this.apiUrl,\n                    sortBy: this.localSortBy,\n                    sortDesc: this.localSortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.localSortBy;\n                const sortDesc = this.localSortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                // Shallow copy of items, so we don't mutate the original array order/size\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    // Number of items before filtering\n                    const numOriginalItems = items.length;\n\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n\n                    if (numOriginalItems !== items.length) {\n                        // Emit a filtered notification event, as number of items has changed\n                        this.$emit('filtered', items);\n                    }\n                }\n\n                // Apply local Sort\n                if (sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, sortBy);\n                        return sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    // Grab the current page of data (which may be past filtered items)\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n\n                return items;\n            }\n        },\n        methods: {\n            keys,\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.localSortBy === key) ? 'sorting_' + (this.localSortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : '',\n                    field.thClass ? field.thClass : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : '',\n                    field.tdClass ? field.tdClass : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowDblClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-dblclicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (field.sortable) {\n                    if (key === this.localSortBy) {\n                        // Change sorting direction on current column\n                        this.localSortDesc = !this.localSortDesc;\n                    } else {\n                        // Start sorting this column ascending\n                        this.localSortBy = key;\n                        this.localSortDesc = false;\n                    }\n                    sortChanged = true;\n                } else if (this.localSortBy) {\n                    this.localSortBy = null;\n                    this.localSortDesc = false;\n                    sortChanged = true;\n                }\n\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.emitOnRoot('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then(items => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            },\n            hasFormatter(field) {\n                return field.formatter && ((typeof (field.formatter) === 'function') || (typeof (field.formatter) === 'string'));\n            },\n            callFormatter(item, key, field) {\n                if (field.formatter && (typeof (field.formatter) === 'function'))\n                    return field.formatter(item[key]);\n\n                if (field.formatter && (typeof (this.$parent[field.formatter]) === 'function'))\n                    return this.$parent[field.formatter](item[key]);\n            }\n\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table tfoot > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > tfoot > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:after,\n    table.b-table > thead > tr > .sorting_desc:before,\n    table.b-table > tfoot > tr > .sorting_asc:after,\n    table.b-table > tfoot > tr > .sorting_desc:before {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import {observeDom} from '../utils';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: null\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Activate current tab, and deactivte any old tabs\n                this.tabs.forEach( t => {\n                    if (t === tab) {\n                        // Set new tab as active\n                        this.$set(t, 'localActive', true);\n                    } else {\n                        // Ensure non current tabs are not active\n                        this.$set(t, 'localActive', false);\n                    }\n                });\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Make null for easier testing further on\n                    tabIndex = null;\n                }\n\n                if (tabIndex === null) {\n                    // Find last active non-dsabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active && !tab.disabled) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                if (tabIndex === null) {\n                    // Find first non-disabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (!tab.disabled && tabIndex === null) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex >= this.tabs.length) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: this.active,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"d-inline-block\">\n        <span class=\"d-inline-block\" ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\nconst listen_types = {click: true};\n\n// Property key for handler\nconst BVT = '__BV_toggle__';\n\n// Event nmmes\nconst EVENT_TOGGLE = 'collapse::toggle';\nconst EVENT_STATE = 'collapse::toggle::state';\n\nexport default {\n\n    bind(el, binding, vnode) {\n\n        const targets = target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit(EVENT_TOGGLE, target);\n            });\n        });\n\n        if (inBrowser && vnode.context && targets.length > 0) {\n            // Add aria attributes to element\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n\n            // Toggle state hadnler, stored on element\n            el[BVT] = function toggleDirectiveHandler(id, state) {\n                if (targets.indexOf(id) !== -1) {\n                    // Set aria-expanded state\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                    // Set 'collapsed' class state\n                    if (state) {\n                        el.classList.remove('collapsed');\n                    } else {\n                        el.classList.add('collapsed');\n                    }\n                }\n            };\n\n            // Listen for toggle state changes\n            vnode.context.$root.$on(EVENT_STATE, el[BVT]);\n        }\n    },\n    unbind(el, binding, vnode) {\n        if (el[BVT]) {\n            // Remove our $root listener\n            vnode.context.$root.$off(EVENT_STATE, el[BVT]);\n            el[BVT] = null;\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n// eslint-disable-next-line no-shadow-restricted-names\n    bind(undefined, binding, vnode) {\n        target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit('show::modal', target, vnode.elm);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","mutations","addedNodes","length","removedNodes","observe","assign","childList","subtree","warn","message","console","isVisible","offsetWidth","offsetHeight","filterVisible","els","filter","omitLinkProps","keys","props","reduce","memo","prop","arrayIncludes","propsToOmit","getTransisionEndEvent","name","TransitionEndEvents","undefined","style","findFirstVisible","root","selector","querySelectorAll","let","arrayFrom","find","i","makePageArray","startNum","numPages","range","map","value","index","number","className","targets","vnode","binding","listen_types","fn","modifiers","t","all_listen_types","push","listener","forEach","type","elm","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","__vue__","toType","toString","call","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","Array","from","toStr","isCallable","toInteger","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","len","A","k","isArray","arg","array","indexOf","target","varArgs","to","nextSource","nextKey","render","data","countDownTimerId","dismissed","localDismissible","dismissible","created","state","computed","classObject","alertVariant","variant","localShow","show","String","default","Boolean","dismissLabel","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","documentElement","_clickOutListener","destroyed","removeEventListener","e","$el","contains","clickOutListener","BVRL","listenOnRoot","event","$root","$on","emitOnRoot","ref","args","shift","$off","mixins","listenOnRootMixin","id","text","dropup","disabled","right","visible","clickOut","old","body","children","noop","$nextTick","focusFirstItem","toggler","split","$refs","toggle","button","click","onTab","onEsc","preventDefault","stopPropagation","focusToggler","onMouseOver","evt","item","classList","focus","focusNext","up","getItems","focusItem","idx","getAttribute","menu","getFirstItem","required","checkboxClass","custom-control","custom","form-check-inline","inline","plain","formOptions","options","option","valueField","textField","selectedValue","returnObject","multiple","localValue","old_value","active","activeClass","append","exact","exactActiveClass","href","rel","replace","routerTag","tag","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","left","TETHER_CLASSES","enabled","constraints","debounce","validator","delay","hide","offset","placement","popoverStyle","targetOffset","triggers","triggerKeys","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","val","getDelay","clearTimeout","$data","_timeout","setTimeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","action","getTetherOptions","attachment","_popover","classes","classPrefix","hidePopover","display","refreshPosition","position","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","updated","beforeDestroy","parentElement","removeChild","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","normalizedItem","_originalItem","isLast","link","_linkProps","itemProp","ariaCurrent","onClick","originalLinkProps","btnVariant","btnSize","btnBlock","btnDisabled","btnPressed","componentType","block","size","btnType","isToggle","pressed","ariaPressed","dataToggle","tabIndex","conditionalLinkProps","handleFocus","add","remove","ITEM_SELECTOR","justify","vertical","keyNav","setItemFocus","prev","focusFirst","focusLast","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","titleTag","subTitle","subTitleTag","noBlock","img","imgAlt","deck","columns","DIRECTION","next","dirClass","overlayClass","WebkitTransition","MozTransition","OTransition","transition","isSliding","intervalId","transitionEndEvent","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","isCycling","setSlide","slide","visibilityState","hidden","$once","pause","start","restart","relatedTarget","updateSlides","inner","numSlides","n","setAttribute","newVal","oldVal","direction","currentSlide","nextSlide","called","onceTransEnd","_animationTimeout","observeDom","bind","contentVisibleUp","contentTag","caption","captionTag","textTag","contentClasses","transitioning","model","isNav","accordion","emitState","navbar-collapse","collapse","onEnter","reflow","scrollHeight","onAfterEnter","onLeave","getBoundingClientRect","onAfterLeave","clickHandler","getComputedStyle","handleToggleEvt","handleAccordionEvt","openedId","handleResize","dropdownMixin","bButton","toggleText","dropdownClasses","menuClasses","selected","dropdownToggle","caret","displayItem","forceDefault","defaultText","result","list","select","INPUT_SELECTOR","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","computedLabelCols","labelSize","labelCols","labelLayout","labelSrOnly","horizontal","labelAlignClass","labelTextAlign","inputLayout","updateTarget","labelFor","content","input","inputSelector","for","formMixin","formCustomMixin","formCheckBoxMixin","uncheckedValue","checked","indeterminate","buttonVariant","labelClasses","btnLabelClasses","isChecked","setIndeterminate","handleChange","x","check","formOptionsMixin","invalid","stacked","buttons","radioGroupClasses","btnGroupClasses","staticValue","inputClass","bFormInputStatic","isTextArea","textarea","rowsCount","ariaInvalid","format","formatter","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","autocomplete","static","placeholder","rows","Function","selectedFile","dragging","selectedLabel","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","setFiles","files","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","selectSize","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","myTag","verticalAlignClass","rightAlign","verticalAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","noEnforceFocus","hideHeader","hideFooter","hideHeaderClose","okOnly","okDisabled","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","showHandler","triggerEl","hideHandler","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","nav-justified","justified","noCaret","toggleState","onclick","handleStateEvt","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","isLink","bForm","apply","showFirstDots","showLastDots","currentPage","numberOfPages","ceil","totalRows","perPage","alignment","pageList","numLinks","limit","hideEllipsis","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","btn","setBtnFocus","reverse","parseInt","focusPrev","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","ariaControls","routerProps","propsToPick","pickLinkProps","baseUrl","useRouter","linkGen","pageGen","pageNum","makeLink","pagenum","makePage","popoverMixin","progressVariant","striped","animated","styleObject","width","progress","p","precision","round","showProgress","showValue","v","recToString","o","defaultSortCompare","a","b","sortBy","localeCompare","numeric","localSortBy","localSortDesc","sortDesc","localItems","itemsProvider","apiUrl","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","slice","numOriginalItems","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","_rowVariant","rowClicked","rowDblClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","hasFormatter","callFormatter","$parent","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","tabsContainer","enter","beforeLeave","localActive","controlledBy","buttonId","headHtml","inBrowser","BVT","unbind","isServer","Element","s","matches","ownerDocument","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","vm","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","offsetTop","process","scrollTop","maxScroll","_getOffsetHeight","_activate","_clear","scheduleRefresh","handleEvent","dispose","self","pageYOffset","innerHeight","queries","links","dropdown","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}