{"version":3,"file":"bootstrap-vue.common.js","sources":["../lib/utils/observe-dom.js","../lib/utils/warn.js","../lib/mixins/dropdown.js","../lib/mixins/link.js","../lib/components/button-toolbar.vue","../lib/components/carousel.vue","../lib/components/modal.vue","../lib/components/pagination.vue","../lib/components/pagination-nav.vue","../lib/directives/_target.js","../lib/directives/scrollspy.js","../lib/utils/array.js","../lib/utils/object.js","../lib/components/alert.vue","../lib/mixins/clickout.js","../lib/mixins/listen-on-root.js","../lib/mixins/form.js","../lib/mixins/form-checkbox.js","../lib/mixins/form-custom.js","../lib/mixins/form-options.js","../lib/mixins/popover.js","../lib/components/link.vue","../lib/components/breadcrumb.vue","../lib/components/button.vue","../lib/components/button-group.vue","../lib/components/input-group.vue","../lib/components/input-group-addon.vue","../lib/components/input-group-button.vue","../lib/components/card.vue","../lib/components/card-group.vue","../lib/components/carousel-slide.vue","../lib/components/collapse.vue","../lib/components/dropdown.vue","../lib/components/dropdown-item.vue","../lib/components/dropdown-item-button.vue","../lib/components/dropdown-divider.vue","../lib/components/dropdown-header.vue","../lib/components/dropdown-select.vue","../lib/components/form.vue","../lib/components/form-fieldset.vue","../lib/components/form-checkbox.vue","../lib/components/form-radio.vue","../lib/components/form-input-static.vue","../lib/components/form-input.vue","../lib/components/form-file.vue","../lib/components/form-select.vue","../lib/components/jumbotron.vue","../lib/components/badge.vue","../lib/components/list-group.vue","../lib/components/list-group-item.vue","../lib/components/media.vue","../lib/components/nav.vue","../lib/components/nav-item.vue","../lib/components/nav-item-dropdown.vue","../lib/components/nav-toggle.vue","../lib/components/navbar.vue","../lib/components/navbar-brand.vue","../lib/components/nav-text.vue","../lib/components/nav-form.vue","../lib/utils/range.js","../lib/components/popover.vue","../lib/components/progress.vue","../lib/components/table.vue","../lib/components/tabs.vue","../lib/components/tab.vue","../lib/components/tooltip.vue","../lib/directives/toggle.js","../lib/directives/modal.js","../lib/index.js"],"sourcesContent":["\nimport { assign } from '../utils/object';\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nexport default function observeDOM(el, callback, opts) {\n    const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    const eventListenerSupported = window.addEventListener;\n\n    if (MutationObserver) {\n        // Define a new observer\n        const obs = new MutationObserver(mutations => {\n            if (mutations[0].addedNodes.length > 0 || mutations[0].removedNodes.length > 0) {\n                callback();\n            }\n        });\n\n        // Have the observer observe foo for changes in children\n        obs.observe(el, assign({childList: true, subtree: true}, opts));\n    } else if (eventListenerSupported) {\n        el.addEventListener('DOMNodeInserted', callback, false);\n        el.addEventListener('DOMNodeRemoved', callback, false);\n    }\n}\n","/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\nfunction warn(message) {\n    console.warn(`[Bootstrap-Vue warn]: ${message}`)\n}\n\nexport default warn\n","import clickOut from './clickout';\nimport listenOnRootMixin from './listen-on-root'\nimport { from as arrayFrom } from '../utils/array'\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n    return els ? els.filter(el => isVisible(el)) : [];\n}\n\n// Dropdown item CSS selectors\nconst ITEM_SELECTOR = '.dropdown-item:not(.disabled):not([disabled])';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        id: {\n            type: String\n        },\n        text: {\n            type: String,\n            default: ''\n        },\n        dropup: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        right: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            visible: false\n        };\n    },\n    created() {\n        const listener = el => {\n            if (el !== this) {\n                this.visible = false;\n            }\n        };\n\n        // To keep one dropdown opened on page\n        this.listenOnRoot('shown::dropdown', listener);\n\n        // Hide when clicked on links\n        this.listenOnRoot('clicked::link', listener);\n    },\n    mounted: clickOut.mounted,\n    destroyed: clickOut.destroyed,\n    watch: {\n        visible(state, old) {\n            if (state === old) {\n                return; // Avoid duplicated emits\n            }\n            if (state) {\n                this.emitOnRoot('shown::dropdown', this);\n                this.$emit('shown');\n                /*\n                 If this is a touch-enabled device we add extra\n                 empty mouseover listeners to the body's immediate children;\n                 only needed because of broken event delegation on iOS\n                 https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n                 */\n                if ('ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.addEventListener('mouseover', this.noop);\n                    });\n                }\n\n                // Focus on the first item on show\n                this.$nextTick(() => { this.focusFirstItem() });\n\n            } else {\n                this.emitOnRoot('hidden::dropdown', this);\n                this.$emit('hidden');\n                /*\n                 If this is a touch-enabled device we remove the extra\n                 empty mouseover listeners we added for iOS support\n                 */\n                if ('ontouchstart' in document.documentElement) {\n                    const children = arrayFrom(document.body.children);\n                    children.forEach(el => {\n                        el.removeEventListener('mouseover', this.noop);\n                    });\n                }\n            }\n        }\n    },\n    computed: {\n        toggler() {\n            if (this.split && this.$refs.toggle) {\n                return this.$refs.toggle.$el || this.$refs.toggle;\n            } \n            return this.$refs.button.$el || this.$refs.button;\n        }\n    },\n    methods: {\n        ...clickOut.methods,\n        noop() {\n            // Do nothing event handler (used in visible watch)\n        },\n        clickOutListener() {\n            this.visible = false;\n        },\n        click(e) {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            if (this.split) {\n                this.$emit('click', e);\n                this.emitOnRoot('shown::dropdown', this);\n            } else {\n                this.toggle();\n            }\n        },\n        toggle() {\n            if (this.disabled) {\n                this.visible = false;\n                return;\n            }\n            this.visible = !this.visible;\n        },\n        onTab() {\n            if (this.visible) {\n                this.visible = false;\n            }\n        },\n        onEsc(e) {\n            if (this.visible) {\n                this.visible = false;\n                e.preventDefault();\n                e.stopPropagation();\n                // Return focus to original trigger button\n                this.$nextTick(() => { this.focusToggler() });\n            }\n        },\n        onMouseOver(evt) {\n            // Focus the item on hover\n            const item = evt.target;\n            if (item.classList.contains('dropdown-item')\n                    && !item.disabled\n                    && !item.classList.contains('disabled')\n                    && item.focus) {\n                item.focus();\n            }\n        },\n        focusNext(e, up) {\n            if (!this.visible) {\n                return;\n            }\n            e.preventDefault();\n            e.stopPropagation();\n            this.$nextTick(() => {\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (up && index > 0) {\n                    index--;\n                } else if (!up && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.focusItem(index, items);\n            });\n        },\n        focusItem(idx, items) {\n            let el = items.find((el, i) => i === idx)\n            if (el && el.getAttribute('tabindex') !== \"-1\") {\n                el.focus()\n            }\n        },\n        getItems() {\n            // Get all items\n            return filterVisible(arrayFrom(this.$refs.menu.querySelectorAll(ITEM_SELECTOR)));\n        },\n        getFirstItem() {\n            // Get the first non-disabled item\n            let item = this.getItems()[0];\n            return item || null;\n        },\n        focusFirstItem() {\n            const item = this.getFirstItem();\n            if (item) {\n                this.focusItem(0, [item]);\n            }\n        },\n        focusToggler() {\n            let toggler = this.toggler\n            if (toggler && toggler.focus) {\n                toggler.focus();\n            }\n        }\n    }\n};\n","import { warn } from '../utils';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n// Props compatible with vue-router\n// https://github.com/vuejs/vue-router/blob/dev/src/components/link.js\nexport const props = {\n    active: {\n        type: Boolean,\n        default: false\n    },\n\n    activeClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    append: {\n        type: Boolean,\n        default: false\n    },\n\n    disabled: {\n        type: Boolean,\n        default: false\n    },\n\n    event: {\n        type: [String, Array],\n        default: \"click\"\n    },\n\n    exact: {\n        type: Boolean,\n        default: false\n    },\n\n    exactActiveClass: {\n        type: String,\n        default: \"active\"\n    },\n\n    href: {\n        type: String,\n        default: \"#\"\n    },\n\n    rel: {\n        type: String,\n        default: null\n    },\n\n    replace: {\n        type: Boolean,\n        default: false\n    },\n\n    routerTag: {\n        type: String,\n        default: \"a\"\n    },\n\n    tag: {\n        type: String,\n        default: null\n    },\n\n    target: {\n        type: String,\n        default: \"_self\"\n    },\n\n    to: {\n        type: [String, Object],\n        default: null\n    }\n};\n\nexport const computed = {\n    linkProps() {\n        return keys(props).reduce((memo, prop) => {\n            memo[prop] = this[prop];\n\n            return memo;\n        }, {});\n    },\n\n    isRouterLink() {\n        return Boolean(this.$router && this.to && !this.disabled);\n    },\n\n    _href() {\n        if (this.disabled) {\n            return \"#\";\n        }\n\n        // If href explicitly provided\n        if (this.href) {\n            return this.href;\n        }\n\n        // Fallback to `to` prop\n        if (this.to && typeof this.to === \"string\") {\n            return this.to;\n        }\n    },\n\n    computedRel() {\n        if (this.target === \"_blank\" && this.rel === null) {\n            return \"noopener\";\n        }\n        return this.rel || null;\n    },\n\n    componentTag(){\n        if (this.tag) {\n            warn('<b-link> \"tag\" property is deprecated, please use \"routerTag\" property instead.');\n\n            return this.tag;\n        }\n\n        return this.routerTag;\n    },\n\n    linkClassObject() {\n        return [\n            this.active ? (this.exact ? this.exactActiveClass : this.activeClass) : null,\n            this.disabled ? \"disabled\" : null\n        ];\n    }\n};\n\nexport const methods = {\n    linkClick(e) {\n        if (!this.disabled) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        } else {\n            e.stopPropagation();\n        }\n\n        if (!this.isRouterLink && this._href === \"#\") {\n            // stop scroll-to-top behavior\n            e.preventDefault();\n        }\n    }\n};\n\nexport default {\n    props,\n    computed,\n    methods\n};\n\nexport function pickLinkProps(...propsToPick) {\n    return keys(props).reduce((memo, prop) => {\n        if (arrayIncludes(propsToPick, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n\nexport function omitLinkProps(...propsToOmit) {\n    return keys(props).reduce((memo, prop) => {\n        if (!arrayIncludes(propsToOmit, prop)) {\n            memo[prop] = props[prop];\n        }\n\n        return memo;\n    }, {});\n}\n","<template>\n    <div :class=\"classObject\"\n         role=\"toolbar\"\n         :tabindex=\"keyNav ? '0' : null\"\n         @focusin.self=\"focusFirst\"\n         @keydown.left=\"focusNext($event,true)\"\n         @keydown.up=\"focusNext($event,true)\"\n         @keydown.right=\"focusNext($event,false)\"\n         @keydown.down=\"focusNext($event,false)\"\n         @keydown.shift.left=\"focusFirst($event)\"\n         @keydown.shift.up=\"focusFirst($event)\"\n         @keydown.shift.right=\"focusLast($event)\"\n         @keydown.shift.down=\"focusLast($event)\"\n    >\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array'\n    const ITEM_SELECTOR = [\n        '.btn:not(.disabled):not([disabled])',\n        '.form-control:not(.disabled):not([disabled])',\n        'select:not(.disabled):not([disabled])',\n        'input[type=\"checkbox\"]:not(.disabled)',\n        'input[type=\"radio\"]:not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-toolbar',\n                    (this.justify && !this.vertical) ? 'justify-content-between' : ''\n                ];\n            }\n        },\n        props: {\n            justify: {\n                type: Boolean,\n                default: false\n            },\n            keyNav: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            setItemFocus(item) {\n                this.$nextTick(() => {\n                    item.focus();\n                });\n            },\n            focusNext(e, prev) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length < 1) {\n                    return;\n                }\n                let index = items.indexOf(e.target);\n                if (prev && index > 0) {\n                    index--;\n                } else if (!prev && index < items.length - 1) {\n                    index++;\n                }\n                if (index < 0) {\n                    index = 0;\n                }\n                this.setItemFocus(items[index]);\n            },\n            focusFirst(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus(items[0]);\n                }\n            },\n            focusLast(e) {\n                if (!this.keyNav) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopPropagation();\n                const items = this.getItems();\n                if (items.length > 0) {\n                    this.setItemFocus([items.length - 1]);\n                }\n            },\n            getItems() {\n                let items = arrayFrom(this.$el.querySelectorAll(ITEM_SELECTOR));\n                items.forEach(item => {\n                    // Ensure tabfocus is -1 on any new elements\n                    item.tabIndex = -1;\n                });\n                return items.filter(el => isVisible(el));\n            }\n        },\n        mounted() {\n            if (this.keyNav) {\n                // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n                this.getItems();\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel slide\"\n         role=\"region\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n         :aria-busy=\"isSliding ? 'true' : 'false'\"\n         @mouseenter=\"pause\"\n         @mouseleave=\"start\"\n         @focusin=\"pause\"\n         @focusout=\"restart\"\n         @keydown.left.stop.prevent=\"prev\"\n         @keydown.right.stop.prevent=\"next\"\n    >\n\n        <!-- Wrapper for slides -->\n        <div class=\"carousel-inner\"\n             role=\"list\"\n             ref=\"inner\"\n             :id=\"id ? (id + '__BV_inner_') : null\"\n        >\n            <slot></slot>\n        </div>\n\n        <!-- Controls -->\n        <template v-if=\"controls\">\n            <a class=\"carousel-control-prev\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"prev\"\n               @keydown.enter.stop.prevent=\"prev\"\n               @keydown.space.stop.prevent=\"prev\"\n            >\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelPrev}}</span>\n            </a>\n            <a class=\"carousel-control-next\"\n               href=\"#\"\n               role=\"button\"\n               :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n               @click.stop.prevent=\"next\"\n               @keydown.enter.stop.prevent=\"next\"\n               @keydown.space.stop.prevent=\"next\"\n            >\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">{{labelNext}}</span>\n            </a>\n        </template>\n\n        <!-- Indicators -->\n        <ol class=\"carousel-indicators\"\n            role=\"group\"\n            v-show=\"indicators\"\n            :id=\"id ? (id + '__BV_indicators_') : null\"\n            :aria-hidden=\"indicators ? 'false' : 'true'\"\n            :aria-label=\"(indicators && labelIndicators) ? labelIndicators : null\"\n            :aria-owns=\"(indicators && id) ? (id + '__BV_inner_') : null\"\n        >\n            <li v-for=\"n in slides.length\"\n                :key=\"'slide_' + n\"\n                role=\"button\"\n                :id=\"id ? (id + '__BV_indicator_' + n + '_') : null\"\n                :tabindex=\"indicators ? '0' : '-1'\"\n                :class=\"{active:n-1 === index}\"\n                :aria-current=\"n-1 === index ? 'true' : 'false'\"\n                :aria-label=\"labelGotoSlide + ' ' + n\"\n                :aria-describedby=\"slides[n-1].id || null\"\n                :aria-controls=\"id ? (id + '__BV_inner_') : null\"\n                @click=\"setSlide(n-1)\"\n                @keydown.enter.stop.prevent=\"setSlide(n-1)\"\n                @keydown.space.stop.prevent=\"setSlide(n-1)\"\n            ></li>\n        </ol>\n\n    </div>\n</template>\n\n<script>\n    import { from as arrayFrom } from '../utils/array';\n    import { observeDom } from '../utils';\n\n    // Slide directional classes\n    const DIRECTION = {\n        next: {\n            dirClass: 'carousel-item-left',\n            overlayClass: 'carousel-item-next'\n        },\n        prev: {\n            dirClass: 'carousel-item-right',\n            overlayClass: 'carousel-item-prev'\n        }\n    };\n    \n    // Fallback Transition duration (with a little buffer) in ms\n    const TRANS_DURATION = 600 + 50;\n\n    // Transition Event names\n    const TransitionEndEvents = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'otransitionend',\n        transition: 'transitionend'\n    };\n\n    // Return the brtowser specific transitionend event name\n    function getTransisionEndEvent(el) {\n        for (const name in TransitionEndEvents) {\n            if (el.style[name] !== undefined) {\n                return TransitionEndEvents[name];\n            }\n        }\n        // fallback\n        return null;\n    }\n\n    export default {\n        data() {\n            return {\n                index: this.value || 0,\n                isSliding: false,\n                intervalId: null,\n                transitionEndEvent: null,\n                slides: []\n            };\n        },\n        props: {\n            id: {\n                type: String\n            },\n            labelPrev: {\n                type: String,\n                default: 'Previous Slide'\n            },\n            labelNext: {\n                type: String,\n                default: 'Next Slide'\n            },\n            labelGotoSlide: {\n                type: String,\n                default: 'Goto Slide'\n            },\n            labelIndicators: {\n                type: String,\n                default: 'Select a slide to display'\n            },\n            interval: {\n                type: Number,\n                default: 5000\n            },\n            indicators: {\n                type: Boolean,\n                default: false\n            },\n            controls: {\n                type: Boolean,\n                default: false\n            },\n            height: {\n                type: String\n            },\n            background: {\n                type: String\n            },\n            value: {\n                type: Number,\n                default: 0\n            }\n        },\n        computed: {\n            isCycling() {\n                return Boolean(this.intervalId);\n            }\n        },\n        methods: {\n            // Set slide\n            setSlide(slide) {\n                // Don't animate when page is not visible\n                if (typeof document !== 'undefined' && document.visibilityState && document.hidden) {\n                    return;\n                }\n\n                const len = this.slides.length;\n                \n                // Don't do anything if nothing to slide to\n                if (len === 0) {\n                    return;\n                }\n                \n                // Don't change slide while transitioning, wait until transition is done\n                if (this.isSliding) {\n                    // Schedule slide after sliding complete\n                    this.$once('slid', () => this.setSlide(slide));\n                    return;\n                }\n\n                // Make sure we have an integer (you never know!)\n                slide = Math.floor(slide);\n\n                // Set new slide index. Wrap around if necessary\n                this.index = slide >= len ? 0 : (slide >= 0 ? slide : len - 1);\n            },\n\n            // Previous slide\n            prev() {\n                this.setSlide(this.index - 1);\n            },\n\n            // Next slide\n            next() {\n                this.setSlide(this.index + 1);\n            },\n            \n            // Pause auto rotation\n            pause() {\n                if (this.isCycling) {\n                    clearInterval(this.intervalId);\n                    this.intervalId = null;\n\n                    // Make current slide focusable for screen readers\n                    this.slides[this.index].tabIndex = 0;\n                }\n            },\n\n            // Start auto rotate slides\n            start() {\n                // Don't start if no intetrval, or if we are already running\n                if (!Boolean(this.interval) || this.isCycling) {\n                    return;\n                }\n                this.slides.forEach(slide => {\n                    slide.tabIndex = -1;\n                });\n                this.intervalId = setInterval(() => {\n                    this.next();\n                }, Math.max(1000, this.interval));\n            },\n\n            // Re-Start auto rotate slides when focus/hover leaves the carousel\n            restart(evt) {\n                if (!evt.relatedTarget || !this.$el.contains(evt.relatedTarget)) {\n                    this.start();\n                }\n            },\n\n            // Update slide list\n            updateSlides() {\n                this.pause();\n\n                // Get all slides\n                this.slides = arrayFrom(this.$refs.inner.querySelectorAll('.carousel-item'));\n\n                const id = this.id;\n                const numSlides = this.slides.length;\n\n                // Keep slide number in range\n                const index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));\n\n                this.slides.forEach((slide, idx) => {\n                    const n = idx + 1;\n\n                    slide.classList[idx === index ? 'add' : 'remove']('active');\n                    slide.setAttribute('aria-current', idx === index ? 'true' : 'false');\n                    slide.setAttribute('aria-posinset', String(n));\n                    slide.setAttribute('aria-setsize', String(numSlides));\n                    slide.tabIndex = -1;\n                    if (id) {\n                        slide.setAttribute('aria-controlledby', id + '__BV_indicator_' + n + '_');\n                    }\n                });\n\n                // Set slide as active\n                this.setSlide(index);\n\n                this.start();\n            }\n\n        },\n        watch: {\n            value(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.setSlide(newVal);\n                }\n            },\n            interval(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n                if (!Boolean(newVal)) {\n                    // Pausing slide show\n                    this.pause();\n                } else {\n                    // Restarting or Changing interval\n                    this.pause();\n                    this.start();\n                }\n            },\n            index(val, oldVal) {\n                if (val === oldVal || this.isSliding) {\n                    return;\n                }\n\n                // Determine sliding direction\n                let direction = (val > oldVal) ? DIRECTION.next : DIRECTION.prev;\n\n                // Rotates\n                if (oldVal === 0 && val === this.slides.length - 1) {\n                    direction = DIRECTION.prev;\n                } else if (oldVal === this.slides.length - 1 && val === 0) {\n                    direction = DIRECTION.next;\n                }\n\n                // Determine current and next slides\n                const currentSlide = this.slides[oldVal];\n                const nextSlide = this.slides[val];\n\n                // Don't do anything if there aren't any slides to slide to\n                if (!currentSlide || !nextSlide) {\n                    return;\n                }\n\n                // Start animating\n                this.isSliding = true;\n                this.$emit('slide', val);\n\n                // Update v-model\n                this.$emit('input', this.index);\n\n                nextSlide.classList.add(direction.overlayClass);\n                // Trigger a reflow of next slide\n                // eslint-ignore-next-line no-void\n                void(nextSlide.offsetHeight);\n\n                currentSlide.classList.add(direction.dirClass);\n                nextSlide.classList.add(direction.dirClass);\n\n                // Transition End handler\n                let called = false;\n                const onceTransEnd = (evt) => {\n                    if (called) {\n                        return;\n                    }\n                    called = true;\n                    if (this.transitionEndEvent) {\n                        currentSlide.removeEventListener(this.transitionEndEvent, onceTransEnd);\n                    }\n                    this._animationTimeout = null;\n\n                    nextSlide.classList.remove(direction.dirClass);\n                    nextSlide.classList.remove(direction.overlayClass);\n                    nextSlide.classList.add('active');\n\n                    currentSlide.classList.remove('active');\n                    currentSlide.classList.remove(direction.dirClass);\n                    currentSlide.classList.remove(direction.overlayClass);\n\n                    currentSlide.setAttribute('aria-current', 'false');\n                    nextSlide.setAttribute('aria-current', 'true');\n                    currentSlide.setAttribute('aria-hidden', 'true');\n                    nextSlide.setAttribute('aria-hidden', 'false');\n\n                    currentSlide.tabIndex = -1;\n                    nextSlide.tabIndex = -1;\n\n                    if (!this.isCycling) {\n                        // Focus the next slide for screen readers if not in play mode\n                        nextSlide.tabIndex = 0;\n                        this.$nextTick(() => {\n                            nextSlide.focus();\n                        });\n                    }\n\n                    this.isSliding = false;\n                    // Notify ourselves that we're done sliding (slid)\n                    this.$nextTick(() => this.$emit('slid', val));\n                };\n\n                // Clear transition classes after transition ends\n                if (this.transitionEndEvent) {\n                    currentSlide.addEventListener(this.transitionEndEvent, onceTransEnd);\n                }\n                // Fallback to setTimeout\n                this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);\n            }\n        },\n        created() {\n            // Create private non-reactive props\n            this._animationTimeout = null;\n        },\n        mounted() {\n            // Cache current browser transitionend event name\n            this.transitionEndEvent = getTransisionEndEvent(this.$el) || null;\n\n            // Get all slides\n            this.updateSlides();\n\n            // Observe child changes so we can update slide list\n            observeDom(this.$refs.inner, this.updateSlides.bind(this), {subtree: false});\n        },\n        destroyed() {\n            clearInterval(this.intervalId);\n            clearTimeout(this._animationTimeout);\n            this._animationTimeout = null;\n        }\n    };\n\n</script>\n","<template>\n    <div>\n        <transition-group enter-class=\"hidden\"\n                          enter-to-class=\"\"\n                          enter-active-class=\"\"\n                          @after-enter=\"focusFirst\"\n                          leave-class=\"show\"\n                          leave-active-class=\"\"\n                          leave-to-class=\"hidden\"\n        >\n            <div :class=\"['modal',{fade: !noFade, show: is_visible}]\"\n                 :id=\"id || null\"\n                 role=\"dialog\"\n                 ref=\"modal\"\n                 key=\"modal\"\n                 v-show=\"is_visible\"\n                 @click=\"onClickOut()\"\n                 @keyup.esc=\"onEsc()\"\n            >\n\n                <div :class=\"['modal-dialog','modal-'+size]\">\n                    <div class=\"modal-content\"\n                         tabindex=\"-1\"\n                         role=\"document\"\n                         ref=\"content\"\n                         :aria-labelledby=\"(hideHeader || !id) ? null : (id + '__BV_header_')\"\n                         :aria-describedby=\"id ? (id + '__BV_body_') : null\"\n                         @click.stop\n                    >\n\n                        <header class=\"modal-header\"\n                                ref=\"header\"\n                                :id=\"id ? (id + '__BV_header_') : null\"\n                                v-if=\"!hideHeader\"\n                        >\n                            <slot name=\"modal-header\">\n                                <h5 :is=\"titleTag\" class=\"modal-title\">\n                                    <slot name=\"modal-title\">{{title}}</slot>\n                                </h5>\n                                <button type=\"button\"\n                                        v-if=\"!hideHeaderClose\"\n                                        class=\"close\"\n                                        :aria-label=\"headerCloseLabel\"\n                                        @click=\"hide\"\n                                >\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </slot>\n                        </header>\n\n                        <div class=\"modal-body\" ref=\"body\" :id=\"id ? (id + '__BV_body_') : null\">\n                            <slot></slot>\n                        </div>\n\n                        <footer class=\"modal-footer\" ref=\"footer\" v-if=\"!hideFooter\">\n                            <slot name=\"modal-footer\">\n                                <b-btn v-if=\"!okOnly\"\n                                       variant=\"secondary\"\n                                       :size=\"buttonSize\"\n                                       @click=\"hide(false)\"\n                                ><slot name=\"modal-cancel\">{{ closeTitle }}</slot></b-btn>\n                                <b-btn variant=\"primary\"\n                                       :size=\"buttonSize\"\n                                       :disabled=\"okDisabled\"\n                                       @click=\"hide(true)\"\n                                ><slot name=\"modal-ok\">{{ okTitle }}</slot></b-btn>\n                            </slot>\n                        </footer>\n\n                    </div>\n                </div>\n            </div>\n\n            <div key=\"modal-backdrop\"\n                 :class=\"['modal-backdrop',{fade: !noFade, show: is_visible, in: is_visible}]\"\n                 v-if=\"is_visible\"\n            ></div>\n        </transition-group>\n    </div>\n</template>\n\n<style scoped>\n    .hidden {\n        opacity: 0 !important;\n    }\n\n    /* Make modal display as block instead of inline style, and because Vue's v-show deletes inline \"display\" style */\n    .modal {\n        display: block;\n    }\n</style>\n\n<script>\n    import bBtn from './button.vue';\n    import { listenOnRootMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array'\n\n    const FOCUS_SELECTOR = [\n        'button:not([disabled])',\n        'input:not([disabled])',\n        'select:not([disabled])',\n        'textarea:not([disabled])',\n        'a:not([disabled]):not(.disabled)',\n        '[tabindex]:not([disabled]):not(.disabled)'\n    ].join(',');\n\n    // Determine if an HTML element is visible - Faster than CSS check\n    function isVisible(el) {\n        return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n    }\n\n    // Find the first visible element contained in a given root element\n    function findFirstVisible(root, selector) {\n        if (!root || !root.querySelectorAll || !selector) {\n            return null;\n        }\n        let els = arrayFrom(root.querySelectorAll(selector));\n\n        // IE 10 & 11 do not support native array.find()\n        // So we try native find first, then fall back to a loop\n        let el = els.find ? els.find(el => isVisible(el)) : null;\n        for (let i = 0; !el && i < els.length; i++) {\n            if (isVisible(els[i])) {\n                el = els[i];\n            }\n        }\n        return el;\n    }\n\n    export default {\n        mixins: [listenOnRootMixin],\n        components: {bBtn},\n        data() {\n            return {\n                is_visible: false,\n                return_focus: this.returnFocus || null\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'change'\n        },\n        computed: {\n            body() {\n                if (typeof document !== 'undefined') {\n                    return document.querySelector('body');\n                }\n            }\n        },\n        watch: {\n            visible(new_val, old_val) {\n                if (new_val === old_val) {\n                    return;\n                }\n\n                if (new_val) {\n                    this.show();\n                } else {\n                    this.hide();\n                }\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h5'\n            },\n            size: {\n                type: String,\n                default: 'md'\n            },\n            buttonSize: {\n                type: String,\n                default: 'md'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnBackdrop: {\n                type: Boolean,\n                default: false\n            },\n            noCloseOnEsc: {\n                type: Boolean,\n                default: false\n            },\n            noAutoFocus: {\n                type: Boolean,\n                default: false\n            },\n            noEnforceFocus: {\n                type: Boolean,\n                default: false\n            },\n            hideHeader: {\n                type: Boolean,\n                default: false\n            },\n            hideFooter: {\n                type: Boolean,\n                default: false\n            },\n            hideHeaderClose: {\n                type: Boolean,\n                default: false\n            },\n            okOnly: {\n                type: Boolean,\n                default: false\n            },\n            okDisabled: {\n                type: Boolean,\n                default: false\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            returnFocus: {\n                default: null\n            },\n            headerCloseLabel: {\n                type: String,\n                default: 'Close'\n            },\n            closeTitle: {\n                type: String,\n                default: 'Close'\n            },\n            okTitle: {\n                type: String,\n                default: 'OK'\n            }\n        },\n        methods: {\n            show() {\n                if (this.is_visible) {\n                    return;\n                }\n                this.$emit('show');\n                this.is_visible = true;\n                this.$root.$emit('shown::modal', this.id);\n                this.body.classList.add('modal-open');\n                this.$emit('shown');\n                this.$emit('change', true);\n                if (typeof document !== 'undefined') {\n                    // Guard against infinite focus loop\n                    document.removeEventListener('focusin', this.enforceFocus, false);\n                    // Handle constrained focus\n                    document.addEventListener('focusin', this.enforceFocus, false);\n                }\n            },\n            hide(isOK) {\n                if (!this.is_visible) {\n                    return;\n                }\n\n                // Create event object\n                let canceled = false;\n                const e = {\n                    isOK,\n                    cancel() {\n                        canceled = true;\n                    }\n                };\n\n                // Emit events\n                this.$emit('change', false);\n                this.$emit('hide', e);\n\n                if (isOK === true) {\n                    this.$emit('ok', e);\n                } else if (isOK === false) {\n                    this.$emit('cancel', e);\n                }\n\n                // Hide if not canceled\n                if (!canceled) {\n                    if (typeof document !== 'undefined') {\n                        // Remove focus handler\n                        document.removeEventListener('focusin', this.enforceFocus, false);\n                        // Return focus to original button/trigger element if provided\n                        this.returnFocusTo();\n                    }\n                    this.is_visible = false;\n                    this.$root.$emit('hidden::modal', this.id);\n                    this.$emit('hidden', e);\n                    this.body.classList.remove('modal-open');\n                }\n            },\n            onClickOut() {\n                // If backdrop clicked, hide modal\n                if (this.is_visible && !this.noCloseOnBackdrop) {\n                    this.hide();\n                }\n            },\n            onEsc() {\n                // If ESC pressed, hide modal\n                if (this.is_visible && !this.noCloseOnEsc) {\n                    this.hide();\n                }\n            },\n            focusFirst() {\n                // Don't try and focus if we are SSR\n                if (typeof document === 'undefined') {\n                    return;\n                }\n                this.$nextTick(() => {\n                    // If activeElement is child of content, no need to change focus\n                    if (document.activeElement && this.$refs.content.contains(document.activeElement)) {\n                        return;\n                    }\n\n                    let el;\n                    if (!this.noAutoFocus) {\n                        // Focus the modal's first focusable item, searching body, footer, then header\n                        if (this.$refs.body) {\n                            el = findFirstVisible(this.$refs.body, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.footer) {\n                            el = findFirstVisible(this.$refs.footer, FOCUS_SELECTOR);\n                        }\n                        if (!el && this.$refs.header) {\n                            el = findFirstVisible(this.$refs.header, FOCUS_SELECTOR);\n                        }\n                    }\n                    if (!el) {\n                        // Focus the modal content wrapper\n                        el = this.$refs.content;\n                    }\n                    if (el && el.focus) {\n                        el.focus();\n                    }\n                });\n            },\n            returnFocusTo() {\n                // Prrefer returnFocus prop over event specified value\n                let el = this.returnFocus || this.return_focus || null;\n\n                if (el) {\n                    if (typeof el === 'string') {\n                        // CSS Selector\n                        el = document.querySelector(el);\n                    }\n                    if (el && el.$el && typeof el.$el.focus === 'function') {\n                        // Component vm reference\n                        el.$el.focus();\n                    } else if (el && typeof el.focus === 'function') {\n                        // Plain element\n                        el.focus();\n                    }\n                }\n            },\n            enforceFocus(e) {\n                // If focus leaves modal, bring it back\n                // Event Listener bound on document\n                if (!this.noEnforceFocus &&\n                    this.is_visible &&\n                    document !== e.target &&\n                    this.$refs.content &&\n                    this.$refs.content !== e.target &&\n                    !this.$refs.content.contains(e.target)) {\n                    this.$refs.content.focus();\n                }\n            },\n            showHandler(id, triggerEl) {\n                if (id === this.id) {\n                    this.return_focus = triggerEl || null;\n                    this.show();\n                }\n            },\n            hideHandler(id) {\n                if (id === this.id) {\n                    this.hide();\n                }\n            }\n        },\n        created() {\n            this.listenOnRoot('show::modal', this.showHandler);\n            this.listenOnRoot('hide::modal', this.hideHandler);\n        },\n        mounted() {\n            if (this.visible === true) {\n                this.show();\n            }\n        },\n        destroyed() {\n            // Make sure event listener is rmoved\n            if (typeof document !== 'undefined') {\n                document.removeEventListener('focusin', this.enforceFocus, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <ul :class=\"['pagination',btnSize,alignment]\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        role=\"menubar\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelFirstPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   role=\"menuitem\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, 1)\"\n                   @keydown.enter.prevent=\"setPage($event, 1)\"\n                   @keydown.space.prevent=\"setPage($event, 1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></a>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <a class=\"page-link\"\n               :aria-label=\"labelPrevPage\"\n               :aria-controls=\"ariaControls || null\"\n               role=\"menuitem\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage - 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></a>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\" role=\"none presentation\" :class=\"pageItemClasses(page)\" :key=\"page.number\">\n            <a :class=\"pageLinkClasses(page)\"\n               :disabled=\"disabled\"\n               :aria-disabled=\"disabled ? 'true' : null\"\n               :aria-label=\"labelPage + ' ' + page.number\"\n               :aria-checked=\"isActive(page.number) ? 'true' : 'false'\"\n               :aria-controls=\"ariaControls || null\"\n               :aria-posinset=\"page.number\"\n               :aria-setsize=\"numberOfPages\"\n               role=\"menuitemradio\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, page.number)\"\n               @keydown.enter.prevent=\"setPage($event, page.number)\"\n               @keydown.space.prevent=\"setPage($event, page.number)\"\n            >{{ page.number }}</a>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <a class=\"page-link\"\n               :aria-label=\"labelNextPage\"\n               :aria-controls=\"ariaControls || null\"\n               role=\"menuitem\"\n               href=\"#\"\n               tabindex=\"-1\"\n               @click.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.enter.prevent=\"setPage($event, currentPage + 1)\"\n               @keydown.space.prevent=\"setPage($event, currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></a>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\"\n                class=\"page-item disabled\"\n                role=\"none presentation\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <a class=\"page-link\"\n                   :aria-label=\"labelLastPage\"\n                   :aria-controls=\"ariaControls || null\"\n                   role=\"menuitem\"\n                   href=\"#\"\n                   tabindex=\"-1\"\n                   @click.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.enter.prevent=\"setPage($event, numberOfPages)\"\n                   @keydown.space.prevent=\"setPage($event, numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></a>\n            </li>\n        </template>\n    </ul>\n</template>\n\n<script>\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\nexport default {\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    computed: {\n        numberOfPages() {\n            const result = Math.ceil(this.totalRows / this.perPage);\n            return (result < 1) ? 1 : result;\n        },\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        alignment() {\n            if (this.align === 'center') {\n                return 'justify-content-center';\n            } else if  (this.align === 'end' || this.align === 'right') {\n                return 'justify-content-end';\n            }\n            return '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n\n            let numLinks = this.limit;\n            let startNum = 1;\n\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n\n            return pages;\n        }\n    },\n    methods: {\n        isActive(page) {\n            return page === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        setPage(e, num) {\n            if (this.disabled) {\n                e.preventDefault();\n                e.stopPropagation();\n                return;\n            }\n            if (num > this.numberOfPages) {\n                this.currentPage = this.numberOfPages;\n            } else if (num < 1) {\n                this.currentpage = 1;\n            } else {\n                this.currentPage = num;\n            }\n            this.$nextTick(() => {\n                // Keep the current button focused if possible\n                if (isVisible(e.target) && e.target.focus) {\n                    e.target.focus();\n                } else {\n                    this.focusCurrent();\n                }\n            });\n            this.$emit('change', this.currentPage);\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    },\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        perPage: {\n            type: Number,\n            default: 20\n        },\n        totalRows: {\n            type: Number,\n            default: 20\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        },\n        ariaControls: {\n            type: String,\n            default: null\n        }\n    }\n};\n</script>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n","<template>\n<nav>\n    <ul :class=\"['pagination',btnSize,alignment]\"\n        :aria-disabled=\"disabled ? 'true' : 'false'\"\n        :aria-label=\"ariaLabel ? ariaLabel : null\"\n        role=\"menubar\"\n        @focusin.self=\"focusCurrent\"\n        @keydown.left.prevent=\"focusPrev\"\n        @keydown.right.prevent=\"focusNext\"\n        @keydown.shift.left.prevent=\"focusFirst\"\n        @keydown.shift.right.prevent=\"focusLast\"\n    >\n\n        <!-- Goto First Page button -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n                <span class=\"page-link\" v-html=\"firstText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <b-link class=\"page-link\"\n                        v-bind=\"linkProps(1)\"\n                        :aria-label=\"labelFirstPage\"\n                        role=\"menuitem\"\n                        tabindex=\"-1\"\n                        @click=\"onClick(1)\"\n                ><span aria-hidden=\"true\" v-html=\"firstText\"></span></b-link>\n            </li>\n        </template>\n\n        <!-- Goto Previous page button -->\n        <li v-if=\"isActive(1) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"prevText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <b-link class=\"page-link\"\n                    v-bind=\"linkProps(currentPage - 1)\"\n                    :aria-label=\"labelPrevPage\"\n                    role=\"menuitem\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(currentPage - 1)\"\n            ><span aria-hidden=\"true\" v-html=\"prevText\"></span></b-link>\n        </li>\n\n        <!-- First Ellipsis Bookend -->\n        <li v-if=\"showFirstDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Pages links -->\n        <li v-for=\"page in pageList\" role=\"none presentation\" :class=\"pageItemClasses(page)\" :key=\"page.number\">\n            <span v-if=\"disabled\" class=\"page-link\">{{ page.number }}</span>\n            <b-link v-else\n                    v-bind=\"linkProps(page.number)\"\n                    :class=\"pageLinkClasses(page)\"\n                    :disabled=\"disabled\"\n                    :aria-disabled=\"disabled ? 'true' : null\"\n                    :aria-label=\"labelPage + ' ' + page.number\"\n                    :aria-checked=\"isActive(page.number) ? 'true' : 'false'\"\n                    :aria-posinset=\"page.number\"\n                    :aria-setsize=\"numberOfPages\"\n                    role=\"menuitemradio\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(page.number)\"\n            >{{ makePage(page.number) }}</b-link>\n        </li>\n\n        <!-- Last Ellipsis Bookend -->\n        <li v-if=\"showLastDots\" class=\"page-item disabled hidden-xs-down\" role=\"separator\">\n            <span class=\"page-link\" v-html=\"ellipsisText\"></span>\n        </li>\n\n        <!-- Goto Next page -->\n        <li v-if=\"isActive(numberOfPages) || disabled\" class=\"page-item disabled\" role=\"none presentation\" aria-hidden=\"true\">\n            <span class=\"page-link\" v-html=\"nextText\"></span>\n        </li>\n        <li v-else class=\"page-item\" role=\"none presentation\">\n            <b-link class=\"page-link\"\n                    v-bind=\"linkProps(currentPage + 1)\"\n                    :aria-label=\"labelNextPage\"\n                    role=\"menuitem\"\n                    tabindex=\"-1\"\n                    @click=\"onClick(currentPage + 1)\"\n            ><span aria-hidden=\"true\" v-html=\"nextText\"></span></b-link>\n        </li>\n\n        <!-- Goto Last page -->\n        <template v-if=\"!hideGotoEndButtons\">\n            <li v-if=\"isActive(numberOfPages) || disabled\"\n                class=\"page-item disabled\"\n                role=\"none presentation\"\n                aria-hidden=\"true\"\n            >\n                <span class=\"page-link\" v-html=\"lastText\"></span>\n            </li>\n            <li v-else class=\"page-item\" role=\"none presentation\">\n                <b-link class=\"page-link\"\n                        v-bind=\"linkProps(numberOfPages)\"\n                        :aria-label=\"labelLastPage\"\n                        role=\"menuitem\"\n                        @click=\"onClick(numberOfPages)\"\n                ><span aria-hidden=\"true\" v-html=\"lastText\"></span></b-link>\n            </li>\n        </template>\n    </ul>\n</nav>\n</template>\n\n<style scoped>\n    .page-item {\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n    .page-item.disabled {\n        cursor: not-allowed;\n        opacity: .65;\n    }\n</style>\n\n<script>\nimport bLink from './link.vue';\nimport { pickLinkProps } from '../mixins/link';\nimport { from as arrayFrom } from '../utils/array'\nimport range from '../utils/range'\nimport { assign } from '../utils/object';\n\n// Determine if an HTML element is visible - Faster than CSS check\nfunction isVisible(el) {\n    return el && (el.offsetWidth > 0 || el.offsetHeight > 0);\n}\n\n// Make an array of N to N+X\nfunction makePageArray(startNum, numPages) {\n    return range(numPages).map(function(value, index){\n        return { number: index + startNum, className: null };\n    });\n}\n\n// Threshold of limit size when we start/stop showing ellipsis\nconst ELLIPSIS_THRESHOLD = 3;\n\n// Props needed for router links\nconst routerProps = pickLinkProps('activeClass','exactActiveClass','append','exact','replace','target','rel');\n\n// Props object\nconst props = assign(\n    // pagination-nav specific props\n    {\n        numberOfPages: {\n            type: Number,\n            default: 1\n        },\n        baseUrl: {\n            type: String,\n            default: '/'\n        },\n        useRouter: {\n            type: Boolean,\n            default: false\n        },\n        linkGen: {\n            type: Function,\n            default: null\n        },\n        pageGen: {\n            type: Function,\n            default: null\n        }\n    },\n    // pagination common props\n    {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Number,\n            default: 1\n        },\n        limit: {\n            type: Number,\n            default: 5\n        },\n        size: {\n            type: String,\n            default: 'md'\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        hideGotoEndButtons: {\n            type: Boolean,\n            default: false\n        },\n        ariaLabel: {\n            type: String,\n            default: 'Pagination'\n        },\n        labelFirstPage: {\n            type: String,\n            default: 'Goto first page'\n        },\n        firstText: {\n            type: String,\n            default: '&laquo;'\n        },\n        labelPrevPage: {\n            type: String,\n            default: 'Goto previous page'\n        },\n        prevText: {\n            type: String,\n            default: '&lsaquo;'\n        },\n        labelNextPage: {\n            type: String,\n            default: 'Goto next page'\n        },\n        nextText: {\n            type: String,\n            default: '&rsaquo;'\n        },\n        labelLastPage: {\n            type: String,\n            default: 'Goto last page'\n        },\n        lastText: {\n            type: String,\n            default: '&raquo;'\n        },\n        labelPage: {\n            type: String,\n            default: 'Goto page'\n        },\n        hideEllipsis: {\n            type: Boolean,\n            default: false\n        },\n        ellipsisText: {\n            type: String,\n            default: '&hellip;'\n        }\n    },\n    // Router specific props\n    routerProps\n);\n\nexport default {\n    components: { bLink },\n    data() {\n        return {\n            showFirstDots: false,\n            showLastDots: false,\n            currentPage: this.value\n        };\n    },\n    props,\n    watch: {\n        currentPage(newPage, oldPage) {\n            if (newPage !== oldPage) {\n                this.$emit('input', newPage);\n            }\n        },\n        value(newValue, oldValue) {\n            if (newValue !== oldValue) {\n                this.currentPage = newValue;\n            }\n        }\n    },\n    computed: {\n        btnSize() {\n            return this.size ? `pagination-${this.size}` : '';\n        },\n        alignment() {\n            if (this.align === 'center') {\n                return 'justify-content-center';\n            } else if  (this.align === 'end' || this.align === 'right') {\n                return 'justify-content-end';\n            }\n            return '';\n        },\n        pageList() {\n            // Sanity checks\n            if (this.currentPage > this.numberOfPages) {\n              this.currentPage = this.numberOfPages;\n            } else if (this.currentPage < 1) {\n              this.currentPage = 1;\n            }\n            // - Hide first ellipsis marker\n            this.showFirstDots = false;\n            // - Hide last ellipsis marker\n            this.showLastDots = false;\n            let numLinks = this.limit;\n            let startNum = 1;\n            if (this.numberOfPages <= this.limit) {\n                // Special Case: Less pages available than the limit of displayed pages\n                numLinks = this.numberOfPages;\n            } else if (this.currentPage < (this.limit - 1) && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the beginning of the page list\n                if (!this.hideEllipsis) {\n                    numLinks = this.limit - 1;\n                    this.showLastDots = true;\n                }\n            } else if ((this.numberOfPages - this.currentPage + 2) < this.limit && this.limit > ELLIPSIS_THRESHOLD) {\n                // We are near the end of the list\n                if (!this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    numLinks = this.limit - 1;\n                }\n                startNum = this.numberOfPages - numLinks + 1;\n            } else {\n                // We are somewhere in the middle of the page list\n                if (this.limit > ELLIPSIS_THRESHOLD && !this.hideEllipsis) {\n                    this.showFirstDots = true;\n                    this.showLastDots = true;\n                    numLinks = this.limit - 2;\n                }\n                startNum = this.currentPage - Math.floor(numLinks / 2);\n            }\n            // Sanity checks\n            if (startNum < 1) {\n                startNum = 1;\n            } else if (startNum > (this.numberOfPages - numLinks)) {\n                startNum = this.numberOfPages - numLinks + 1;\n            }\n            // Generate list of page numbers\n            const pages = makePageArray(startNum, numLinks);\n            // We limit to a total of 3 page buttons on small screens\n            // Ellipsis will also be hidden on small screens\n            if (pages.length > 3) {\n                const idx = this.currentPage - startNum;\n                if (idx === 0) {\n                    // Keep leftmost 3 buttons visible\n                    for (let i = 3; i < pages.length; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else if (idx === pages.length - 1) {\n                    // Keep rightmost 3 buttons visible\n                    for (let i = 0; i < pages.length - 3; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                } else {\n                    // hide left button(s)\n                    for (let i = 0; i < idx - 1; i++) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                    // hide right button(s)\n                    for (let i = pages.length - 1; i > idx + 1; i--) {\n                        pages[i].className = 'hidden-xs-down';\n                    }\n                }\n            }\n            return pages;\n        }\n    },\n    methods: {\n        onClick(pageNum) {\n            this.currentPage = pageNum;\n        },\n        makeLink(pagenum) {\n            if (this.linkGen && typeof this.linkGen === 'function') {\n                return this.linkGen(pagenum);\n            }\n            const link = `${this.baseUrl}${pagenum}`;\n            return this.useRouter ? { path: link } : link;\n        },\n        makePage(pagenum) {\n            if (this.pageGen && typeof this.pageGen === 'function') {\n                return this.pageGen(pagenum);\n            }\n            return pagenum;\n        },\n        linkProps(pagenum) {\n            const link = this.makeLink(pagenum);\n            let props = {\n                href: typeof link === 'string' ? link : null,\n                target: this.target || null,\n                rel: this.rel || null,\n                disabled: this.disabled\n            };\n            if (this.useRouter || typeof link === 'object') {\n                props = assign(props, {\n                    to: link,\n                    exact: this.exact,\n                    activeClass: this.activeClass,\n                    exactActiveClass: this.exactActiveClass,\n                    append: this.append,\n                    replace: this.replace\n                });\n            }\n            return props;\n        },\n        isActive(pagenum) {\n            return pagenum === this.currentPage;\n        },\n        pageItemClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-item',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : '',\n                page.className\n            ];\n        },\n        pageLinkClasses(page) {\n            const active = this.isActive(page.number);\n            return [\n                'page-link',\n                this.disabled ? 'disabled' : '',\n                active ? 'active' : ''\n            ];\n        },\n        getButtons() {\n            const buttons = arrayFrom(this.$el.querySelectorAll('a.page-link'));\n            // Return only buttons that are visible\n            return buttons.filter(btn => isVisible(btn));\n        },\n        setBtnFocus(btn) {\n            this.$nextTick(() => {\n                btn.focus();\n            });\n        },\n        focusFirst() {\n            const btn = this.getButtons().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusLast() {\n            const btn = this.getButtons().reverse().find(el => !el.disabled);\n            if (btn && btn.focus && btn !== document.activeElement) {\n                this.setBtnFocus(btn);\n            }\n        },\n        focusCurrent() {\n            const btn = this.getButtons().find(el => parseInt(el.getAttribute('aria-posinset'), 10) === this.currentPage);\n            if (btn && btn.focus) {\n                this.setBtnFocus(btn);\n            } else {\n                // Fallback if current page is not in button list\n                this.focusFirst();\n            }\n        },\n        focusPrev() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            if (idx > 0 && !buttons[idx - 1].disabled && buttons[idx - 1].focus) {\n                this.setBtnFocus(buttons[idx - 1]);\n            }\n        },\n        focusNext() {\n            const buttons = this.getButtons();\n            const idx = buttons.indexOf(document.activeElement);\n            const cnt = buttons.length - 1;\n            if (idx < cnt && !buttons[idx + 1].disabled && buttons[idx + 1].focus) {\n                this.setBtnFocus(buttons[idx + 1]);\n            }\n        }\n    }\n};\n</script>\n","import { keys } from '../utils/object';\nconst all_listen_types = {hover: true, click: true, focus: true};\n\nexport default function targets (vnode, binding, listen_types, fn) {\n\n    const targets = keys(binding.modifiers || {})\n        .filter(t => !all_listen_types[t]);\n\n    if (binding.value) {\n        targets.push(binding.value);\n    }\n\n    const listener = () => {\n        fn({targets, vnode});\n    };\n\n    keys(all_listen_types).forEach(type => {\n        if (listen_types[type] || binding.modifiers[type]) {\n            vnode.elm.addEventListener(type, listener);\n        }\n    });\n\n    // Return the list of targets\n    return targets;\n}\n","import { isArray, from as arrayFrom } from '../utils/array';\nimport { assign, keys } from '../utils/object';\nconst inBrowser = typeof window !== 'undefined';\nconst isServer = !inBrowser;\n\n/*\n * Polyfill for Element.closest() for IE :(\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n */\n\nif (inBrowser && window.Element && !Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n        let el = this;\n        let i;\n        do {\n            i = matches.length;\n            // eslint-disable-next-line no-empty\n            while (--i >= 0 && matches.item(i) !== el) {\n            }\n        } while ((i < 0) && (el = el.parentElement));\n        return el;\n    };\n}\n\n/*\n * Constants / Defaults\n */\n\nconst NAME = 'v-b-scrollspy';\nconst EVENT = 'scrollspy::activate';\nconst BVSS = '__BV_ScrollSpy__';\n\nconst Default = {\n    element: 'body',\n    offset: 10,\n    method: 'auto',\n    throttle: 100\n};\n\nconst DefaultType = {\n    element: '(string|element)',\n    offset: 'number',\n    method: 'string',\n    throttle: 'number'\n};\n\nconst ClassName = {\n    DROPDOWN_ITEM: 'dropdown-item',\n    DROPDOWN_MENU: 'dropdown-menu',\n    DROPDOWN_TOGGLE: 'dropdown-toggle',\n    NAV_LINK: 'nav-link',\n    LIST_ITEM: 'list-group-item',\n    ACTIVE: 'active'\n};\n\nconst Selector = {\n    ACTIVE: '.active',\n    NAV_LIST_GROUP: '.nav, .list-group',\n    NAV: '.nav',\n    LIST_GROUP: '.list-group',\n    NAV_LINKS: '.nav-link',\n    LIST_ITEMS: '.list-group-item',\n    DROPDOWN: '.dropdown',\n    DROPDOWN_ITEMS: '.dropdown-item',\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\n\nconst OffsetMethod = {\n    OFFSET: 'offset',\n    POSITION: 'position'\n};\n\n/*\n * DOM Utility Methods\n */\n\nfunction isElement(obj) {\n    return obj.nodeType;\n}\n\n// Wrapper for Element.closest to emulate jQuery's closest (sorta)\nfunction closest(element, selector) {\n    const el = element.closest(selector);\n    return el === element ? null : el;\n}\n\n// Query Selector All wrapper\nfunction $QSA(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return [];\n    }\n    return arrayFrom(element.querySelectorAll(selector));\n}\n\n// Query Selector wrapper\nfunction $QS(selector, element) {\n    if (!element) {\n        element = document;\n    }\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.querySelector(selector) || null;\n}\n\n/*\n * Utility Methods\n */\n\n// Get Vue VM from element\nfunction getVm(el) {\n    return el ? el.__vue__ : null;\n}\n\n// Better var type detection\nfunction toType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n// Check config properties for expected types\nfunction typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n            const expectedTypes = configTypes[property];\n            const value = config[property];\n            const valueType = value && isElement(value) ? 'element' : toType(value);\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n                console.error(\n                    componentName + ': Option \"' + property + '\" provided type \"' +\n                    valueType + '\" but expected type \"' + expectedTypes + '\"'\n                );\n            }\n        }\n    }\n}\n\n/*\n * ScrollSpy Class\n */\n\nfunction ScrollSpy(el, binding) {\n    // The element that contains the nav-links et al\n    this._$el = el;\n    // The selectors to find the nav-links\n    this._selector = [\n        Selector.NAV_LINKS,\n        Selector.LIST_ITEMS,\n        Selector.DROPDOWN_ITEMS\n    ].join(',');\n    // Start off with default configurtion\n    this._config = assign({}, Default);\n    // Target HREF IDs and their offsets\n    this._offsets = [];\n    this._targets = [];\n    // The currently active target (as an HREF id)\n    this._activeTarget = null;\n    // Curent scroll height (for detecting document height changes)\n    this._scrollHeight = 0;\n    // Reference to the $root VM so we can spew events\n    this._$root = null;\n    // Reference to our throttled resize timeout\n    this._resizeTimeout = null;\n\n    // Process bindings/config\n    this.updateConfig(binding);\n}\n\n/*\n * ScrollSpy Public methods\n */\n\n// Update config\nScrollSpy.prototype.updateConfig = function (binding) {\n    // If Argument, assume element ID\n    if (binding.arg) {\n        // Element ID specified as arg. We must pre-pend #\n        this._config.element = '#' + binding.arg;\n    }\n\n    // Process modifiers\n    keys(binding.modifiers).forEach(val => {\n        if (/^\\d+$/.test(val)) {\n            // Offest value\n            this._config.offset = parseInt(val, 10);\n        } else if (/^(auto|position|offset)$/.test(val)) {\n            // Offset method\n            this._config.method = val;\n        }\n    });\n\n    // Process value\n    if (typeof binding.value === 'string') {\n        // Value is  a CSS ID or selector\n        this._config.element = binding.value;\n    } else if (typeof binding.value === 'number') {\n        // Value is offset\n        this._config.offset = Math.round(binding.value);\n    } else if (typeof binding.value === 'object') {\n        // Value is config object\n        keys(binding.value).filter(k => Boolean(DefaultType[k])).forEach(k => {\n            this._config[k] = binding.value[k];\n        });\n    }\n\n    // Check the config and log error to console. Unknown options are ignored\n    typeCheckConfig(NAME, this._config, DefaultType);\n\n    // Get Vue instance from element\n    const vm = getVm(this._$el);\n    if (vm && vm.$root) {\n        this._$root = vm.$root;\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn on event listener\nScrollSpy.prototype.listen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.addEventListener('scroll', this, false);\n        }\n        window.addEventListener('scroll', this, false);\n        window.addEventListener('orientationchange', this, false);\n        window.addEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Turn off event listener\nScrollSpy.prototype.unListen = function () {\n    const scroller = this._getScroller();\n    if (scroller) {\n        if (scroller.tagName !== 'BODY') {\n            scroller.removeEventListener('scroll', this, false);\n        }\n        window.removeEventListener('scroll', this, false);\n        window.removeEventListener('orientationchange', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Refresh the positions of the target IDs\nScrollSpy.prototype.refresh = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return this;\n    }\n\n    const autoMethod = scroller.tagName === 'BODY' ? OffsetMethod.OFFSET : OffsetMethod.POSITION;\n    const offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\n    const offsetBase = offsetMethod === OffsetMethod.OFFSET ? 0 : this._getScrollTop();\n\n    this._offsets = [];\n    this._targets = [];\n    this._scrollHeight = this._getScrollHeight();\n\n    // Find all nav link/dropdown/list-item links in our element\n    $QSA(this._selector, this._$el).map(el => {\n        const href = el.getAttribute('href');\n        if (href && href.charAt(0) === '#' && href !== '#' && href.indexOf('#/') === -1) {\n            const target = $QS(href, scroller);\n            if (!target) {\n                return null;\n            }\n            const bcr = target.getBoundingClientRect();\n            if (bcr.width || bcr.height) {\n                return {\n                    offset: (offsetMethod === OffsetMethod.OFFSET ? bcr.top : target.offsetTop) + offsetBase,\n                    href\n                };\n            }\n        }\n        return null;\n    }).filter(\n        item => item\n    ).sort(\n        (a, b) => a.offset - b.offset\n    ).forEach(item => {\n        this._offsets.push(item.offset);\n        this._targets.push(item.href);\n    });\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Handle the active target selection\nScrollSpy.prototype.process = function () {\n    if (!this._getScroller) {\n        return this;\n    }\n    const scrollTop = this._getScrollTop() + this._config.offset;\n    const scrollHeight = this._getScrollHeight();\n    const maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\n\n    if (this._scrollHeight !== scrollHeight) {\n        this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n        const target = this._targets[this._targets.length - 1];\n        if (this._activeTarget !== target) {\n            this._activate(target);\n        }\n        return this;\n    }\n\n    if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\n        this._activeTarget = null;\n        this._clear();\n        return this;\n    }\n\n    for (let i = this._offsets.length; i--;) {\n        const isActiveTarget =\n            this._activeTarget !== this._targets[i] &&\n            scrollTop >= this._offsets[i] &&\n            (this._offsets[i + 1] === undefined ||\n            scrollTop < this._offsets[i + 1]);\n\n        if (isActiveTarget) {\n            this._activate(this._targets[i]);\n        }\n    }\n\n    // Return ourself for easy chaining\n    return this;\n};\n\n// Fake a resize event to schedule a refresh/process\nScrollSpy.prototype.scheduleRefresh = function () {\n    this.handleEvent({type:'resize'});\n    return this;\n};\n\n// Dispose  of our stuff\nScrollSpy.prototype.dispose = function () {\n    // Ensure we are not listening to events\n    this.unListen();\n\n    // Garbage collection\n    clearTimeout(this._resizeTimeout);\n    this._resizeTimeout = null;\n    this._$el = null;\n    this._config = null;\n    this._selector = null;\n    this._offsets = null;\n    this._targets = null;\n    this._activeTarget = null;\n    this._scrollHeight = null;\n    this._$root = null;\n};\n\n/*\n * ScrollSpy event handler\n */\n\nScrollSpy.prototype.handleEvent = function (e) {\n    const self = this;\n\n    function resizeThrottle() {\n        clearTimeout(self._resizeTimeout);\n        self._resizeTimeout = setTimeout(() => {\n            self.refresh().process();\n        }, self._config.throttle || Default.throttle);\n    }\n\n    if (e.type === 'scroll') {\n        this.process();\n    } else if (e.type === 'orientationchange' || e.type === 'resize') {\n        resizeThrottle();\n    }\n};\n\n/*\n * ScrollSpy private methods\n */\n\n// Get the srolling element\nScrollSpy.prototype._getScroller = function () {\n    if (isServer) {\n        return null;\n    }\n    const scroller = this._config.element;\n    if (!scroller) {\n        return null;\n    }\n    if (scroller && isElement(scroller)) {\n        return scroller;\n    } else if (typeof scroller === 'string') {\n        if (scroller === 'body') {\n            return document.body;\n        }\n        // Otherwise assume CSS selector\n        return $QS(scroller);\n    }\n    return null;\n};\n\n// Return the scroller top position\nScrollSpy.prototype._getScrollTop = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.pageYOffset : scroller.scrollTop;\n};\n\n// Return the scroller height\nScrollSpy.prototype._getScrollHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ?\n        Math.max(document.body.scrollHeight, document.documentElement.scrollHeight) :\n        scroller.scrollHeight;\n};\n\n// Return the scroller offset top position\nScrollSpy.prototype._getOffsetHeight = function () {\n    const scroller = this._getScroller();\n    if (!scroller) {\n        return 0;\n    }\n    return scroller.tagName === 'BODY' ? window.innerHeight : scroller.getBoundingClientRect().height;\n};\n\n// Activate the scrolled in target nav-link\nScrollSpy.prototype._activate = function (target) {\n    this._activeTarget = target;\n    this._clear();\n\n    let queries = this._selector.split(',');\n    queries = queries.map(selector => {\n        return selector + '[href=\"' + target + '\"]';\n    });\n\n    const links = $QSA(queries.join(','), this._$el);\n\n    links.forEach(link => {\n        if (link.classList.contains(ClassName.DROPDOWN_ITEM)) {\n            // This is a dropdown item, so find the .dropdown-toggle and set it's state\n            const dropdown = closest(link, Selector.DROPDOWN);\n            if (dropdown) {\n                const toggle = $QS(Selector.DROPDOWN_TOGGLE, dropdown);\n                if (toggle) {\n                    this._setActiveState(toggle, true);\n                }\n            }\n            // Also set this link's state\n            this._setActiveState(link, true);\n        } else {\n            // Set triggered link as active\n            this._setActiveState(link, true);\n            // Set triggered links parents as active\n            // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n            // Handle parent .nav's and .list-group's\n            this._setParentsSiblingActiveState(link, Selector.NAV_LIST_GROUP, [ClassName.NAV_LINK, ClassName.LIST_ITEM], true);\n        }\n    });\n\n    // Signal event to root, passing ID of target\n    if (links && links.length > 0 && this._$root && this._$root.$emit) {\n        this._$root.$emit(EVENT, target);\n    }\n};\n\n// Clear the 'active' targets in our nav component\nScrollSpy.prototype._clear = function () {\n    $QSA(this._selector, this._$el).filter(el => {\n        if (el.classList.contains(ClassName.ACTIVE)) {\n            const href = el.getAttribute('href');\n            if (href.charAt(0) !== '#' || href.indexOf('#/') === 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }).forEach(el => {\n        this._setActiveState(el, false);\n    });\n};\n\n// Set the active state. if el has a vue insatnce then try setting the active prop,\n// Else fallback to adding the active class\nScrollSpy.prototype._setActiveState = function (el, state) {\n    if (el) {\n        if (el.classList.contains(ClassName.NAV_LINK) && !el.classList.contains(ClassName.DROPDOWN_TOGGLE)) {\n            // Special case where VM with 'active' prop is on parent element\n            el = el.parentElement;\n        }\n        const vm = getVm(el);\n        if (vm && Object.prototype.hasOwnProperty.call(vm.$props, 'active')) {\n            // This is a component that has an `active` prop\n            vm.$props.active = state;\n        } else {\n            // Fallback to setting class attribute since item doesn't have an 'active' prop\n            el.classList[state ? 'add' : 'remove'](ClassName.ACTIVE);\n        }\n    }\n};\n\n// Find all the matching parents given a CSS selector, then find previous sibling that matches the supplied classes\n// And then set the active state on each immediate previous sibling of the parent(s)\nScrollSpy.prototype._setParentsSiblingActiveState = function (element, selector, classes, state) {\n    if (!classes) {\n        return;\n    }\n    if (!isArray(classes)) {\n        classes = [classes];\n    }\n    let el = element;\n    while (el) {\n        el = closest(el, selector);\n        if (el && el.previousElementSibling) {\n            for (let i = 0; i < classes.length - 1; i++) {\n                if (el.previousElementSibling.classList.contains(classes[i])) {\n                    this._setActiveState(el, state);\n                }\n            }\n        }\n    }\n};\n\n/*\n * Export our directive\n */\n\nexport default {\n    bind(el, binding) {\n        if (isServer || el[BVSS]) {\n            return;\n        }\n        el[BVSS] = new ScrollSpy(el, binding);\n    },\n    inserted(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding).listen();\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    update(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    componentUpdated(el, binding) {\n        if (isServer) {\n            return;\n        }\n        if (!el[BVSS]) {\n            el[BVSS] = new ScrollSpy(el, binding);\n            el[BVSS].listen();\n        } else {\n            el[BVSS].updateConfig(binding);\n        }\n        el[BVSS].refresh().process().scheduleRefresh();\n    },\n    unbind(el) {\n        if (isServer || !el[BVSS]) {\n            return;\n        }\n        // Remove scroll event listener on scrollElId\n        el[BVSS].unListen().dispose();\n        el[BVSS] = null;\n    }\n};\n","// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// es6-ified by @alexsasharegan\nif (!Array.from) {\n    Array.from = (function() {\n        const toStr = Object.prototype.toString\n        const isCallable = fn => typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\"\n        const toInteger = value => {\n            const number = Number(value)\n            if (isNaN(number)) {\n                return 0\n            }\n            if (number === 0 || !isFinite(number)) {\n                return number\n            }\n            return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\n        }\n        const maxSafeInteger = Math.pow(2, 53) - 1\n        const toLength = value => Math.min(Math.max(toInteger(value), 0), maxSafeInteger)\n\n        // The length property of the from method is 1.\n        return function from(arrayLike /*, mapFn, thisArg */) {\n            // 1. Let C be the this value.\n            const C = this\n\n            // 2. Let items be ToObject(arrayLike).\n            const items = Object(arrayLike)\n\n            // 3. ReturnIfAbrupt(items).\n            if (arrayLike == null) {\n                throw new TypeError(\"Array.from requires an array-like object - not null or undefined\")\n            }\n\n            // 4. If mapfn is undefined, then let mapping be false.\n            const mapFn = arguments.length > 1 ? arguments[1] : void undefined\n            let T\n\n            if (typeof mapFn !== \"undefined\") {\n                // 5. else\n                // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n                if (!isCallable(mapFn)) {\n                    throw new TypeError(\"Array.from: when provided, the second argument must be a function\")\n                }\n\n                // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n                if (arguments.length > 2) {\n                    T = arguments[2]\n                }\n            }\n\n            // 10. Let lenValue be Get(items, \"length\").\n            // 11. Let len be ToLength(lenValue).\n            const len = toLength(items.length)\n\n            // 13. If IsConstructor(C) is true, then\n            // 13. a. Let A be the result of calling the [[Construct]] internal method\n            // of C with an argument list containing the single item len.\n            // 14. a. Else, Let A be ArrayCreate(len).\n            let A = isCallable(C) ? Object(new C(len)) : new Array(len)\n\n            // 16. Let k be 0.\n            let k = 0\n            // 17. Repeat, while k < len… (also steps a - h)\n            let kValue\n            while (k < len) {\n                kValue = items[k]\n                if (mapFn) {\n                    A[k] = typeof T === \"undefined\" ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\n                } else {\n                    A[k] = kValue\n                }\n                k += 1\n            }\n            // 18. Let putStatus be Put(A, \"length\", len, true).\n            A.length = len\n            // 20. Return A.\n            return A\n        }\n    })()\n}\n\nif (!Array.isArray) {\n    Array.isArray = arg => Object.prototype.toString.call(arg) === \"[object Array]\"\n}\n\n// Static\nexport const from = Array.from\nexport const isArray = Array.isArray\n\n// Instance\nexport const arrayIncludes = (array, value) => array.indexOf(value) !== -1\n","/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function(target, varArgs) {\n        // .length of function is 2\n\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n\n        let to = Object(target);\n\n        for (let index = 1; index < arguments.length; index++) {\n            const nextSource = arguments[index];\n\n            if (nextSource != null) {\n                // Skip over if undefined or null\n                for (const nextKey in nextSource) {\n                    // Avoid bugs when hasOwnProperty is shadowed\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n        }\n        return to;\n    };\n}\n\nexport const assign = Object.assign;\nexport const getOwnPropertyNames = Object.getOwnPropertyNames;\nexport const keys = Object.keys;\nexport const defineProperties = Object.defineProperties;\nexport const defineProperty = Object.defineProperty;\nexport const freeze = Object.freeze;\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols;\nexport const getPrototypeOf = Object.getPrototypeOf;\nexport const create = Object.create;\nexport const isFrozen = Object.isFrozen;\nexport const is = Object.is;\n\nexport function readonlyDescriptor() {\n    return { enumerable: true, configurable: false, writable: false };\n}\n","<template>\n    <div v-if=\"localShow\"\n         :class=\"classObject\"\n         role=\"alert\"\n         aria-live=\"polite\"\n         aria-atomic=\"true\"\n    >\n        <button type=\"button\"\n                class=\"close\"\n                data-dismiss=\"alert\"\n                :aria-label=\"dismissLabel\"\n                v-if=\"localDismissible\"\n                @click.stop.prevent=\"dismiss\"\n        >\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    export default {\n        data() {\n            return {\n                countDownTimerId: null,\n                dismissed: false,\n                localDismissible: this.dismissible\n            };\n        },\n        created() {\n            if (this.state) {\n                warn('<b-alert> \"state\" property is deprecated, please use \"variant\" property instead.');\n            }\n        },\n        computed: {\n            classObject() {\n                return ['alert', this.alertVariant, this.localDismissible ? 'alert-dismissible' : ''];\n            },\n            alertVariant() {\n                const variant = this.state || this.variant || 'info';\n                return `alert-${variant}`;\n            },\n            localShow() {\n                return !this.dismissed && (this.countDownTimerId || this.show);\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'info'\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            dismissible: {\n                type: Boolean,\n                default: false\n            },\n            dismissLabel: {\n                type: String,\n                default: 'Close'\n            },\n            show: {\n                type: [Boolean, Number],\n                default: false\n            }\n        },\n        watch: {\n            show() {\n                this.showChanged();\n            }\n        },\n        mounted() {\n            this.showChanged();\n        },\n        methods: {\n            dismiss() {\n                this.dismissed = true;\n                this.$emit('dismissed');\n                this.clearCounter();\n            },\n            clearCounter() {\n                if (this.countDownTimerId) {\n                    clearInterval(this.countDownTimerId);\n                }\n            },\n            showChanged() {\n                // Reset dismiss status\n                this.dismissed = false;\n\n                // No timer for boolean values\n                if (this.show === true || this.show === false || this.show === null || this.show === 0) {\n                    this.localDismissible = this.dismissible;\n                    return;\n                }\n\n                // Hide dismiss button for auto-dismissing\n                this.localDismissible = false;\n\n                let dismissCountDown = this.show;\n                this.$emit('dismiss-count-down', dismissCountDown);\n\n                // Start counter\n                this.clearCounter();\n                this.countDownTimerId = setInterval(() => {\n                    if (dismissCountDown < 2) {\n                        return this.dismiss();\n                    }\n                    dismissCountDown--;\n                    this.$emit('dismiss-count-down', dismissCountDown);\n                }, 1000);\n            }\n        }\n    };\n</script>\n","export default {\n    mounted() {\n        if (typeof document !== 'undefined') {\n            document.documentElement.addEventListener('click', this._clickOutListener);\n        }\n    },\n    destroyed() {\n        if (typeof document !== 'undefined') {\n            document.removeEventListener('click', this._clickOutListener);\n        }\n    },\n    methods: {\n        _clickOutListener(e) {\n            if (!this.$el.contains(e.target)) {\n                if (this.clickOutListener) {\n                    this.clickOutListener();\n                }\n            }\n        }\n    }\n};\n","import { isArray } from '../utils/array';\n/**\n * Issue #569: collapse::toggle::state triggered too many times\n * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569\n */\n\nconst BVRL = '__BV_root_listeners__';\n\nexport default {\n    methods: {\n        /**\n         * Safely register event listeners on the root Vue node.\n         * While Vue automatically removes listeners for individual components,\n         * when a component registers a listener on root and is destroyed,\n         * this orphans a callback because the node is gone,\n         * but the root does not clear the callback.\n         *\n         * This adds a non-reactive prop to a vm on the fly\n         * in order to avoid object observation and its performance costs\n         * to something that needs no reactivity.\n         * It should be highly unlikely there are any naming collisions.\n         * @param {string} event\n         * @param {function} callback\n         * @chainable\n         */\n        listenOnRoot(event, callback) {\n            if (!this[BVRL] || !isArray(this[BVRL])) {\n                this[BVRL] = [];\n            }\n            this[BVRL].push({ event, callback });\n            this.$root.$on(event, callback);\n            return this;\n        },\n\n        /**\n         * Convenience method for calling vm.$emit on vm.$root.\n         * @param {string} event\n         * @param {*} args\n         * @chainable\n         */\n        emitOnRoot(event, ...args) {\n            this.$root.$emit(event, ...args);\n            return this;\n        }\n    },\n\n    destroyed() {\n        if (this[BVRL] && isArray(this[BVRL])) {\n            while (this[BVRL].length > 0) {\n                // shift to process in order\n                const { event, callback } = this[BVRL].shift();\n                this.$root.$off(event, callback);\n            }\n        }\n    }\n}\n","export default {\n    props: {\n        name: {\n            type: String\n        },\n        id: {\n            type: String\n        },\n        disabled: {\n            type: Boolean\n        },\n        required: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n","export default {\n    computed: {\n        checkboxClass() {\n            return {\n                'custom-control': this.custom,\n                'form-check-inline': this.inline\n            };\n        }\n    }\n};\n\n","export default {\n    computed: {\n        custom() {\n            return !this.plain;\n        }\n    },\n    props: {\n        plain: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n","import { isArray } from '../utils/array';\nimport { keys } from '../utils/object';\n\nexport default {\n    computed: {\n        formOptions() {\n            let options = this.options || {};\n\n            if (isArray(options)) {\n                // Normalize flat arrays to object Array\n                options = options.map(option => {\n                    if (typeof option === 'object') {\n                        return {\n                            value: option[this.valueField],\n                            text: option[this.textField],\n                            disabled: option.disabled || false\n                        };\n                    }\n\n                    return {text: String(option), value: option || {}};\n                });\n            } else {\n                // Normalize Objects keys to Array\n                options = keys(options).map(value => {\n                    let option = options[value] || {};\n\n                    // Resolve text\n                    if (typeof option !== 'object') {\n                        option = {text: String(option)};\n                    }\n\n                    // Resolve value (uses key as value if not provided)\n                    option.value = option[this.valueField] || value;\n\n                    // Resolve text field (uses key as value if not provided)\n                    option.text = option[this.textField] || value;\n\n                    return option;\n                });\n            }\n\n            return options;\n        },\n        selectedValue() {\n            const formOptions = this.formOptions;\n            if (this.returnObject && !this.multiple) {\n                for (let i = 0; i < formOptions.length; i++) {\n                    if (formOptions[i].value === this.localValue) {\n                        return formOptions[i];\n                    }\n                }\n                return null;\n            } else {\n                return this.localValue;\n            }\n        }\n    },\n    props: {\n        valueField: {\n            type: String,\n            default: 'value'\n        },\n        textField: {\n            type: String,\n            default: 'text'\n        }\n    },\n    watch: {\n        localValue(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.$emit('input', this.selectedValue);\n        },\n        value(value, old_value) {\n            if (value === old_value) {\n                return;\n            }\n            this.localValue = value;\n        }\n    }\n};\n","import Tether from 'tether';\nimport listenOnRootMixin from './listen-on-root'\nimport { isArray, arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\n\n// Controls which events are mapped for each named trigger, and the expected popover behavior for each.\nconst TRIGGER_LISTENERS = {\n    click: {click: 'toggle'},\n    hover: {mouseenter: 'show', mouseleave: 'hide'},\n    focus: {focus: 'show', blur: 'hide'}\n};\nconst PLACEMENT_PARAMS = {\n    top: 'bottom center',\n    bottom: 'top center',\n    left: 'middle right',\n    right: 'middle left'\n};\nconst TETHER_CLASS_PREFIX = 'bs-tether';\nconst TETHER_CLASSES = {\n    element: false,\n    enabled: false\n};\nconst TRANSITION_DURATION = 150;\n\nexport default {\n    mixins: [listenOnRootMixin],\n    props: {\n        constraints: {\n            type: Array,\n            default() {\n                return [];\n            }\n        },\n        debounce: {\n            type: [Number],\n            default: 300,\n            validator(value) {\n                return value >= 0;\n            }\n        },\n        delay: {\n            type: [Number, Object],\n            default: 0,\n            validator(value) {\n                if (typeof value === 'number') {\n                    return value >= 0;\n                } else if (value !== null && typeof value === 'object') {\n                    return typeof value.show === 'number' &&\n                        typeof value.hide === 'number' &&\n                        value.show >= 0 &&\n                        value.hide >= 0;\n                }\n                return false;\n            }\n        },\n        offset: {\n            type: String,\n            default: '0 0',\n            validator(value) {\n                // Regex test for a pair of units, either 0 exactly, px, or percentage\n                return /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value);\n            }\n        },\n        placement: {\n            type: String,\n            default: 'top',\n            validator: value => arrayIncludes(keys(PLACEMENT_PARAMS), value)\n        },\n        popoverStyle: {\n            type: Object,\n            default: null\n        },\n        show: {\n            type: Boolean,\n            default: null\n        },\n        targetOffset: {\n            type: String,\n            default: '0 0',\n            // Regex test for a pair of units, either 0 exactly, px, or percentage\n            validator: value => /^((0\\s?)|([+-]?[0-9]+(px|%)\\s?)){2}$/.test(value)\n        },\n        triggers: {\n            type: [Boolean, String, Array],\n            default: () => ['click', 'focus'],\n            validator(value) {\n                // Allow falsy value to disable all event triggers (equivalent to 'manual') in Bootstrap 4\n                if (value === false || value === '') {\n                    return true;\n                } else if (typeof value === 'string') {\n                    return keys(TRIGGER_LISTENERS).indexOf(value) !== -1;\n                } else if (isArray(value)) {\n                    const triggerKeys = keys(TRIGGER_LISTENERS);\n                    value.forEach(item => {\n                        if (arrayIncludes(triggerKeys, item)) {\n                            return false;\n                        }\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n    data() {\n        return {\n            triggerState: this.show,\n            classState: this.show,\n            lastEvent: null\n        };\n    },\n    computed: {\n        /**\n         * Arrange event trigger hooks as array for all input types.\n         *\n         * @return Array\n         */\n        normalizedTriggers() {\n            if (this.triggers === false) {\n                return [];\n            } else if (typeof this.triggers === 'string') {\n                return [this.triggers];\n            }\n            return this.triggers;\n        },\n        /**\n         * Class property to be used for Popover rendering\n         *\n         * @return String\n         */\n        popoverAlignment() {\n            return !this.placement || this.placement === `default` ? `popover-top` : `popover-${this.placement}`;\n        },\n        /**\n         * Determine if the Popover should be shown.\n         *\n         * @return Boolean\n         */\n        showState() {\n            return this.show !== false && (this.triggerState || this.show);\n        }\n    },\n    watch: {\n        /**\n         * Refresh Tether display properties\n         */\n        constraints() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Popover event triggers\n         * @param {Array} newTriggers\n         * @param {Array} oldTriggers\n         */\n        normalizedTriggers(newTriggers, oldTriggers) {\n            this.updateListeners(newTriggers, oldTriggers);\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        offset() {\n            this.setOptions();\n        },\n        /**\n         * Refresh Tether display properties\n         */\n        placement() {\n            this.setOptions();\n        },\n        /**\n         * Affect 'show' state in response to status change\n         * @param  {Boolean} val\n         */\n        showState(val) {\n            const delay = this.getDelay(val);\n            clearTimeout(this.$data._timeout);\n            if (delay) {\n                this.$data._timeout = setTimeout(() => this.togglePopover(val), delay);\n            } else {\n                this.togglePopover(val);\n            }\n        }\n    },\n    methods: {\n        /**\n         * Add all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        addListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.addEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Tidy removal of Tether object from the DOM\n         */\n        destroyTether() {\n            if (this.$data._tether && !this.showState) {\n                this.$data._tether.destroy();\n                this.$data._tether = null;\n                const regx = new RegExp('(^|[^-]\\\\b)(' + TETHER_CLASS_PREFIX + '\\\\S*)', 'g');\n                if (this.$data._trigger && this.$data._trigger.className) {\n                    this.$data._trigger.className = this.$data._trigger.className.replace(regx, '');\n                }\n            }\n        },\n        /**\n         * Handle multiple event triggers\n         * @param  {Object} e\n         */\n        eventHandler(e) {\n            // If this event is right after a previous successful event, ignore it (debounce)\n            if (this.normalizedTriggers.length > 1 && this.debounce > 0 && this.lastEvent !== null && e.timeStamp <= this.lastEvent + this.debounce) {\n                return;\n            }\n            // Look up the expected popover action for the event\n            // eslint-disable-next-line guard-for-in\n            for (const trigger in TRIGGER_LISTENERS) {\n                for (const event in TRIGGER_LISTENERS[trigger]) {\n                    if (event === e.type) {\n                        const action = TRIGGER_LISTENERS[trigger][event];\n                        // If the expected event action is the opposite of the current state, allow it\n                        if (action === 'toggle' || (this.triggerState && action === 'hide') || (!this.triggerState && action === 'show')) {\n                            this.triggerState = !this.triggerState;\n                            this.lastEvent = e.timeStamp;\n                        }\n                        return;\n                    }\n                }\n            }\n        },\n        /**\n         * Get the currently applicable popover delay\n         *\n         * @returns Number\n         */\n        getDelay(state) {\n            if (typeof this.delay === 'object') {\n                return state ? this.delay.show : this.delay.hide;\n            }\n            return this.delay;\n        },\n        /**\n         * Tether construct params for each show event.\n         *\n         * @return Object\n         */\n        getTetherOptions() {\n            return {\n                attachment: PLACEMENT_PARAMS[this.placement],\n                element: this.$data._popover,\n                target: this.$data._trigger,\n                classes: TETHER_CLASSES,\n                classPrefix: TETHER_CLASS_PREFIX,\n                offset: this.offset,\n                constraints: this.constraints,\n                targetOffset: this.targetOffset\n            };\n        },\n        /**\n         * Hide popover and fire event\n         */\n        hidePopover() {\n            this.classState = false;\n            clearTimeout(this.$data._timeout);\n            this.$data._timeout = setTimeout(() => {\n                this.$data._popover.style.display = 'none';\n                this.destroyTether();\n            }, TRANSITION_DURATION);\n        },\n        /**\n         * Refresh the Popover position in order to respond to changes\n         */\n        refreshPosition() {\n            if (this.$data._tether) {\n                this.$nextTick(() => {\n                    this.$data._tether.position();\n                });\n            }\n        },\n        /**\n         * Remove all event hooks for the given trigger\n         * @param {String} trigger\n         */\n        removeListener(trigger) {\n            // eslint-disable-next-line guard-for-in\n            for (const item in TRIGGER_LISTENERS[trigger]) {\n                this.$data._trigger.removeEventListener(item, e => this.eventHandler(e));\n            }\n        },\n        /**\n         * Update tether options\n         */\n        setOptions() {\n            if (this.$data._tether) {\n                this.$data._tether.setOptions(this.getTetherOptions());\n            }\n        },\n        /**\n         * Display popover and fire event\n         */\n        showPopover() {\n            clearTimeout(this.$data._timeout);\n            if (!this.$data._tether) {\n                this.$data._tether = new Tether(this.getTetherOptions());\n            }\n            this.$data._popover.style.display = 'block';\n            // Make sure the popup is rendered in the correct location\n            this.refreshPosition();\n            this.$nextTick(() => {\n                this.classState = true;\n            });\n        },\n        /**\n         * Handle Popover show or hide instruction\n         */\n        togglePopover(newShowState) {\n            this.$emit('showChange', newShowState);\n            if (newShowState) {\n                this.showPopover();\n                this.emitOnRoot('shown::popover');\n            } else {\n                this.hidePopover();\n                this.emitOnRoot('hidden::popover');\n            }\n        },\n        /**\n         * Study the 'triggers' component property and apply all selected triggers\n         * @param {Array} triggers\n         * @param {Array} appliedTriggers\n         */\n        updateListeners(triggers, appliedTriggers = []) {\n            const newTriggers = [];\n            const removeTriggers = [];\n            // Look for new events not yet mapped (all of them on first load)\n            triggers.forEach(item => {\n                if (appliedTriggers.indexOf(item) === -1) {\n                    newTriggers.push(item);\n                }\n            });\n            // Disable any removed event triggers\n            appliedTriggers.forEach(item => {\n                if (triggers.indexOf(item) === -1) {\n                    removeTriggers.push(item);\n                }\n            });\n            // Apply trigger mapping changes\n            newTriggers.forEach(item => this.addListener(item));\n            removeTriggers.forEach(item => this.removeListener(item));\n        }\n    },\n    created() {\n        this.listenOnRoot('hide::popover', () => {\n            this.triggerState = false;\n        });\n    },\n    mounted() {\n        // Configure tether\n        this.$data._trigger = this.$refs.trigger.children[0] || this.$refs.trigger;\n        this.$data._popover = this.$refs.popover;\n        this.$data._popover.style.display = 'none';\n        this.$data._tether = new Tether(this.getTetherOptions());\n        this.$data._timeout = 0;\n        // Add listeners for specified triggers and complementary click event\n        this.updateListeners(this.normalizedTriggers);\n        // Display popover if prop is set on load\n        if (this.showState) {\n            this.showPopover();\n        }\n    },\n    updated() {\n        this.refreshPosition();\n    },\n    beforeDestroy() {\n        this.normalizedTriggers.forEach(item => this.removeListener(item));\n        clearTimeout(this.$data._timeout);\n        this.destroyTether();\n    },\n    destroyed() {\n        // Tether is moving the popover element outside of Vue's control and leaking dom nodes\n        if (this.$data._popover.parentElement === document.body) {\n            document.body.removeChild(this.$data._popover);\n        }\n    }\n};\n","<template>\n    <!-- When VueRouter is available -->\n    <a v-if=\"isRouterLink\"\n       is=\"router-link\"\n       :active-class=\"activeClass\"\n       :exact-active-class=\"exactActiveClass\"\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :to=\"to\"\n       :exact=\"exact\"\n       :append=\"append\"\n       :replace=\"replace\"\n       :event=\"event\"\n       :tag=\"componentTag\"\n       :class=\"linkClassObject\"\n       @click.native=\"linkClick\">\n        <slot></slot>\n    </a>\n\n    <!-- Fallback mode -->\n    <a v-else\n       :disabled=\"disabled\"\n       :aria-disabled=\"disabled ? 'true' : 'false'\"\n       :href=\"_href\"\n       :target=\"target || null\"\n       :rel=\"computedRel\"\n       :class=\"linkClassObject\"\n       @click=\"linkClick\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport { linkMixin } from '../mixins';\n\nexport default {\n    mixins: [linkMixin]\n};\n</script>\n","<template>\n    <ol class=\"breadcrumb\">\n        <li v-for=\"normalizedItem in normalizedItems\"\n            :class=\"['breadcrumb-item', normalizedItem.active ? 'active' : null]\"\n            @click=\"onClick(normalizedItem._originalItem)\"\n            role=\"presentation\">\n            <span v-if=\"normalizedItem.active\"\n                  :aria-current=\"ariaCurrent\"\n                  v-html=\"normalizedItem.text\"></span>\n            <b-link v-else\n                    v-bind=\"normalizedItem._linkProps\"\n                    v-html=\"normalizedItem.text\"></b-link>\n        </li>\n        <slot></slot>\n    </ol>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as linkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign, keys } from '../utils/object';\n\nconst bLinkPropKeys = keys(linkProps);\n\nexport default {\n    components: { bLink },\n    computed: {\n        normalizedItems() {\n            let userDefinedActive = false;\n            const originalItemsLength = this.items.length;\n\n            return this.items.map((item, index) => {\n                let normalizedItem = { _originalItem: item };\n                // if no active state is defined,\n                // default to the last item in the array as active\n                const isLast = index === originalItemsLength - 1;\n\n                // nothing defined except the text\n                if (typeof item === 'string') {\n                    assign(normalizedItem, { text: item, link: '#', active: isLast });\n                } else {\n                    assign(normalizedItem, item);\n                }\n\n                // don't default the active state if given a boolean value,\n                // or if a user defined value has already been given\n                if (normalizedItem.active !== true && normalizedItem.active !== false && !userDefinedActive) {\n                    normalizedItem.active = isLast;\n                } else if (normalizedItem.active) {\n                    // here we know we've been given an active value,\n                    // so we won't set a default value\n                    userDefinedActive = true;\n                }\n\n                if (normalizedItem.link) {\n                    // default the link value to bLink's href prop\n                    normalizedItem.href = normalizedItem.link;\n                }\n\n                // stuff all the bLink props into a single place\n                // so we can bind to the component\n                // for dynamic prop proxying\n                normalizedItem._linkProps = keys(normalizedItem).reduce((memo, itemProp) => {\n                    if (arrayIncludes(bLinkPropKeys, itemProp)) {\n                        memo[itemProp] = normalizedItem[itemProp];\n                    }\n\n                    return memo;\n                }, {});\n\n                return normalizedItem;\n            });\n        }\n    },\n    props: {\n        items: {\n            type: Array,\n            default: () => [],\n            required: true\n        },\n        ariaCurrent: {\n            type: String,\n            default: 'location'\n        }\n    },\n    methods: {\n        onClick(item) {\n            this.$emit('click', item);\n        }\n    }\n};\n</script>\n","<template>\n    <button v-bind=\"conditionalLinkProps\"\n            :is=\"componentType\"\n            :class=\"classList\"\n            :data-toggle=\"dataToggle\"\n            :aria-pressed=\"ariaPressed\"\n            :type=\"btnType\"\n            :disabled=\"disabled\"\n            :tabindex=\"tabIndex\"\n            @focusin.native=\"handleFocus\"\n            @focusout.native=\"handleFocus\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href' and 'to' props\n// that we will reconstruct without any defaults\n// so our computed 'componentType' functions properly\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type }\n});\n\nexport default {\n    components: { bLink },\n    computed: {\n        linkProps: computed.linkProps,\n        classList() {\n            return [\n                'btn',\n                this.btnVariant,\n                this.btnSize,\n                this.btnBlock,\n                this.btnDisabled,\n                this.btnPressed\n            ];\n        },\n        componentType() {\n            return (this.href || this.to) ? 'b-link' : 'button';\n        },\n        btnBlock() {\n            return this.block ? 'btn-block' : '';\n        },\n        btnVariant() {\n            return this.variant ? `btn-${this.variant}` : `btn-secondary`;\n        },\n        btnSize() {\n            return this.size ? `btn-${this.size}` : '';\n        },\n        btnDisabled() {\n            return this.disabled ? 'disabled' : '';\n        },\n        btnType() {\n            return (this.href || this.to) ? null : this.type;\n        },\n        isToggle() {\n            return this.pressed === true || this.pressed === false;\n        },\n        btnPressed() {\n            return this.pressed ? 'active' : '';\n        },\n        ariaPressed() {\n            if (this.isToggle) {\n                // If a toggle button, Add aria-pressed state (must be string, not Boolean)\n                return this.pressed ? 'true' : 'false';\n            }\n            // Else remove aria-pressed attribute\n            return null;\n        },\n        dataToggle() {\n            // Toggle button needs the data-toggle=\"button\" attribute for propper styling\n            return this.isToggle ? 'button' : null;\n        },\n        tabIndex() {\n            // Disabled buttons automatically take themselves out of the tab order.\n            // Links do not, so we emulate this behaviour by setting tabindex to -1\n            return (this.disabled && this.componentType !== 'button') ? '-1' : null;\n        },\n        conditionalLinkProps() {\n            // Add conditional props only intended for 'b-link'\n            return this.componentType === 'button' ? {} : this.linkProps;\n        }\n    },\n    // merge our prepared link props with button props\n    props: assign(linkProps, {\n        block: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        variant: {\n            type: String,\n            default: null\n        },\n        type: {\n            type: String,\n            default: 'button'\n        },\n        pressed: {\n            // tri-state syncable prop: true, false or null\n            type: Boolean,\n            default: null\n        }\n    }),\n    methods: {\n        onClick(evt) {\n            if (this.disabled) {\n                evt.stopPropagation();\n                evt.preventDefault();\n            } else {\n                this.$emit('click', evt);\n                if (this.isToggle) {\n                    // Emit .sync notification to parent about pressed prop state changing\n                    this.$emit('update:pressed', !this.pressed);\n                }\n            }\n        },\n        handleFocus(evt) {\n            // When in toggle mode, we need to handle focus styling manualy via a class\n            if (this.isToggle) {\n                const classList = evt.target.classList;\n                if (evt.type === 'focusin') {\n                    classList.add('focus');\n                } else if (evt.type === 'focusout') {\n                    classList.remove('focus');\n                }\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"classObject\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'btn-group',\n                    this.vertical ? 'btn-group-vertical' : '',\n                    this.size ? ('btn-group-' + this.size) : ''\n                ];\n            }\n        },\n        props: {\n            vertical: {\n                type: Boolean,\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div :class=\"classObject\" role=\"group\">\n        <slot name=\"left\">\n            <div v-if=\"left\" class=\"input-group-addon\" v-html=\"left\"></div>\n        </slot>\n\n        <slot></slot>\n\n        <slot name=\"right\">\n            <div v-if=\"right\" class=\"input-group-addon\" v-html=\"right\"></div>\n        </slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'input-group',\n                    this.size ? ('input-group-' + this.size) : '',\n                    this.state ? ('has-' + this.state) : ''\n                ];\n            }\n        },\n        props: {\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            left: {\n                type: String,\n                default: null\n            },\n            right: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-addon\" :id=\"id || null\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"input-group-btn\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card',cardVariant,cardAlign,cardInverse]\">\n        <!-- Card Image Slot-->\n        <slot name=\"img\" ref=\"img\">\n            <img v-if=\"img\" :src=\"img\" :alt=\"imgAlt\" :class=\"['card-img', 'img-fluid']\">\n        </slot>\n\n        <!-- Card Header-->\n        <component v-if=\"header || $slots['header']\"\n                   :is=\"headerTag\"\n                   :class=\"['card-header', headerVariant?('bg-'+headerVariant):'', headerClass]\"\n        >\n            <slot name=\"header\">\n                <div v-html=\"header\"></div>\n            </slot>\n        </component>\n\n        <!--Show custom block when no-block prop is set-->\n        <template v-if=\"noBlock\">\n            <slot></slot>\n        </template>\n\n        <!-- Card Standard Blocks-->\n        <div :class=\"blockClass\" v-else>\n            <h4 v-if=\"title\" :is=\"titleTag\" class=\"card-title\" v-html=\"title\"></h4>\n            <h6 v-if=\"subTitle\" :is=\"subTitleTag\" class=\"card-subtitle mb-2 text-muted\" v-html=\"subTitle\"></h6>\n            <slot></slot>\n        </div>\n\n        <!-- Card Footer-->\n        <component v-if=\"footer || $slots['footer']\"\n                   :is=\"footerTag\"\n                   :class=\"['card-footer', footerVariant?('bg-'+footerVariant):'', footerClass]\"\n        >\n            <slot name=\"footer\">\n                <div v-html=\"footer\"></div>\n            </slot>\n        </component>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            blockClass() {\n                return [\n                    'card-block',\n                    this.overlay ? 'card-img-overlay' : null\n                ];\n            },\n            cardVariant() {\n                return this.variant ? `card-${this.variant}` : null;\n            },\n            cardInverse() {\n                if (this.overlay || this.inverse) {\n                    return 'card-inverse';\n                }\n                // Auto inverse colored cards\n                if (this.inverse === null && this.variant && this.variant.length > 0 &&\n                    this.variant.indexOf('outline') === -1) {\n                    return 'card-inverse';\n                }\n            },\n            cardAlign() {\n                return this.align ? `text-${this.align}` : null;\n            }\n        },\n        props: {\n            align: {\n                type: String,\n                default: null\n            },\n            inverse: {\n                type: Boolean,\n                // It should remain null for auto inverse\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Header\n            header: {\n                type: String,\n                default: null\n            },\n            headerVariant: {\n                type: String,\n                default: null\n            },\n            headerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            headerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Footer\n            footer: {\n                type: String,\n                default: null\n            },\n            footerVariant: {\n                type: String,\n                default: null\n            },\n            footerClass: {\n                type: [String, Array],\n                default: ''\n            },\n            footerTag: {\n                type: String,\n                default: 'div'\n            },\n\n            // Main block\n            title: {\n                type: String,\n                default: null\n            },\n            titleTag: {\n                type: String,\n                default: 'h4'\n            },\n            subTitle: {\n                type: String,\n                default: null\n            },\n            subTitleTag: {\n                type: String,\n                default: 'h6'\n            },\n            noBlock: {\n                type: Boolean,\n                default: false\n            },\n\n            // Image\n            img: {\n                type: String,\n                default: null\n            },\n            imgAlt: {\n                type: String,\n                default: null\n            },\n            overlay: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['card-' + type]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        computed: {\n            type() {\n                if (this.deck) {\n                    return 'deck';\n                }\n\n                if (this.columns) {\n                    return 'columns';\n                }\n\n                return 'group';\n            }\n        },\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            deck: {\n                type: Boolean,\n                default: false\n            },\n            columns: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"carousel-item\"\n         role=\"listitem\"\n         :id=\"id || null\"\n         :style=\"{background,height}\"\n    >\n        <img class=\"d-block img-fluid\" v-if=\"img\" :src=\"img\" :alt=\"imgAlt\">\n        <div :is=\"contentTag\" :class=\"contentClasses\">\n            <h3 v-if=\"caption\" :is=\"captionTag\" v-html=\"caption\"></h3>\n            <p v-if=\"text\" :is=\"textTag\" v-html=\"text\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            id: {\n                type: String\n            },\n            img: {\n                type: String\n            },\n            imgAlt: {\n                type: String\n            },\n            contentVisibleUp: {\n                type: String\n            },\n            contentTag: {\n                type: String,\n                default: \"div\"\n            },\n            caption: {\n                type: String\n            },\n            captionTag: {\n                type: String,\n                default: \"h3\"\n            },\n            text: {\n                type: String\n            },\n            textTag: {\n                type: String,\n                default: \"p\"\n            },\n            background: {\n                type: String\n            },\n            height: {\n                type: String\n            }\n        },\n        computed: {\n            contentClasses() {\n                return [\n                    'carousel-caption',\n                    this.contentVisibleUp ? 'd-none' : '',\n                    this.contentVisibleUp ? `d-${this.contentVisibleUp}-block` : ''\n                ];\n            }\n        }\n    };\n</script>\n","<template>\n    <transition\n            enter-class=\"\"\n            enter-active-class=\"collapsing\"\n            enter-to-class=\"\"\n            leave-class=\"\"\n            leave-active-class=\"collapsing\"\n            leave-to-class=\"\"\n            @enter=\"onEnter\"\n            @after-enter=\"onAfterEnter\"\n            @leave=\"onLeave\"\n            @after-leave=\"onAfterLeave\"\n    >\n        <div v-show=\"show\"\n             :id=\"id || null\"\n             :class=\"classObject\"\n             @click=\"clickHandler\"\n        ><slot></slot></div>\n    </transition>\n</template>\n\n<script>\n    import { listenOnRootMixin } from '../mixins';\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                show: this.visible,\n                transitioning: false\n            };\n        },\n        model: {\n            prop: 'visible',\n            event: 'input'\n        },\n        props: {\n            id: {\n                type: String,\n                required: true\n            },\n            isNav: {\n                type: Boolean,\n                default: false\n            },\n            accordion: {\n                type: String,\n                default: null\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            visible(newVal) {\n                if (newVal !== this.show) {\n                    this.show = newVal;\n                }\n            },\n            show(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.emitState();\n                }\n            }\n        },\n        computed: {\n            classObject() {\n                return {\n                    'navbar-collapse': this.isNav,\n                    'collapse': !this.transitioning,\n                    'show': this.show && !this.transitioning\n                };\n            }\n        },\n        methods: {\n            toggle() {\n                this.show = !this.show;\n            },\n            onEnter(el) {\n                el.style.height = 0;\n                this.reflow(el);\n                el.style.height = el.scrollHeight + 'px';\n                this.transitioning = true;\n                this.$emit('show');\n            },\n            onAfterEnter(el) {\n                el.style.height = null;\n                this.transitioning = false;\n                this.$emit('shown');\n            },\n            onLeave(el) {\n                el.style.height = 'auto';\n                el.style.display = 'block';\n                el.style.height = el.getBoundingClientRect().height + 'px';\n                this.reflow(el);\n                this.transitioning = true;\n                el.style.height = 0;\n                this.$emit('hide');\n            },\n            onAfterLeave(el) {\n                el.style.height = null;\n                this.transitioning = false;\n                this.$emit('hidden');\n            },\n            reflow(el) {\n                /* eslint-disable no-unused-expressions */\n                el.offsetHeight; // Force repaint\n            },\n            emitState() {\n                this.$emit('input', this.show);\n                this.$root.$emit('collapse::toggle::state', this.id, this.show);\n                if (this.accordion && this.show) {\n                    // Tell the other collapses in this accordion to close\n                    this.$root.$emit('accordion::toggle', this.id, this.accordion);\n                }\n            },\n            clickHandler(evt) {\n                // If we are in a nav/navbar, close the collapse when non-disabled link clicked\n                const el = evt.target;\n                if (!this.isNav || !el || getComputedStyle(this.$el).display !== 'block') {\n                    return;\n                }\n                if (el.classList.contains('nav-link') || el.classList.contains('dropdown-item')) {\n                    this.show = false;\n                }\n            },\n            handleToggleEvt(target) {\n                if (target !== this.id) {\n                    return;\n                }\n                this.toggle();\n            },\n            handleAccordionEvt(openedId, accordion) {\n                if (!this.accordion || accordion !== this.accordion) {\n                    return;\n                }\n                if (openedId === this.id) {\n                    // Open this collapse if not shown\n                    if (!this.show) {\n                        this.toggle();\n                    }\n                } else {\n                    // Close this collapse if shown\n                    if (this.show) {\n                        this.toggle();\n                    }\n                }\n            },\n            handleResize() {\n                // Handler for orientation/resize to set collapsed state in nav/navbar\n                this.show = (getComputedStyle(this.$el).display === 'block');\n            },\n        },\n        created() {\n            this.listenOnRoot('collapse::toggle', this.handleToggleEvt);\n            this.listenOnRoot('accordion::toggle', this.handleAccordionEvt);\n        },\n        mounted() {\n            if (this.isNav && typeof document !== 'undefined') {\n                // Set up handlers\n                window.addEventListener('resize', this.handleResize, false);\n                window.addEventListener('orientationchange', this.handleResize, false);\n                this.handleResize();\n            }\n            this.emitState();\n        },\n        destroyed() {\n            if (this.isNav && typeof document !== 'undefined') {\n                window.removeEventListener('resize', this.handleResize, false);\n                window.removeEventListener('orientationchange', this.handleResize, false);\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :id=\"id || null\" :class=\"dropdownClasses\">\n\n        <b-button :class=\"{'dropdown-toggle': !split}\"\n                  ref=\"button\"\n                  :id=\"id ? (id + '__BV_button_') : null\"\n                  :aria-haspopup=\"split ? null : 'true'\"\n                  :aria-expanded=\"split ? null : (visible ? 'true' : 'false')\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"click\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\">{{text}}</slot></slot>\n        </b-button>\n\n        <b-button :class=\"['dropdown-toggle','dropdown-toggle-split']\"\n                  v-if=\"split\"\n                  ref=\"toggle\"\n                  :id=\"id ? (id + '__BV_toggle_') : null\"\n                  :aria-haspopup=\"split ? 'true' : null\"\n                  :aria-expanded=\"split ? (visible ? 'true' : 'false') : null\"\n                  :variant=\"variant\"\n                  :size=\"size\"\n                  :disabled=\"disabled\"\n                  @click.stop.prevent=\"toggle\"\n        >\n            <span class=\"sr-only\">{{toggleText}}</span>\n        </b-button>\n\n        <div :class=\"menuClasses\"\n             ref=\"menu\"\n             role=\"menu\"\n             :aria-labelledby=\"id ? (id + (split ? '__BV_toggle_' : '__BV_button_')) : null\"\n             @mouseover=\"onMouseOver\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n    import bButton from './button.vue';\n\n    export default {\n        mixins: [dropdownMixin],\n        components: {bButton},\n        props: {\n            split: {\n                type: Boolean,\n                default: false\n            },\n            toggleText: {\n                type: String,\n                default: 'Toggle Dropdown'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            variant: {\n                type: String,\n                default: null\n            }\n        },\n        computed: {\n            dropdownClasses() {\n                return [\n                    'b-dropdown',\n                    'dropdown',\n                    'btn-group',\n                    this.dropup ? 'dropup' : '',\n                    this.visible ? 'show' : ''\n                ];\n            },\n            menuClasses() {\n                return [\n                    'dropdown-menu',\n                    this.right ? 'dropdown-menu-right' : '',\n                    this.visible ? 'show' : ''\n                ];\n            }\n        }\n    };\n</script>\n\n<style>\n.b-dropdown .dropdown-item:focus:not(.active),\n.b-dropdown .dropdown-item:hover:not(.active) {\n    /* @See https://github.com/twbs/bootstrap/issues/23329 */\n    box-shadow: inset 0px 0px 400px 110px rgba(0, 0, 0, .09);\n}\n\n.b-dropdown .dropdown-item:active {\n    box-shadow: initial;\n}\n</style>\n","<template>\n    <b-link class=\"dropdown-item\"\n            role=\"menuitem\"\n            v-bind=\"linkProps\"\n            @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </b-link>\n</template>\n\n<script>\nimport { props, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <button class=\"dropdown-item\"\n            type=\"button\"\n            role=\"menuitem\"\n            :disabled=\"disabled\"\n            @click=\"onClick\">\n        <slot></slot>\n    </button>\n</template>\n\n<script>\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        onClick(e) {\n            this.$root.$emit(\"clicked::link\", this);\n            this.$emit(\"click\", e);\n        },\n    }\n};\n</script>\n","<template>\n    <div role=\"separator\" class=\"dropdown-divider\"></div>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <component :is=\"tag\" class=\"dropdown-header\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'h6'\n            }\n        }\n    };\n</script>\n","<template>\n    <div class=\"dropdown-select\" :class=\"{open: show, dropdown: !dropup, dropup: dropup}\">\n        <button\n                :id=\"id\"\n                :class=\"['btn','dropdown',dropdownToggle,btnVariant,btnSize]\"\n                role=\"button\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"show\"\n                @click.prevent=\"toggle($event)\"\n                :disabled=\"disabled\">\n            <span class=\"checked-items\" v-html=\"displayItem\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" :class=\"{'dropdown-menu-right' : position == 'right'}\" aria-labelledby=\"dLabel\">\n            <li v-for=\"item in list\">\n                <button class=\"dropdown-item\" :click.stop.prevent=\"select(item)\">{{item.text}}</button>\n            </li>\n        </ul>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                show: false,\n                selected: false\n            };\n        },\n        computed: {\n            btnVariant() {\n                return !this.variant || this.variant === `default` ? `btn-secondary` : `btn-${this.variant}`;\n            },\n            btnSize() {\n                return !this.size || this.size === `default` ? `` : `btn-${this.size}`;\n            },\n            dropdownToggle() {\n                return this.caret ? 'dropdown-toggle' : '';\n            },\n            displayItem() {\n                // If zero show default message\n                if ((this.returnObject && this.model && !this.model.text) || (!this.returnObject && this.model && this.model.length === 0) || this.forceDefault) {\n                    return this.defaultText;\n                }\n\n                // Show selected item\n                if (this.returnObject && this.model && this.model.text) {\n                    return this.model.text;\n                }\n\n                // Show text that coresponds to the model value\n                if (!this.returnObject && this.model) {\n                    let result = this.model || '';\n                    this.list.forEach(function (item) {\n                        if (item.value === this.model) {\n                            result = item.text;\n                        }\n                    });\n                    return result;\n                }\n\n                return '';\n            }\n        },\n        props: {\n            id: {\n                type: String\n            },\n            model: {\n                required: false\n            },\n            list: {\n                type: Array,\n                default: [],\n                required: true\n            },\n            caret: {\n                type: Boolean,\n                default: true\n            },\n            position: {\n                type: String,\n                default: 'left'\n            },\n            size: {\n                type: String,\n                default: ''\n            },\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            defaultText: {\n                type: String,\n                default: 'Plase select one'\n            },\n            forceDefault: {\n                type: Boolean,\n                default: false\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            },\n            dropup: {\n                type: Boolean,\n                default: false\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            }\n        },\n        methods: {\n            toggle(e) {\n                // Hide an alert\n                this.show = !this.show;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                if (this.show) {\n                    this.$root.$emit('shown:dropdown', this.id);\n                    e.stopPropagation();\n                } else {\n                    this.$root.$emit('hidden::dropdown', this.id);\n                }\n            },\n            select(item) {\n                // We need to set empty model to make model watchers react to it\n                if (this.returnObject) {\n                    this.model = item;\n                } else {\n                    this.model = item.value;\n                }\n                this.show = false;\n                // Dispatch an event from the current vm that propagates all the way up to its $root\n                this.$root.$emit('selected::dropdown', this.id, this.model);\n            }\n        },\n        created() {\n            const hub = this.$root;\n            hub.$on('hide::dropdown', function () {\n                this.show = false;\n            });\n        }\n    };\n</script>\n","<template>\n    <form :class=\"classObject\" @submit=\"$emit('submit',$event)\">\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nexport default {\n    computed: {\n        classObject() {\n            return [\n                this.inline ? 'form-inline' : ''\n            ];\n        }\n    },\n    props: {\n        inline: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <div :class=\"['form-group','row',inputState]\"\n         :id=\"id || null\"\n         role=\"group\"\n         :aria-describedby=\"describedBy\"\n    >\n        <label v-if=\"label || $slots['label']\"\n               :for=\"target\"\n               :id=\"labelId\"\n               :class=\"[labelSrOnly ? 'sr-only' : 'col-form-label',labelLayout,labelAlignClass]\"\n        >\n            <slot name=\"label\"><span v-html=\"label\"></span></slot>\n        </label>\n        <div :class=\"inputLayout\" ref=\"content\">\n            <slot></slot>\n            <div v-if=\"feedback || $slots['feedback']\"\n                 class=\"form-text form-control-feedback\"\n                 :id=\"feedbackId\"\n                 role=\"alert\"\n                 aria-live=\"assertive\"\n                 aria-atomic=\"true\"\n            >\n                <slot name=\"feedback\"><span v-html=\"feedback\"></span></slot>\n            </div>\n            <small v-if=\"description || $slots['description']\"\n                   class=\"form-text text-muted\"\n                   :id=\"descriptionId\"\n            >\n                <slot name=\"description\"><span v-html=\"description\"></span></slot>\n            </small>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {warn} from '../utils';\n\n    const INPUT_SELECTOR = [\n        '[role=\"radiogroup\"]',\n        'input',\n        'select',\n        'textarea',\n        '.form-control',\n        '.form-control-static',\n        '.dropdown',\n        '.dropup'\n    ].join(',');\n\n    export default {\n        data() {\n            return {\n                target: null\n            };\n        },\n        computed: {\n            labelId() {\n                return (this.id && this.label) ? (this.id + '__BV_label_') : null;\n            },\n            descriptionId() {\n                return (this.id && this.description) ? (this.id + '__BV_description_') : null;\n            },\n            feedbackId() {\n                return (this.id && this.feedback) ? (this.id + '__BV_feedback_') : null;\n            },\n            describedBy() {\n                if (this.id && (this.label || this.feedback || this.description)) {\n                    return [\n                        this.labelId,\n                        this.descriptionId,\n                        this.feedbackId\n                    ].filter(i => i).join(' ');\n                }\n                return null;\n            },\n            inputState() {\n                return this.state ? `has-${this.state}` : '';\n            },\n            computedLabelCols() {\n                if (this.labelSize) {\n                    warn('b-form-fieldset: prop label-size has been deprecated. Use label-cols instead');\n                    return this.labelSize;\n                }\n                return this.labelCols;\n            },\n            labelLayout() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.horizontal ? ('col-sm-' + this.computedLabelCols) : 'col-12';\n            },\n            labelAlignClass() {\n                if (this.labelSrOnly) {\n                    return null;\n                }\n                return this.labelTextAlign ? `text-${this.labelTextAlign}` : null;\n            },\n            inputLayout() {\n                return this.horizontal ? ('col-sm-' + (12 - this.computedLabelCols)) : 'col-12';\n            }\n        },\n        methods: {\n            updateTarget() {\n                if (this.labelFor) {\n                    // User supplied for target\n                    return this.labelFor;\n                }\n                // Else find first input with ID\n                const content = this.$refs.content;\n                if (!content) {\n                    return null;\n                }\n                const input = content.querySelector(this.inputSelector);\n                this.target = (input && input.id) ? input.id : null;\n            }\n        },\n        mounted() {\n            this.updateTarget();\n        },\n        updated() {\n            this.updateTarget();\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            labelFor: {\n                type: String,\n                default() {\n                    if (this && this.for) {\n                        // Deprecate prop for\n                        warn(\"b-form-fieldet: prop 'for' has been deprecated. Use 'label-for' instead\");\n                        return this.for;\n                    }\n                    return null;\n                }\n            },\n            for: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            horizontal: {\n                type: Boolean,\n                default: false\n            },\n            labelCols: {\n                type: Number,\n                default: 3,\n                validator(value) {\n                    if (value >= 1 && value <= 11) {\n                        return true;\n                    }\n                    warn('b-form-fieldset: label-cols must be a value between 1 and 11');\n                    return false;\n                }\n            },\n            labelSize: {\n                type: Number\n            },\n            labelTextAlign: {\n                type: String,\n                default: null\n            },\n            label: {\n                type: String,\n                default: null\n            },\n            labelSrOnly: {\n                type: Boolean,\n                default: false\n            },\n            description: {\n                type: String,\n                default: null\n            },\n            feedback: {\n                type: String,\n                default: null\n            },\n            inputSelector: {\n                type: String,\n                default: INPUT_SELECTOR\n            }\n        }\n    };\n</script>\n","<template>\n    <label :class=\"button ? btnLabelClasses : labelClasses\"\n           :aria-pressed=\"button ? (isChecked ? 'true' : 'false') : null\"\n    >\n        <input type=\"checkbox\"\n               :id=\"id || null\"\n               :name=\"name\"\n               :value=\"value\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               ref=\"check\"\n               autocomplete=\"off\"\n               :aria-required=\"required ? 'true' : null\"\n               :class=\"(custom && !button ) ? 'custom-control-input' : null\"\n               :checked=\"isChecked\"\n               @focus=\"handleFocus\"\n               @blur=\"handleFocus\"\n               @change=\"handleChange\">\n        <span v-if=\"custom && !button\"\n              class=\"custom-control-indicator\"\n              aria-hidden=\"true\"\n        ></span>\n        <span :class=\"(custom && !button) ? 'custom-control-description' : null\">\n            <slot></slot>\n        </span>\n    </label>\n</template>\n\n<script>\nimport { formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\nimport { arrayIncludes, isArray } from '../utils/array';\n\nexport default {\n    mixins: [formMixin, formCustomMixin, formCheckBoxMixin],\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        value: {\n            default: true\n        },\n        uncheckedValue: {\n            default: false\n        },\n        checked: {\n            default: true\n        },\n        indeterminate: {\n            type: Boolean,\n            default: false,\n        },\n        size: {\n            type: String,\n            default: null\n        },\n        button: {\n            type: Boolean,\n            default: false,\n        },\n        buttonVariant: {\n            type: String,\n            default: 'secondary',\n        }\n    },\n    computed: {\n        labelClasses() {\n            return [\n                this.size ? `form-control-${this.size}` : '',\n                this.custom ? 'custom-checkbox' : '',\n                this.checkboxClass\n            ];\n        },\n        btnLabelClasses() {\n            return [\n                'btn',\n                `btn-${this.buttonVariant}`,\n                this.size ? `btn-${this.size}` : '',\n                this.isChecked ? 'active' : '',\n                this.disabled ? 'disabled' : ''\n            ];\n        },\n        isChecked() {\n            if (isArray(this.checked)) {\n                return arrayIncludes(this.checked, this.value);\n            } else {\n                return this.checked === this.value;\n            }\n        }\n    },\n    watch: {\n        indeterminate(newVal, oldVal) {\n            this.setIndeterminate(newVal);\n        }\n    },\n    methods: {\n        handleChange({ target: { checked } }) {\n            if (isArray(this.checked)) {\n                if (this.isChecked) {\n                    this.$emit('change', this.checked.filter(x => x !== this.value));\n                } else {\n                    this.$emit('change', [...this.checked, this.value]);\n                }\n            } else {\n                this.$emit('change', checked ? this.value : this.uncheckedValue)\n            }\n            this.$emit('update:indeterminate', this.$refs.check.indeterminate);\n        },\n        setIndeterminate(state) {\n            this.$refs.check.indeterminate = state;\n            // Emit update event to prop\n            this.$emit('update:indeterminate', this.$refs.check.indeterminate);\n        },\n        handleFocus(evt) {\n            // Add or remove 'focus' class on label in button mode\n            if (this.button && evt.target && evt.target.parentElement) {\n                const label = evt.target.parentElement;\n                if (evt.type === 'focus') {\n                    label.classList.add('focus');\n                } else if (evt.type === 'blur') {\n                    label.classList.remove('focus');\n                }\n            }\n        }\n    },\n    mounted() {\n        // Set initial indeterminate state\n        this.setIndeterminate(this.indeterminate);\n    }\n};\n\n</script>\n","<template>\n    <div :id=\"id || null\"\n         :class=\"buttons ? btnGroupClasses : radioGroupClasses\"\n         role=\"radiogroup\"\n         :data-toggle=\"buttons ? 'buttons' : null\"\n         :aria-required=\"required ? 'true' : null\"\n         :aria-invalid=\"invalid ? 'true' : null\"\n    >\n        <label v-for=\"(option, idx) in formOptions\"\n               :class=\"buttons ? btnLabelClasses(option, idx) : labelClasses\"\n               :key=\"idx\"\n               :aria-pressed=\"buttons ? (option.value === localValue ? 'true' : 'false') : null\"\n        >\n            <input :id=\"id ? (id + '__BV_radio_' + idx) : null\"\n                   :class=\"(custom && !buttons) ? 'custom-control-input' : null\"\n                   ref=\"inputs\"\n                   type=\"radio\"\n                   autocomplete=\"off\"\n                   v-model=\"localValue\"\n                   :value=\"option.value\"\n                   :name=\"name\"\n                   :required=\"name && required\"\n                   :disabled=\"option.disabled || disabled\"\n                   @focus=\"handleFocus\"\n                   @blur=\"handleFocus\"\n                   @change=\"$emit('change', returnObject ? option : option.value)\"\n            >\n            <span v-if=\"custom && !buttons\" class=\"custom-control-indicator\" aria-hidden=\"true\"></span>\n            <span :class=\"(custom && !buttons) ? 'custom-control-description' : null\" v-html=\"option.text\"></span>\n        </label>\n    </div>\n</template>\n\n<script>\n    import { formOptionsMixin, formMixin, formCustomMixin, formCheckBoxMixin } from '../mixins';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formCheckBoxMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.value\n            };\n        },\n        props: {\n            value: {},\n            options: {\n                type: [Array, Object],\n                default: null,\n                required: true\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            stacked: {\n                type: Boolean,\n                default: false\n            },\n            buttons: {\n                // Render as button style\n                type: Boolean,\n                default: false\n            },\n            buttonVariant: {\n                // Only applicable when rendered with button style\n                type: String,\n                default: 'secondary'\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        },\n        computed: {\n            radioGroupClasses() {\n                return [\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `has-${this.state}` : '',\n                    this.stacked ? 'custom-controls-stacked' : ''\n               ];\n            },\n            btnGroupClasses() {\n                return [\n                    'btn-group',\n                    this.size ? `btn-group-${this.size}` : null,\n                    this.stacked ? 'btn-group-vertical' : ''\n                 ];\n            },\n            labelClasses() {\n                return [\n                    this.checkboxClass,\n                    this.custom ? 'custom-radio' : null\n                ];\n            },\n            inline() {\n                return !this.stacked;\n            }\n        },\n        methods: {\n            btnLabelClasses(option, idx) {\n                return [\n                    'btn',\n                    `btn-${this.buttonVariant}`,\n                    (option.disabled || this.disabled) ? 'disabled' : '',\n                    option.value === this.localValue ? 'active' : null,\n                    // Fix staking issue (remove space between buttons)\n                    (this.stacked && idx === this.formOptions.length - 1) ? '' : 'mb-0'\n                ];\n            },\n            handleFocus(evt) {\n                // When in buttons mode, we need to add 'focus' class to label when radio focused\n                if (this.buttons && evt.target && evt.target.parentElement) {\n                    const label = evt.target.parentElement;\n                    if (evt.type ==='focus') {\n                        label.classList.add('focus');\n                    } else if (evt.type ==='blur') {\n                        label.classList.remove('focus');\n                    }\n                }\n            }\n        }\n    };\n</script>\n","<template>\n    <p :id=\"id || null\"\n       :class=\"inputClass\"\n       v-html=\"staticValue\"\n    ></p>\n</template>\n\n<script>\n    export default {\n        computed: {\n            staticValue() {\n                const val = this.value;\n                return (val === '' || val === null) ? '&nbsp;' : val;\n            },\n            inputClass() {\n                return [\n                    'form-control-static',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: null\n            },\n            value: {\n                default: null\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <b-form-input-static v-if=\"static\"\n                         :id=\"id || null\"\n                         :value=\"value\"\n                         :size=\"size\"\n                         :state=\"state\"\n    ></b-form-input-static>\n    <textarea v-else-if=\"isTextArea\"\n              ref=\"input\"\n              :name=\"name\"\n              :value=\"value\"\n              :id=\"id || null\"\n              :disabled=\"disabled\"\n              :required=\"required\"\n              :autocomplete=\"autocomplete || null\"\n              :aria-required=\"required ? 'true' : null\"\n              :aria-invalid=\"ariaInvalid\"\n              :readonly=\"readonly\"\n              :class=\"inputClass\"\n              :rows=\"rows || rowsCount\"\n              :placeholder=\"placeholder\"\n              @input=\"onInput($event.target.value, $event.target)\"\n              @change=\"onChange($event.target.value, $event.target)\"\n              @keyup=\"onKeyUp($event)\"\n              @focus=\"$emit('focus')\"\n              @blur=\"$emit('blur')\"\n    ></textarea>\n    <input v-else\n           ref=\"input\"\n           :name=\"name\"\n           :value=\"value\"\n           :type=\"type\"\n           :id=\"id || null\"\n           :disabled=\"disabled\"\n           :required=\"required\"\n           :autocomplete=\"autocomplete || null\"\n           :aria-required=\"required ? 'true' : null\"\n           :aria-invalid=\"ariaInvalid\"\n           :readonly=\"readonly\"\n           :class=\"inputClass\"\n           :placeholder=\"placeholder\"\n           @input=\"onInput($event.target.value, $event.target)\"\n           @change=\"onChange($event.target.value, $event.target)\"\n           @keyup=\"onKeyUp($event)\"\n           @focus=\"$emit('focus')\"\n           @blur=\"$emit('blur')\"\n    >\n</template>\n\n<script>\n    import {formMixin} from '../mixins';\n    import bFormInputStatic from './form-input-static.vue';\n\n    export default {\n        mixins: [formMixin],\n        components: {bFormInputStatic},\n        computed: {\n            isTextArea () {\n                return this.textarea || this.type === 'textarea';\n            },\n            rowsCount () {\n                return (this.value || '').toString().split('\\n').length;\n            },\n            inputClass () {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    this.state ? `form-control-${this.state}` : null\n                ];\n            },\n            ariaInvalid () {\n                if (this.invalid === false) {\n                    return null;\n                }\n                if (this.invalid === true) {\n                    return 'true';\n                }\n                return this.invalid;\n            }\n        },\n        watch:{\n            value(newVal, oldVal) {\n                if (newVal !== oldVal){\n                    this.$refs.input.value = newVal;\n                }\n            }\n        },\n        methods: {\n            format (value, el) {\n\n                if (this.formatter) {\n                    const formattedValue = this.formatter(value, el);\n                    if (formattedValue !== value) {\n                        this.$refs.input.value = formattedValue;\n                        return formattedValue;\n                    }\n                }\n                this.$refs.input.value = value;\n                return value;\n            },\n\n            onInput (value, el) {\n                let formattedValue = value;\n                if (!this.lazyFormatter) {\n                    formattedValue = this.format(value, el);\n                }\n                this.$emit('input', formattedValue);\n            },\n            onChange (value, el) {\n                const formattedValue = this.format(value, el);\n                this.$emit('input', formattedValue);\n                this.$emit('change', formattedValue);\n            },\n            onKeyUp (e) {\n                this.$emit('keyup', e);\n            },\n            focus () {\n                this.$refs.input.focus();\n            }\n        },\n        props: {\n            value: {\n                type: String,\n                default: ''\n            },\n            type: {\n                type: String,\n                default: 'text'\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            state: {\n                type: String,\n                default: null\n            },\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            autocomplete: {\n                type: String,\n                default: null\n            },\n            static: {\n                type: Boolean,\n                default: false\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            rows: {\n                type: Number,\n                default: null\n            },\n            textarea: {\n                type: Boolean,\n                default: false\n            },\n            formatter: {\n                type: Function\n            },\n            lazyFormatter: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"custom?'custom-file':null\"\n         :id=\"id ? (id + '__BV_file_outer_') : null\"\n         @dragover.stop.prevent=\"dragover\"\n    >\n\n        <!-- Drop Here Target -->\n        <span class=\"drop-here\"\n              v-if=\"dragging && custom\"\n              @dragover.stop.prevent=\"dragover\"\n              @drop.stop.prevent=\"drop\"\n              @dragleave.stop.prevent=\"dragging=false\"\n              :data-drop=\"dropLabel\"\n        ></span>\n\n        <!-- Real Form input -->\n        <input type=\"file\"\n               ref=\"input\"\n               :class=\"custom ? 'custom-file-input' : ''\"\n               :name=\"name\"\n               :id=\"id || null\"\n               :disabled=\"disabled\"\n               :required=\"required\"\n               :aria-required=\"required ? 'true' : null\"\n               :accept=\"accept || null\"\n               :multiple=\"multiple\"\n               :webkitdirectory=\"directory\"\n               :aria-describedby=\"(custom && id) ? (id + '__BV_file_control_') : null\"\n               @change=\"onFileChange\"\n        >\n\n        <!-- Overlay Labels -->\n        <span :class=\"['custom-file-control',dragging?'dragging':null]\"\n              :id=\"id ? (id + '__BV_file_control_') : null\"\n              :data-choose=\"computedChooseLabel\"\n              :data-selected=\"selectedLabel\"\n              v-if=\"custom\"\n        ></span>\n\n    </div>\n</template>\n\n<style scoped>\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control {\n        overflow: hidden;\n    }\n\n    .custom-file-control.dragging {\n        overflow: hidden;\n        filter: blur(3px);\n    }\n\n    .custom-file-control::after {\n        content: attr(data-selected);\n    }\n\n    .custom-file-control::before {\n        content: attr(data-choose);\n    }\n\n    .custom-file .drop-here {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, .5);\n        border-radius: 3px;\n        z-index: 99999;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .custom-file .drop-here::before {\n        color: white;\n        content: attr(data-drop);\n    }\n\n</style>\n\n<script>\n    import { formCustomMixin, formMixin } from '../mixins';\n    import { from as arrayFrom } from '../utils/array';\n\n    export default {\n        mixins: [formMixin, formCustomMixin],\n        data() {\n            return {\n                selectedFile: null,\n                dragging: false\n            };\n        },\n        computed: {\n            selectedLabel() {\n                if (!this.selectedFile || this.selectedFile.length === 0) {\n                    return this.placeholder || 'No file chosen';\n                }\n\n                if (this.multiple) {\n                    if (this.selectedFile.length === 1) {\n                        return this.selectedFile[0].name;\n                    }\n\n                    return this.selectedFormat\n                        .replace(':names', this.selectedFile.map(file => file.name).join(','))\n                        .replace(':count', this.selectedFile.length);\n                }\n\n                return this.selectedFile.name;\n            },\n            computedChooseLabel() {\n                return this.chooseLabel || (this.multiple ? 'Choose Files' : 'Choose File');\n            }\n        },\n        watch: {\n            selectedFile(newVal, oldVal) {\n                if (newVal === oldVal) {\n                    return;\n                }\n\n                if (!newVal && this.multiple) {\n                    this.$emit('input', []);\n                } else {\n                    this.$emit('input', newVal);\n                }\n            }\n        },\n        methods: {\n            reset() {\n                try {\n                    // Wrapped in try in case IE < 11 craps out\n                    this.$refs.input.value = '';\n                } catch (e) {\n                }\n\n                // IE < 11 doesn't support setting input.value to '' or null\n                // So we use this little extra hack to reset the value, just in case\n                // This also appears to work on modern browsers as well.\n                this.$refs.input.type = '';\n                this.$refs.input.type = 'file';\n\n                this.selectedFile = this.multiple ? [] : null;\n            },\n            onFileChange(e) {\n                // Always emit original event\n                this.$emit('change', e);\n\n                // Check if special `items` prop is available on event (drop mode)\n                // Can be disabled by setting no-traverse\n                const items = e.dataTransfer && e.dataTransfer.items;\n                if (items && !this.noTraverse) {\n                    const queue = [];\n                    for (let i = 0; i < items.length; i++) {\n                        const item = items[i].webkitGetAsEntry();\n                        if (item) {\n                            queue.push(this.traverseFileTree(item));\n                        }\n                    }\n                    Promise.all(queue).then(filesArr => {\n                        this.setFiles(arrayFrom(filesArr));\n                    });\n                    return;\n                }\n\n                // Normal handling\n                this.setFiles(e.target.files || e.dataTransfer.files);\n            },\n            setFiles(files) {\n                if (!files) {\n                    this.selectedFile = null;\n                    return;\n                }\n\n                if (!this.multiple) {\n                    this.selectedFile = files[0];\n                    return;\n                }\n\n                // Convert files to array\n                const filesArray = [];\n                for (let i = 0; i < files.length; i++) {\n                    if (files[i].type.match(this.accept)) {\n                        filesArray.push(files[i]);\n                    }\n                }\n\n                this.selectedFile = filesArray;\n            },\n            dragover(e) {\n                if (this.noDrop || !this.custom) {\n                    return;\n                }\n\n                this.dragging = true;\n                e.dataTransfer.dropEffect = 'copy';\n            },\n            drop(e) {\n                if (this.noDrop) {\n                    return;\n                }\n\n                this.dragging = false;\n                if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                    this.onFileChange(e);\n                }\n            },\n            traverseFileTree(item, path) {\n                // Based on http://stackoverflow.com/questions/3590058\n                return new Promise(resolve => {\n                    path = path || '';\n                    if (item.isFile) {\n                        // Get file\n                        item.file(file => {\n                            file.$path = path; // Inject $path to file obj\n                            resolve(file);\n                        });\n                    } else if (item.isDirectory) {\n                        // Get folder contents\n                        item.createReader().readEntries(entries => {\n                            const queue = [];\n                            for (let i = 0; i < entries.length; i++) {\n                                queue.push(this.traverseFileTree(entries[i], path + item.name + '/'));\n                            }\n                            Promise.all(queue).then(filesArr => {\n                                resolve(arrayFrom(filesArr));\n                            });\n                        });\n                    }\n                });\n            }\n        },\n        props: {\n            accept: {\n                type: String,\n                default: ''\n            },\n            placeholder: {\n                type: String,\n                default: null\n            },\n            chooseLabel: {\n                type: String,\n                default: null\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            directory: {\n                type: Boolean,\n                default: false\n            },\n            noTraverse: {\n                type: Boolean,\n                default: false\n            },\n            selectedFormat: {\n                type: String,\n                default: ':count Files'\n            },\n            noDrop: {\n                type: Boolean,\n                default: false\n            },\n            dropLabel: {\n                type: String,\n                default: 'Drop files here'\n            }\n        }\n    };\n</script>\n","<template>\n    <select :class=\"inputClass\"\n            :name=\"name\"\n            :id=\"id || null\"\n            v-model=\"localValue\"\n            :multiple=\"multiple || null\"\n            :size=\"(multiple || selectSize > 1) ? selectSize : null\"\n            :disabled=\"disabled\"\n            :required=\"required\"\n            :aria-required=\"required ? 'true' : null\"\n            :aria-invalid=\"ariaInvalid\"\n            ref=\"input\"\n    >\n        <option v-for=\"option in formOptions\"\n                :value=\"option.value\"\n                v-html=\"option.text\"\n                :disabled=\"option.disabled\"\n        ></option>\n    </select>\n</template>\n\n<script>\n    import { formMixin, formOptionsMixin, formCustomMixin } from '../mixins';\n    import { warn } from '../utils';\n\n    export default {\n        mixins: [formMixin, formCustomMixin, formOptionsMixin],\n        data() {\n            return {\n                localValue: this.multiple ? (this.value || []) : this.value\n            };\n        },\n        computed: {\n            inputClass() {\n                return [\n                    'form-control',\n                    this.size ? `form-control-${this.size}` : null,\n                    (this.plain || this.multiple || this.selectSize > 1) ? null : 'custom-select'\n                ];\n            },\n            ariaInvalid() {\n                if (this.invalid === true || this.invalid === 'true') {\n                    return 'true';\n                }\n                return null;\n            }\n        },\n        props: {\n            value: {},\n            invalid: {\n                type: [Boolean, String],\n                default: false\n            },\n            size: {\n                type: String,\n                default: null\n            },\n            options: {\n                type: [Array, Object],\n                required: true\n            },\n            multiple: {\n                type: Boolean,\n                default: false\n            },\n            selectSize: {\n                // Browsers default size to 0, which typically shows 4 rows in most browsers\n                // Size of 1 can bork out firefox\n                type: Number,\n                default: 0\n            },\n            returnObject: {\n                type: Boolean,\n                default: false\n            }\n        },\n        created() {\n            if (this.returnObject) {\n                warn('form-select: return-object has been deprecated and will be removed in future releases');\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div :class=\"['jumbotron',fluid?'jumbotron-fluid':null]\">\n        <div :class=\"containerFluid ? 'container-fluid' : 'container'\">\n            <h1 :is=\"headerTag\" v-if=\"header\" class=\"display-3\" v-html=\"header\"></h1>\n            <p v-if=\"lead\" class=\"lead\" v-html=\"lead\"></p>\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {},\n        props: {\n            fluid: {\n                type: Boolean,\n                default: false\n            },\n            containerFluid: {\n                type: Boolean,\n                default: false\n            },\n            header: {\n                type: String,\n                default: null\n            },\n            headerTag: {\n                type: String,\n                default: 'h1'\n            },\n            lead: {\n                type: String,\n                default: null\n            }\n        }\n    };\n</script>\n","<template>\n<span :class=\"['badge',badgeVariant,badgePill]\">\n\t<slot></slot>\n</span>\n</template>\n\n<script>\n    export default {\n        computed: {\n            badgeVariant() {\n                return !this.variant || this.variant === `default` ? `badge-default` : `badge-${this.variant}`;\n            },\n            badgePill() {\n                return this.pill ? 'badge-pill' : '';\n            }\n        },\n        props: {\n            variant: {\n                type: String,\n                default: 'default'\n            },\n            pill: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"tag\" :class=\"['list-group',flush?'list-group-flush':null]\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n    export default {\n        props: {\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            flush: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"myTag\"\n               :class=\"classObject\"\n               ref=\"item\"\n               v-bind=\"conditionalLinkProps\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { props as originalLinkProps, computed, omitLinkProps } from '../mixins/link';\nimport { arrayIncludes } from '../utils/array';\nimport { assign } from '../utils/object';\n// copy link props, but exclude defaults for 'href', 'to', & 'tag'\n// to ensure proper component tag computation\nconst linkProps = assign(omitLinkProps('href', 'to'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: originalLinkProps.tag.type }\n});\n\nconst actionTags = ['a', 'router-link', 'button', 'b-link'];\n\nexport default {\n    components: { bLink },\n\n    computed: {\n        linkProps: computed.linkProps,\n\n        classObject() {\n            return [\n                'list-group-item',\n                this.listState,\n                this.active ? 'active' : null,\n                this.disabled ? 'disabled' : null,\n                this.isAction ? 'list-group-item-action' : null\n            ];\n        },\n\n        isAction() {\n            if (this.action === false) {\n                return false;\n            }\n\n            // this previously could return a string,\n            // coercing to a boolean for more consistent expected value\n            return !!(this.action || this.to || this.href || arrayIncludes(actionTags, this.tag));\n        },\n\n        listState() {\n            return this.variant ? `list-group-item-${this.variant}` : null;\n        },\n\n        myTag() {\n            if (this.tag) {\n                return this.tag;\n            }\n\n            return (this.to || this.href) ? 'b-link' : 'div';\n        },\n\n        conditionalLinkProps() {\n            return this.myTag !== 'b-link' ? {} : this.linkProps;\n        }\n    },\n\n    // merge the link props with list-group-item props\n    props: assign(linkProps, {\n        action: {\n            type: Boolean,\n            default: null\n        },\n\n        variant: {\n            type: String,\n            default: null\n        },\n    })\n};\n</script>\n","<template>\n    <div class=\"media\">\n        <div :class=\"['d-flex','mr-3',verticalAlignClass]\"  v-if=\"!rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n        <div class=\"media-body\">\n            <slot></slot>\n        </div>\n        <div :class=\"['d-flex','ml-3',verticalAlignClass]\" v-if=\"rightAlign\">\n            <slot name=\"aside\"></slot>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        computed: {\n            verticalAlignClass() {\n                return `align-self-${this.verticalAlign}`;\n            }\n        },\n        props: {\n            rightAlign: {\n                type: Boolean,\n                default: false\n            },\n            verticalAlign: {\n                type: String,\n                default: 'top'\n            }\n        }\n    };\n</script>\n","<template>\n    <component :is=\"type\" :class=\"classObject\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\n\nexport default {\n    computed: {\n        classObject() {\n            return {\n                nav: true,\n                'navbar-nav': this.isNavBar,\n                'nav-tabs': this.tabs,\n                'nav-pills': this.pills,\n                'flex-column': this.vertical,\n                'nav-fill': this.fill,\n                'nav-justified': this.justified\n            };\n        }\n    },\n    props: {\n        type: {\n            type: String,\n            default: 'ul'\n        },\n        fill: {\n            type: Boolean,\n            default: false\n        },\n        justified: {\n            type: Boolean,\n            default: false\n        },\n        tabs: {\n            type: Boolean,\n            default: false\n        },\n        pills: {\n            type: Boolean,\n            default: false\n        },\n        vertical: {\n            type: Boolean,\n            default: false\n        },\n        isNavBar: {\n            type: Boolean,\n            default: false\n        }\n    }\n};\n\n</script>\n","<template>\n    <li class=\"nav-item\">\n        <b-link class=\"nav-link\"\n                v-bind=\"linkProps\"\n                @click=\"$emit('click', $event)\">\n            <slot></slot>\n        </b-link>\n    </li>\n</template>\n\n<script>\nimport { props as linkProps, computed } from '../mixins/link';\nimport bLink from './link.vue';\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps\n    }\n};\n</script>\n","<template>\n    <li :id=\"id || null\" :class=\"dropdownClasses\">\n\n        <a :class=\"['nav-link', dropdownToggle, {disabled}]\"\n           href=\"#\"\n           ref=\"button\"\n           :id=\"id ? (id + '__BV_button_') : null\"\n           aria-haspopup=\"true\"\n           :aria-expanded=\"visible ? 'true' : 'false'\"\n           :disabled=\"disabled\"\n           @click.stop.prevent=\"toggle($event)\"\n           @keydown.enter.stop.prevent=\"toggle($event)\"\n           @keydown.space.stop.prevent=\"toggle($event)\"\n        >\n            <slot name=\"button-content\"><slot name=\"text\"><span v-html=\"text\"></span></slot></slot>\n        </a>\n\n        <div :class=\"menuClasses\"\n             role=\"menu\"\n             ref=\"menu\"\n             :aria-labelledby=\"id ? (id + '__BV_button_') : null\"\n             @mouseover=\"onMouseOver\"\n             @keyup.esc=\"onEsc\"\n             @keydown.tab=\"onTab\"\n             @keydown.up=\"focusNext($event,true)\"\n             @keydown.down=\"focusNext($event,false)\"\n        >\n            <slot></slot>\n        </div>\n\n    </li>\n</template>\n\n<script>\n    import { dropdownMixin } from '../mixins';\n\n    export default {\n        mixins: [dropdownMixin],\n        computed: {\n            dropdownToggle() {\n                return this.noCaret ? '' : 'dropdown-toggle';\n            },\n            dropdownClasses() {\n                return [\n                    'nav-item',\n                    'b-nav-dropdown',\n                    'dropdown',\n                    this.dropup ? 'dropup' : '',\n                    this.visible ? 'show' : ''\n                ];\n            },\n            menuClasses() {\n                return [\n                    'dropdown-menu',\n                    this.right ? 'dropdown-menu-right': '',\n                    this.visible ? 'show' : ''\n                ];\n            }\n        },\n        props: {\n            noCaret: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n\n<style>\n.b-nav-dropdown .dropdown-item:focus:not(.active),\n.b-nav-dropdown .dropdown-item:hover:not(.active) {\n    /* @See https://github.com/twbs/bootstrap/issues/23329 */\n    box-shadow: inset 0px 0px 400px 110px rgba(0, 0, 0, .09);\n}\n\n.b-nav-dropdown .dropdown-item:active {\n    box-shadow: initial;\n}\n</style>\n","<template>\n    <button :class=\"classObject\"\n            type=\"button\"\n            :aria-label=\"label\"\n            :aria-controls=\"target.id ? target.id : target\"\n            :aria-expanded=\"toggleState ? 'true' : 'false'\"\n            @click=\"onclick\"\n    >\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n</template>\n\n<script>\nimport { listenOnRootMixin } from '../mixins';\n\nexport default {\n    mixins: [listenOnRootMixin],\n    computed: {\n        classObject() {\n            return [\n                'navbar-toggler',\n                'navbar-toggler-' + this.position\n            ];\n        }\n    },\n    data() {\n        return {\n            toggleState: false\n        };\n    },\n    props: {\n        label: {\n            type: String,\n            default: 'Toggle navigation'\n        },\n        position: {\n            type: String,\n            default: 'right'\n        },\n        target: {\n            required: true\n        }\n    },\n    methods: {\n        onclick() {\n            const target = this.target;\n            if (target.toggle) {\n                target.toggle();\n            }\n            this.$root.$emit('collapse::toggle', this.target);\n        },\n        handleStateEvt(target, state) {\n            if (target === this.target || target === this.target.id) {\n                this.toggleState = state;\n            }\n        }\n    },\n    created() {\n        this.listenOnRoot('collapse::toggle::state', this.handleStateEvt);\n    }\n};\n</script>\n","<template>\n    <nav :class=\"classObject\">\n        <slot></slot>\n    </nav>\n</template>\n\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'navbar',\n                    this.type ? `navbar-${this.type}` : null,\n                    this.variant ? `bg-${this.variant}` : null,\n                    this.fixed ? `fixed-${this.fixed}` : null,\n                    this.sticky ? 'sticky-top' : null,\n                    this.toggleable ? this.toggleableClass : null\n                ];\n            },\n            toggleableClass() {\n                let className = 'navbar-toggleable';\n\n                if (this.toggleBreakpoint) {\n                    className += `-${this.toggleBreakpoint}`;\n                }\n\n                return className;\n            }\n        },\n        props: {\n            type: {\n                type: String,\n                default: 'light'\n            },\n            variant: {\n                type: String\n            },\n            toggleable: {\n                type: Boolean,\n                default: false\n            },\n            toggleBreakpoint: {\n                type: String,\n                default: null\n            },\n            fixed: {\n                type: String\n            },\n            sticky: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n     <component :is=\"componentTag\" \n             class=\"navbar-brand\"\n             v-bind=\"conditionalLinkProps\"\n             @click=\"$emit('click', $event)\">\n        <slot></slot>\n    </component>\n</template>\n\n<script>\nimport bLink from './link.vue';\nimport { omitLinkProps, props as originalLinkProps, computed } from '../mixins/link';\nimport { assign } from '../utils/object';\n\n// Grab a fresh object of link props (omitLinkProps does this)\n// less the 'href', 'to', and 'tag' props\n// that we will reconstruct without any defaults\n// so our component functions properly\nconst linkProps = assign(omitLinkProps('href', 'to', 'tag'), {\n    href: { type: originalLinkProps.href.type },\n    to: { type: originalLinkProps.to.type },\n    tag: { type: String }\n});\n\nexport default {\n    components: { bLink },\n    props: linkProps,\n    computed: {\n        linkProps: computed.linkProps,\n        isLink() {\n            return this.to || this.href;\n        },\n        componentTag(){\n            return this.isLink ? `b-link` : (this.tag || 'div');\n        },\n        conditionalLinkProps() {\n            return this.isLink ? this.linkProps : {};\n        }\n    }\n};\n</script>\n","<template>\n    <span class=\"navbar-text\">\n        <slot></slot>\n    </span>\n</template>\n\n<script>\n    export default {\n        props: {}\n    };\n</script>\n","<template>\n    <b-form :id=\"id || null\" inline>\n        <slot></slot>\n    </b-form>\n</template>\n\n<script>\n    import bForm from './form.vue';\n    \n    export default {\n        components: [bForm],\n        props: {\n            id: {\n                type: String,\n            }\n        }\n    };\n</script>\n","/**\n * @param {number} length\n * @return {Array}\n */\nexport default length => Array.apply(null, { length })\n","<template>\n    <div>\n        <span ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['popover', 'fade', classState ? 'show' : '', popoverAlignment]\"\n             :style=\"popoverStyle\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"popover-arrow\"></div>\n            <h3 :is=\"titletag\" class=\"popover-title\" v-if=\"title\" v-html=\"title\"></h3>\n            <div class=\"popover-content\">\n                <div class=\"popover-content-wrapper\">\n                    <slot name=\"content\"><span v-html=\"content\"></span></slot>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            titleTag: {\n                type: String,\n                default: 'h3'\n            },\n            content: {\n                type: String,\n                default: ''\n            },\n            popoverStyle: {\n                type: Object,\n                default: null\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"progress\">\n        <transition>\n            <div role=\"progressbar\"\n                 :class=\"classObject\"\n                 :aria-valuenow=\"value\"\n                 :aria-valuemin=\"0\"\n                 :aria-valuemax=\"max\"\n                 :style=\"styleObject\"\n            >\n                <slot>\n                    <template v-if=\"showProgress\">{{progress}}%</template>\n                    <template v-else-if=\"showValue\">{{value}}</template>\n                </slot>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n    .progress-bar {\n        transition: all .5s;\n    }\n</style>\n\n<script>\n    export default {\n        computed: {\n            classObject() {\n                return [\n                    'progress-bar',\n                    this.progressVariant,\n                    (this.striped || this.animated) ? 'progress-bar-striped' : '',\n                    this.animated ? 'progress-bar-animated' : ''\n                ];\n            },\n            styleObject() {\n                return {\n                    width: this.progress + '%'\n                };\n            },\n            progressVariant() {\n                return this.variant ? `bg-${this.variant}` : null;\n            },\n            progress() {\n                const p = Math.pow(10, this.precision);\n                return Math.round((100 * p * this.value) / this.max) / p;\n            }\n        },\n        props: {\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            animated: {\n                type: Boolean,\n                default: false\n            },\n            precision: {\n                type: Number,\n                default: 0\n            },\n            value: {\n                type: Number,\n                default: 0\n            },\n            max: {\n                type: Number,\n                default: 100\n            },\n            variant: {\n                type: String,\n                default: null\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            showValue: {\n                type: Boolean,\n                default: false\n            }\n        }\n    };\n</script>\n","<template>\n    <table :id=\"id || null\"\n           :aria-busy=\"busy ? 'true' : 'false'\"\n           :class=\"tableClass\"\n    >\n        <thead :class=\"headClass\">\n        <tr>\n            <th v-for=\"(field,key) in fields\"\n                @click.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                :key=\"key\"\n                :class=\"fieldClass(field,key)\"\n                :style=\"field.thStyle || {}\"\n                :aria-label=\"field.sortable ? ((localSortDesc && localSortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                :aria-sort=\"(field.sortable && localSortBy === key) ? (localSortDesc ? 'descending' : 'ascending') : null\"\n                :tabindex=\"field.sortable?'0':null\"\n            >\n                <slot :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n            </th>\n        </tr>\n        </thead>\n        <tfoot v-if=\"footClone\" :class=\"footClass\">\n        <tr>\n            <th v-for=\"(field,key) in fields\"\n                @click.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.enter.stop.prevent=\"headClicked($event,field,key)\"\n                @keydown.space.stop.prevent=\"headClicked($event,field,key)\"\n                :key=\"key\"\n                :class=\"fieldClass(field,key)\"\n                :style=\"field.thStyle || {}\"\n                :aria-label=\"field.sortable ? ((localSortDesc && localSortBy === key) ? labelSortAsc : labelSortDesc) : null\"\n                :aria-sort=\"(field.sortable && localSortBy === key) ? (localSortDesc ? 'descending' : 'ascending') : null\"\n                :tabindex=\"field.sortable?'0':null\"\n            >\n                <slot v-if=\"$scopedSlots['FOOT_'+key]\" :name=\"'FOOT_'+key\" :label=\"field.label\" :column=\"key\"\n                      :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n                <slot v-else :name=\"'HEAD_'+key\" :label=\"field.label\" :column=\"key\" :field=\"field\">\n                    <div v-html=\"field.label\"></div>\n                </slot>\n            </th>\n        </tr>\n        </tfoot>\n        <tbody>\n        <tr v-for=\"(item,index) in _items\"\n            :key=\"index\"\n            :class=\"rowClass(item)\"\n            @click=\"rowClicked($event,item,index)\"\n            @dblclick=\"rowDblClicked($event,item,index)\"\n            @hover=\"rowHovered($event,item,index)\"\n        >\n            <template v-for=\"(field,key) in fields\">\n                <td v-if=\"!hasFormatter(field)\" :class=\"tdClass(field, item, key)\" :key=\"key\">\n                    <slot :name=\"key\" :value=\"item[key]\" :item=\"item\" :index=\"index\">{{item[key]}}</slot>\n                </td>\n                <td v-else :key=\"key\" :class=\"tdClass(field, item, key)\"\n                    v-html=\"callFormatter(item, key, field)\">\n                </td>\n            </template>\n        </tr>\n        <tr v-if=\"showEmpty && (!_items  || _items.length === 0)\">\n            <td :colspan=\"keys(fields).length\">\n                <div v-if=\"filter\" role=\"alert\" aria-live=\"polite\">\n                    <slot name=\"emptyfiltered\">\n                        <div class=\"text-center my-2\" v-html=\"emptyFilteredText\"></div>\n                    </slot>\n                </div>\n                <div v-else role=\"alert\" aria-live=\"polite\">\n                    <slot name=\"empty\">\n                        <div class=\"text-center my-2\" v-html=\"emptyText\"></div>\n                    </slot>\n                </div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</template>\n\n<script>\n    import { warn } from '../utils';\n    import { keys } from '../utils/object.js';\n    import { listenOnRootMixin } from '../mixins';\n\n    const toString = v => {\n        if (!v) {\n            return '';\n        }\n        if (v instanceof Object) {\n            return keys(v).map(k => toString(v[k])).join(' ');\n        }\n        return String(v);\n    };\n\n    const recToString = obj => {\n        if (!(obj instanceof Object)) {\n            return '';\n        }\n\n        return toString(keys(obj).reduce((o, k) => {\n            // Ignore fields 'state' and ones that start with _\n            if (!(/^_/.test(k) || k === 'state')) {\n                o[k] = obj[k];\n            }\n            return o;\n        }, {}));\n    };\n\n    const defaultSortCompare = (a, b, sortBy) => {\n        if (typeof a[sortBy] === 'number' && typeof b[sortBy] === 'number') {\n            return ((a[sortBy] < b[sortBy]) && -1) || ((a[sortBy] > b[sortBy]) && 1) || 0;\n        }\n        return toString(a[sortBy]).localeCompare(toString(b[sortBy]), undefined, {\n            numeric: true\n        });\n    };\n\n    export default {\n        mixins: [listenOnRootMixin],\n        data() {\n            return {\n                localSortBy: this.sortBy || '',\n                localSortDesc: this.sortDesc || false,\n                localItems: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            items: {\n                type: [Array, Function],\n                default() {\n                    if (this && this.itemsProvider) {\n                        // Deprecate itemsProvider\n                        warn('b-table: prop \\'items-provider\\' has been deprecated. Pass a function to \\'items\\' instead');\n                        return this.itemsProvider;\n                    }\n                    return [];\n                }\n            },\n            sortBy: {\n                type: String,\n                default: null\n            },\n            sortDesc: {\n                type: Boolean,\n                default: false\n            },\n            apiUrl: {\n                type: String,\n                default: ''\n            },\n            fields: {\n                type: Object,\n                default: {}\n            },\n            striped: {\n                type: Boolean,\n                default: false\n            },\n            bordered: {\n                type: Boolean,\n                default: false\n            },\n            inverse: {\n                type: Boolean,\n                default: false\n            },\n            hover: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            responsive: {\n                type: Boolean,\n                default: false\n            },\n            headVariant: {\n                type: String,\n                default: ''\n            },\n            footVariant: {\n                type: String,\n                default: ''\n            },\n            perPage: {\n                type: Number,\n                default: null\n            },\n            currentPage: {\n                type: Number,\n                default: 1\n            },\n            filter: {\n                type: [String, RegExp, Function],\n                default: null\n            },\n            sortCompare: {\n                type: Function,\n                default: null\n            },\n            itemsProvider: {\n                // Deprecated in favour of items\n                type: Function,\n                default: null\n            },\n            noProviderPaging: {\n                type: Boolean,\n                default: false\n            },\n            noProviderSorting: {\n                type: Boolean,\n                default: false\n            },\n            noProviderFiltering: {\n                type: Boolean,\n                default: false\n            },\n            busy: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Array,\n                default: () => []\n            },\n            footClone: {\n                type: Boolean,\n                default: false\n            },\n            labelSortAsc: {\n                type: String,\n                default: 'Click to sort Ascending'\n            },\n            labelSortDesc: {\n                type: String,\n                default: 'Click to sort Descending'\n            },\n            showEmpty: {\n                type: Boolean,\n                default: false\n            },\n            emptyText: {\n                type: String,\n                default: 'There are no records to show'\n            },\n            emptyFilteredText: {\n                type: String,\n                default: 'There are no records matching your request'\n            }\n        },\n        watch: {\n            items(newVal, oldVal) {\n                if (oldVal !== newVal) {\n                    this._providerUpdate();\n                }\n            },\n            sortDesc(newVal, oldVal) {\n                if (newVal === this.localSortDesc) {\n                    return;\n                }\n                this.localSortDesc = newVal || false;\n            },\n            localSortDesc(newVal, oldVal) {\n                // Emit update to sort-desc.sync\n                if (newVal !== oldVal) {\n                    this.$emit('update:sortDesc', newVal);\n                    if (!this.noProviderSorting) {\n                        this._providerUpdate();\n                    }\n                }\n            },\n            sortBy(newVal, oldVal) {\n                if (newVal === this.localSortBy) {\n                    return;\n                }\n                this.localSortBy = newVal || null;\n            },\n            localSortBy(newVal, oldVal) {\n                if (newVal !== oldVal) {\n                    this.$emit('update:sortBy', newVal);\n                    if (!this.noProviderSorting) {\n                        this._providerUpdate();\n                    }\n                }\n            },\n            perPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            currentPage(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderPaging) {\n                    this._providerUpdate();\n                }\n            },\n            filter(newVal, oldVal) {\n                if (oldVal !== newVal && !this.noProviderFiltering) {\n                    this._providerUpdate();\n                }\n            }\n        },\n        mounted() {\n            this.localSortBy = this.sortBy;\n            this.localSortDesc = this.sortDesc;\n            if (this.hasProvider) {\n                this._providerUpdate();\n            }\n            this.listenOnRoot('table::refresh', id => {\n                if (id === this.id) {\n                    this._providerUpdate();\n                }\n            });\n        },\n        computed: {\n            tableClass() {\n                return [\n                    'table',\n                    'b-table',\n                    this.striped ? 'table-striped' : '',\n                    this.hover ? 'table-hover' : '',\n                    this.inverse ? 'table-inverse' : '',\n                    this.bordered ? 'table-bordered' : '',\n                    this.responsive ? 'table-responsive' : '',\n                    this.small ? 'table-sm' : ''\n                ];\n            },\n            headClass() {\n                return this.headVariant ? 'thead-' + this.headVariant : '';\n            },\n            footClass() {\n                const variant = this.footVariant || this.headVariant || null;\n                return variant ? 'thead-' + variant : '';\n            },\n            hasProvider() {\n                return this.items instanceof Function;\n            },\n            providerFiltering() {\n                return Boolean(this.hasProvider && !this.noProviderFiltering);\n            },\n            providerSorting() {\n                return Boolean(this.hasProvider && !this.noProviderSorting);\n            },\n            providerPaging() {\n                return Boolean(this.hasProvider && !this.noProviderPaging);\n            },\n            context() {\n                return {\n                    perPage: this.perPage,\n                    currentPage: this.currentPage,\n                    filter: this.filter,\n                    apiUrl: this.apiUrl,\n                    sortBy: this.localSortBy,\n                    sortDesc: this.localSortDesc\n                };\n            },\n            _items() {\n                // Grab some props/data to ensure reactivity\n                const perPage = this.perPage;\n                const currentPage = this.currentPage;\n                const filter = this.filter;\n                const sortBy = this.localSortBy;\n                const sortDesc = this.localSortDesc;\n                const sortCompare = this.sortCompare || defaultSortCompare;\n\n                let items = this.hasProvider ? this.localItems : this.items;\n\n                if (!items) {\n                    this.$nextTick(this._providerUpdate);\n                    return [];\n                }\n\n                // Shallow copy of items, so we don't mutate the original array order/size\n                items = items.slice();\n\n                // Apply local filter\n                if (filter && !this.providerFiltering) {\n                    // Number of items before filtering\n                    const numOriginalItems = items.length;\n\n                    if (filter instanceof Function) {\n                        items = items.filter(filter);\n                    } else {\n                        let regex;\n                        if (filter instanceof RegExp) {\n                            regex = filter;\n                        } else {\n                            regex = new RegExp('.*' + filter + '.*', 'ig');\n                        }\n                        items = items.filter(item => {\n                            const test = regex.test(recToString(item));\n                            regex.lastIndex = 0;\n                            return test;\n                        });\n                    }\n\n                    if (numOriginalItems !== items.length) {\n                        // Emit a filtered notification event, as number of items has changed\n                        this.$emit('filtered', items);\n                    }\n                }\n\n                // Apply local Sort\n                if (sortBy && !this.providerSorting) {\n                    items = items.sort((a, b) => {\n                        const r = sortCompare(a, b, sortBy);\n                        return sortDesc ? r : r * -1;\n                    });\n                }\n\n                // Apply local pagination\n                if (perPage && !this.providerPaging) {\n                    // Grab the current page of data (which may be past filtered items)\n                    items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n                }\n\n                // Update the value model with the filtered/sorted/paginated data set\n                this.$emit('input', items);\n\n                return items;\n            }\n        },\n        methods: {\n            keys,\n            fieldClass(field, key) {\n                return [\n                    field.sortable ? 'sorting' : '',\n                    (field.sortable && this.localSortBy === key) ? 'sorting_' + (this.localSortDesc ? 'desc' : 'asc') : '',\n                    field.variant ? ('table-' + field.variant) : '',\n                    field.class ? field.class : '',\n                    field.thClass ? field.thClass : ''\n                ];\n            },\n            tdClass(field, item, key) {\n                let cellVariant = '';\n                if (item._cellVariants && item._cellVariants[key]) {\n                    cellVariant = (this.inverse ? 'bg-' : 'table-') + item._cellVariants[key];\n                }\n                return [\n                    (field.variant && !cellVariant) ? ((this.inverse ? 'bg-' : 'table-') + field.variant) : '',\n                    cellVariant,\n                    field.class ? field.class : '',\n                    field.tdClass ? field.tdClass : ''\n                ];\n            },\n            rowClass(item) {\n                // Prefer item._rowVariant over deprecated item.state\n                const variant = item._rowVariant || item.state || null;\n                return [\n                    variant ? ((this.inverse ? 'bg-' : 'table-') + variant) : ''\n                ];\n            },\n            rowClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-clicked', item, index);\n            },\n            rowDblClicked(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-dblclicked', item, index);\n            },\n            rowHovered(e, item, index) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                this.$emit('row-hovered', item, index);\n            },\n            headClicked(e, field, key) {\n                if (this.busy) {\n                    // If table is busy (via provider) then don't propagate\n                    e.preventDefault();\n                    e.stopPropagation();\n                    return;\n                }\n                let sortChanged = false;\n                if (field.sortable) {\n                    if (key === this.localSortBy) {\n                        // Change sorting direction on current column\n                        this.localSortDesc = !this.localSortDesc;\n                    } else {\n                        // Start sorting this column ascending\n                        this.localSortBy = key;\n                        this.localSortDesc = false;\n                    }\n                    sortChanged = true;\n                } else if (this.localSortBy) {\n                    this.localSortBy = null;\n                    this.localSortDesc = false;\n                    sortChanged = true;\n                }\n\n                this.$emit('head-clicked', key, field);\n                if (sortChanged) {\n                    // Sorting parameters changed\n                    this.$emit('sort-changed', this.context);\n                }\n            },\n            refresh() {\n                // Expose refresh method\n                if (this.hasProvider) {\n                    this._providerUpdate();\n                }\n            },\n            _providerSetLocal(items) {\n                this.localItems = (items && items.length > 0) ? items.slice() : [];\n                this.$emit('refreshed');\n                this.emitOnRoot('table::refreshed', this.id);\n            },\n            _providerUpdate() {\n                // Refresh the provider items\n                if (this.busy || !this.hasProvider) {\n                    // Don't refresh remote data if we are 'busy' or if no provider\n                    return;\n                }\n\n                // Call provider function with context and optional callback\n                const data = this.items(this.context, this._providerSetLocal);\n\n                if (!data) {\n                    // Provider is using callback\n                    return;\n                }\n\n                if (data.then && typeof data.then === 'function') {\n                    // Provider returned Promise\n                    data.then(items => {\n                        this._providerSetLocal(items);\n                    });\n                } else {\n                    // Provider returned Array data\n                    this._providerSetLocal(data);\n                }\n            },\n            hasFormatter(field) {\n                return field.formatter && ((typeof (field.formatter) === 'function') || (typeof (field.formatter) === 'string'));\n            },\n            callFormatter(item, key, field) {\n                if (field.formatter && (typeof (field.formatter) === 'function'))\n                    return field.formatter(item[key]);\n\n                if (field.formatter && (typeof (this.$parent[field.formatter]) === 'function'))\n                    return this.$parent[field.formatter](item[key]);\n            }\n\n        }\n    };\n</script>\n\n<style>\n    /* Based on https://cdn.datatables.net/1.10.13/css/dataTables.bootstrap4.css */\n\n    table.b-table > thead > tr > .sorting,\n    table.b-table > tfoot > tr > .sorting {\n        padding-right: 30px;\n        cursor: pointer;\n        position: relative;\n    }\n\n    table.b-table thead > tr > .sorting:before,\n    table.b-table thead > tr > .sorting:after,\n    table.b-table tfoot > tr > .sorting:before,\n    table.b-table tfoot > tr > .sorting:after {\n        position: absolute;\n        bottom: 0.9em;\n        display: block;\n        opacity: 0.3;\n    }\n\n    table.b-table.table-sm > thead > tr > .sorting:before,\n    table.b-table.table-sm > thead > tr > .sorting:after,\n    table.b-table.table-sm > tfoot > tr > .sorting:before,\n    table.b-table.table-sm > tfoot > tr > .sorting:after {\n        bottom: 0.45em;\n    }\n\n    table.b-table > thead > tr > .sorting:before,\n    table.b-table > tfoot > tr > .sorting:before {\n        right: 1em;\n        content: \"\\2191\";\n    }\n\n    table.b-table > thead > tr > .sorting:after,\n    table.b-table > tfoot > tr > .sorting:after {\n        right: 0.5em;\n        content: \"\\2193\";\n    }\n\n    table.b-table > thead > tr > .sorting_asc:after,\n    table.b-table > thead > tr > .sorting_desc:before,\n    table.b-table > tfoot > tr > .sorting_asc:after,\n    table.b-table > tfoot > tr > .sorting_desc:before {\n        opacity: 1;\n    }\n\n    /* Busy table styling */\n\n    table.b-table[aria-busy=\"false\"] {\n        opacity: 1;\n    }\n\n    table.b-table[aria-busy=\"true\"] {\n        opacity: .6;\n    }\n</style>\n","<template>\n    <component :is=\"tag\" :id=\"id || null\" class=\"tabs\">\n        <div v-if=\"bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n\n        <div :class=\"{'card-header': card}\">\n            <ul :class=\"['nav','nav-' + navStyle, card ? 'card-header-'+navStyle : null]\"\n                role=\"tablist\"\n                tabindex=\"0\"\n                :aria-setsize=\"tabs.length\"\n                :aria-posinset=\"currentTab + 1\"\n                @keydown.left=\"previousTab\"\n                @keydown.up=\"previousTab\"\n                @keydown.right=\"nextTab\"\n                @keydown.down=\"nextTab\"\n                @keydown.shift.left=\"setTab(-1,false,1)\"\n                @keydown.shift.up=\"setTab(-1,false,1)\"\n                @keydown.shift.right=\"setTab(tabs.length,false,-1)\"\n                @keydown.shift.down=\"setTab(tabs.length,false,-1)\"\n            >\n                <li class=\"nav-item\" v-for=\"(tab, index) in tabs\" role=\"presentation\">\n                    <a :class=\"['nav-link',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                       :href=\"tab.href\"\n                       role=\"tab\"\n                       :aria-selected=\"tab.localActive ? 'true' : 'false'\"\n                       :aria-controls=\"tab.id || null\"\n                       :id=\"tab.controlledBy || null\"\n                       @click.prevent.stop=\"setTab(index)\"\n                       @keydown.space.prevent.stop=\"setTab(index)\"\n                       @keydown.enter.prevent.stop=\"setTab(index)\"\n                       tabindex=\"-1\"\n                       v-if=\"!tab.headHtml\"\n                       v-html=\"tab.title\"\n                    ></a>\n                    <div :class=\"['tab-head',{small: small, active: tab.localActive, disabled: tab.disabled}]\"\n                         role=\"heading\"\n                         tabindex=\"-1\"\n                         v-else\n                         v-html=\"tab.headHtml\"></div>\n                </li>\n                <slot name=\"tabs\"></slot>\n            </ul>\n        </div>\n\n        <div v-if=\"!bottom\" :class=\"['tab-content',{'card-block': card}]\" ref=\"tabsContainer\">\n            <slot></slot>\n            <slot name=\"empty\" v-if=\"!tabs || !tabs.length\"></slot>\n        </div>\n    </component>\n</template>\n\n<script>\n    import {observeDom} from '../utils';\n\n    export default {\n        data() {\n            return {\n                currentTab: this.value,\n                tabs: []\n            };\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            noFade: {\n                type: Boolean,\n                default: false\n            },\n            card: {\n                type: Boolean,\n                default: false\n            },\n            small: {\n                type: Boolean,\n                default: false\n            },\n            value: {\n                type: Number,\n                default: null\n            },\n            pills: {\n                type: Boolean,\n                default: false\n            },\n            lazy: {\n                type: Boolean,\n                default: false\n            },\n            bottom: {\n                type: Boolean,\n                default: false\n            }\n        },\n        watch: {\n            currentTab(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.$root.$emit('changed::tab', this, val, this.tabs[val]);\n                this.$emit('input', val);\n                this.tabs[val].$emit('click');\n            },\n            value(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.setTab(val);\n            },\n            fade(val, old) {\n                if (val === old) {\n                    return;\n                }\n\n                this.tabs.forEach(item => {\n                    this.$set(item, 'fade', val);\n                });\n            }\n        },\n        computed: {\n            fade() {\n                return !this.noFade;\n            },\n            navStyle() {\n                return this.pills ? 'pills' : 'tabs';\n            }\n        },\n        methods: {\n            /**\n             * Util: Return the sign of a number (as -1, 0, or 1)\n             */\n            sign(x) {\n                return (x === 0) ? 0 : (x > 0 ? 1 : -1);\n            },\n\n            /**\n             * Move to next tab\n             */\n            nextTab() {\n                this.setTab(this.currentTab, false, 1);\n            },\n\n            /**\n             * Move to previous tab\n             */\n            previousTab() {\n                this.setTab(this.currentTab, false, -1);\n            },\n\n            /**\n             * Set active tab on the tabs collection and the child 'tab' component\n             */\n            setTab(index, force, offset) {\n                offset = offset || 0;\n\n                // Prevent setting same tab!\n                if (!force && (index + offset) === this.currentTab) {\n                    return;\n                }\n\n                const tab = this.tabs[index + offset];\n\n                // Don't go beyond indexes!\n                if (!tab) {\n                    return;\n                }\n\n                // Ignore or Skip disabled\n                if (tab.disabled) {\n                    if (offset) {\n                        // Skip to next non disabled tab in offset direction (recursive)\n                        this.setTab(index, force, offset + this.sign(offset));\n                    }\n                    return;\n                }\n\n                // Activate current tab, and deactivte any old tabs\n                this.tabs.forEach( t => {\n                    if (t === tab) {\n                        // Set new tab as active\n                        this.$set(t, 'localActive', true);\n                    } else {\n                        // Ensure non current tabs are not active\n                        this.$set(t, 'localActive', false);\n                    }\n                });\n\n                // Update currentTab\n                this.currentTab = index + offset;\n            },\n\n            /**\n             * Dynamically update tabs\n             */\n            updateTabs() {\n                // Probe tabs\n                if (this.$slots.default) {\n                    this.tabs = this.$slots.default.filter(tab => tab.componentInstance || false)\n                        .map(tab => tab.componentInstance);\n                } else {\n                    this.tabs = [];\n                }\n\n                this.tabs.forEach(tab => {\n                    this.$set(tab, 'fade', this.fade);\n                    this.$set(tab, 'lazy', this.lazy);\n                });\n\n                // Get initial active tab\n                let tabIndex = this.currentTab;\n\n                if (tabIndex === null || tabIndex === undefined) {\n                    // Make null for easier testing further on\n                    tabIndex = null;\n                }\n\n                if (tabIndex === null) {\n                    // Find last active non-dsabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.active && !tab.disabled) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                if (tabIndex === null) {\n                    // Find first non-disabled tab in current tabs\n                    this.tabs.forEach((tab, index) => {\n                        if (!tab.disabled && tabIndex === null) {\n                            tabIndex = index;\n                        }\n                    });\n                }\n\n                // Workaround to fix problem when currentTab is removed\n                let offset = 0;\n                if (tabIndex >= this.tabs.length) {\n                    offset = -1;\n                }\n\n                this.setTab(tabIndex || 0, true, offset);\n            }\n        },\n        mounted() {\n            this.updateTabs();\n\n            // Observe Child changes so we can notify tabs change\n            observeDom(this.$refs.tabsContainer, this.updateTabs.bind(this), {subtree: false});\n        }\n    };\n\n</script>\n","<template>\n    <transition @enter=\"enter\" @before-leave=\"beforeLeave\" mode=\"out-in\">\n        <component :is=\"tag\"\n                   :id=\"id || null\"\n                   role=\"tabpanel\"\n                   :class=\"['tab-pane', {show, fade, disabled, active: localActive}]\"\n                   :aria-hidden=\"localActive ? 'false' : 'true'\"\n                   :aria-expanded=\"localActive ? 'true' : 'false'\"\n                   :aria-lablelledby=\"controlledBy || null\"\n                   v-if=\"localActive || !lazy\"\n                   v-show=\"localActive || lazy\"\n                   ref=\"panel\"\n        >\n             <slot></slot>\n        </component>\n    </transition>\n</template>\n\n<script>\n    export default {\n        methods: {\n            enter() {\n                this.show = true;\n            },\n            beforeLeave() {\n                this.show = false;\n            }\n        },\n        data() {\n            return {\n                fade: false,\n                localActive: this.active,\n                lazy: true,\n                show: false\n            };\n        },\n        computed: {\n            controlledBy() {\n                return this.buttonId || (this.id ? (this.id + '__BV_tab_button__') : null);\n            }\n        },\n        props: {\n            id: {\n                type: String,\n                default: ''\n            },\n            tag: {\n                type: String,\n                default: 'div'\n            },\n            buttonId: {\n                type: String,\n                default: ''\n            },\n            title: {\n                type: String,\n                default: ''\n            },\n            headHtml: {\n                type: String,\n                default: null\n            },\n            disabled: {\n                type: Boolean,\n                default: false\n            },\n            active: {\n                type: Boolean,\n                default: false\n            },\n            href: {\n                type: String,\n                default: '#'\n            }\n        }\n    };\n\n</script>\n","<template>\n    <div class=\"d-inline-block\">\n        <span class=\"d-inline-block\" ref=\"trigger\"><slot></slot></span>\n        <div :class=\"['tooltip','tooltip-' + this.placement]\"\n             :style=\"{opacity:showState?1:0}\"\n             tabindex=\"-1\"\n             ref=\"popover\"\n             @focus=\"$emit('focus')\"\n             @blur=\"$emit('blur')\"\n        >\n            <div class=\"tooltip-inner\">\n                <slot name=\"content\"><span v-html=\"content\"></span></slot>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n    .tooltip {\n        display: block;\n        transition: all 0.3s;\n    }\n</style>\n\n<script>\n    import { popoverMixin } from '../mixins';\n\n    export default {\n        mixins: [popoverMixin],\n        props: {\n            content: {\n                type: String,\n                default: ''\n            },\n            triggers: {\n                type: [Boolean, String, Array],\n                default: 'hover'\n            }\n        }\n    };\n</script>\n","const inBrowser = typeof window !== 'undefined';\n\nimport target from './_target';\nconst listen_types = {click: true};\n\n// Property key for handler\nconst BVT = '__BV_toggle__';\n\n// Event nmmes\nconst EVENT_TOGGLE = 'collapse::toggle';\nconst EVENT_STATE = 'collapse::toggle::state';\n\nexport default {\n\n    bind(el, binding, vnode) {\n\n        const targets = target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit(EVENT_TOGGLE, target);\n            });\n        });\n\n        if (inBrowser && vnode.context && targets.length > 0) {\n            // Add aria attributes to element\n            el.setAttribute('aria-controls', targets.join(' '));\n            el.setAttribute('aria-expanded', 'false');\n\n            // Toggle state hadnler, stored on element\n            el[BVT] = function toggleDirectiveHandler(id, state) {\n                if (targets.indexOf(id) !== -1) {\n                    // Set aria-expanded state\n                    el.setAttribute('aria-expanded', state ? 'true' : 'false');\n                    // Set 'collapsed' class state\n                    if (state) {\n                        el.classList.remove('collapsed');\n                    } else {\n                        el.classList.add('collapsed');\n                    }\n                }\n            };\n\n            // Listen for toggle state changes\n            vnode.context.$root.$on(EVENT_STATE, el[BVT]);\n        }\n    },\n    unbind(el, binding, vnode) {\n        if (el[BVT]) {\n            // Remove our $root listener\n            vnode.context.$root.$off(EVENT_STATE, el[BVT]);\n            el[BVT] = null;\n        }\n    }\n};\n","import target from './_target';\n\nconst listen_types = {click: true};\n\nexport default {\n// eslint-disable-next-line no-shadow-restricted-names\n    bind(undefined, binding, vnode) {\n        target(vnode, binding, listen_types, ({targets, vnode}) => {\n            targets.forEach(target => {\n                vnode.context.$root.$emit('show::modal', target, vnode.elm);\n            });\n        });\n    }\n};\n","import * as components from './components';\nimport * as directives from './directives';\n\n/* eslint-disable no-var, no-undef, guard-for-in, object-shorthand */\n\nconst VuePlugin = {\n    install: function (Vue) {\n        if (Vue._bootstrap_vue_installed) {\n            return;\n        }\n\n        Vue._bootstrap_vue_installed = true;\n\n        // Register components\n        for (var component in components) {\n            Vue.component(component, components[component]);\n        }\n\n        // Register directives\n        for (var directive in directives) {\n            Vue.directive(directive, directives[directive]);\n        }\n    }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(VuePlugin);\n}\n\nexport default VuePlugin;\n"],"names":["observeDOM","el","callback","opts","const","MutationObserver","window","WebKitMutationObserver","eventListenerSupported","addEventListener","mutations","addedNodes","length","removedNodes","observe","assign","childList","subtree","warn","message","console","isVisible","offsetWidth","offsetHeight","filterVisible","els","filter","pickLinkProps","keys","props","reduce","memo","prop","arrayIncludes","propsToPick","omitLinkProps","propsToOmit","getTransisionEndEvent","name","TransitionEndEvents","undefined","style","findFirstVisible","root","selector","querySelectorAll","let","arrayFrom","find","i","makePageArray","startNum","numPages","range","map","value","index","number","className","targets","vnode","binding","listen_types","fn","modifiers","t","all_listen_types","push","listener","forEach","type","elm","isElement","obj","nodeType","closest","element","$QSA","document","$QS","querySelector","getVm","__vue__","toType","toString","call","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","expectedTypes","valueType","RegExp","test","error","ScrollSpy","this","_$el","_selector","Selector","NAV_LINKS","LIST_ITEMS","DROPDOWN_ITEMS","join","_config","Default","_offsets","_targets","_activeTarget","_scrollHeight","_$root","_resizeTimeout","updateConfig","Array","from","toStr","isCallable","toInteger","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","min","max","arrayLike","C","items","TypeError","T","mapFn","arguments","kValue","len","A","k","isArray","arg","array","indexOf","target","varArgs","to","nextSource","nextKey","render","data","countDownTimerId","dismissed","localDismissible","dismissible","created","state","computed","classObject","alertVariant","variant","localShow","show","String","default","Boolean","dismissLabel","watch","showChanged","mounted","methods","dismiss","$emit","clearCounter","clearInterval","dismissCountDown","setInterval","documentElement","_clickOutListener","destroyed","removeEventListener","e","$el","contains","clickOutListener","BVRL","listenOnRoot","event","$root","$on","emitOnRoot","ref","args","shift","$off","ITEM_SELECTOR","mixins","listenOnRootMixin","id","text","dropup","disabled","right","visible","clickOut","old","body","children","noop","$nextTick","focusFirstItem","toggler","split","$refs","toggle","button","click","onTab","onEsc","preventDefault","stopPropagation","focusToggler","onMouseOver","evt","item","classList","focus","focusNext","up","getItems","focusItem","idx","getAttribute","menu","getFirstItem","required","checkboxClass","custom-control","custom","form-check-inline","inline","plain","formOptions","options","option","valueField","textField","selectedValue","returnObject","multiple","localValue","old_value","active","activeClass","append","exact","exactActiveClass","href","rel","replace","routerTag","tag","linkProps","isRouterLink","$router","_href","computedRel","componentTag","linkClassObject","linkClick","TRIGGER_LISTENERS","hover","mouseenter","mouseleave","blur","PLACEMENT_PARAMS","top","bottom","left","TETHER_CLASS_PREFIX","TETHER_CLASSES","enabled","TRANSITION_DURATION","constraints","debounce","validator","delay","hide","offset","placement","popoverStyle","targetOffset","triggers","triggerKeys","triggerState","classState","lastEvent","normalizedTriggers","popoverAlignment","showState","setOptions","newTriggers","oldTriggers","updateListeners","val","getDelay","clearTimeout","$data","_timeout","setTimeout","togglePopover","addListener","trigger","_trigger","eventHandler","destroyTether","_tether","destroy","regx","timeStamp","action","getTetherOptions","attachment","_popover","classes","classPrefix","hidePopover","display","refreshPosition","position","removeListener","showPopover","Tether","newShowState","appliedTriggers","removeTriggers","popover","updated","beforeDestroy","parentElement","removeChild","linkMixin","bLinkPropKeys","components","bLink","normalizedItems","userDefinedActive","originalItemsLength","normalizedItem","_originalItem","isLast","link","_linkProps","itemProp","ariaCurrent","onClick","originalLinkProps","btnVariant","btnSize","btnBlock","btnDisabled","btnPressed","componentType","block","size","btnType","isToggle","pressed","ariaPressed","dataToggle","tabIndex","conditionalLinkProps","handleFocus","add","remove","justify","vertical","keyNav","setItemFocus","prev","focusFirst","focusLast","blockClass","overlay","cardVariant","cardInverse","inverse","cardAlign","align","header","headerVariant","headerClass","headerTag","footer","footerVariant","footerClass","footerTag","title","titleTag","subTitle","subTitleTag","noBlock","img","imgAlt","deck","columns","DIRECTION","next","dirClass","overlayClass","TRANS_DURATION","WebkitTransition","MozTransition","OTransition","transition","isSliding","intervalId","transitionEndEvent","slides","labelPrev","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","height","background","isCycling","setSlide","slide","visibilityState","hidden","$once","pause","start","restart","relatedTarget","updateSlides","inner","numSlides","n","setAttribute","newVal","oldVal","direction","currentSlide","nextSlide","called","onceTransEnd","_animationTimeout","observeDom","bind","contentVisibleUp","contentTag","caption","captionTag","textTag","contentClasses","transitioning","model","isNav","accordion","emitState","navbar-collapse","collapse","onEnter","reflow","scrollHeight","onAfterEnter","onLeave","getBoundingClientRect","onAfterLeave","clickHandler","getComputedStyle","handleToggleEvt","handleAccordionEvt","openedId","handleResize","dropdownMixin","bButton","toggleText","dropdownClasses","menuClasses","selected","dropdownToggle","caret","displayItem","forceDefault","defaultText","result","list","select","INPUT_SELECTOR","labelId","label","descriptionId","description","feedbackId","feedback","describedBy","inputState","computedLabelCols","labelSize","labelCols","labelLayout","labelSrOnly","horizontal","labelAlignClass","labelTextAlign","inputLayout","updateTarget","labelFor","content","input","inputSelector","for","formMixin","formCustomMixin","formCheckBoxMixin","uncheckedValue","checked","indeterminate","buttonVariant","labelClasses","btnLabelClasses","isChecked","setIndeterminate","handleChange","x","check","formOptionsMixin","invalid","stacked","buttons","radioGroupClasses","btnGroupClasses","staticValue","inputClass","bFormInputStatic","isTextArea","textarea","rowsCount","ariaInvalid","format","formatter","formattedValue","onInput","lazyFormatter","onChange","onKeyUp","readonly","autocomplete","static","placeholder","rows","Function","selectedFile","dragging","selectedLabel","selectedFormat","file","computedChooseLabel","chooseLabel","reset","onFileChange","dataTransfer","noTraverse","setFiles","files","queue","webkitGetAsEntry","traverseFileTree","Promise","all","then","filesArr","filesArray","accept","dragover","noDrop","dropEffect","drop","path","resolve","isFile","$path","isDirectory","createReader","readEntries","entries","directory","dropLabel","selectSize","fluid","containerFluid","lead","badgeVariant","badgePill","pill","flush","actionTags","listState","isAction","myTag","verticalAlignClass","rightAlign","verticalAlign","FOCUS_SELECTOR","bBtn","is_visible","return_focus","returnFocus","new_val","old_val","buttonSize","noFade","noCloseOnBackdrop","noCloseOnEsc","noAutoFocus","noEnforceFocus","hideHeader","hideFooter","hideHeaderClose","okOnly","okDisabled","headerCloseLabel","closeTitle","okTitle","enforceFocus","isOK","canceled","cancel","returnFocusTo","onClickOut","activeElement","showHandler","triggerEl","hideHandler","nav","navbar-nav","isNavBar","nav-tabs","tabs","nav-pills","pills","flex-column","nav-fill","fill","nav-justified","justified","noCaret","toggleState","onclick","handleStateEvt","fixed","sticky","toggleable","toggleableClass","toggleBreakpoint","isLink","bForm","apply","ELLIPSIS_THRESHOLD","showFirstDots","showLastDots","currentPage","numberOfPages","ceil","totalRows","perPage","alignment","pageList","numLinks","limit","hideEllipsis","pages","isActive","page","pageItemClasses","pageLinkClasses","setPage","num","currentpage","focusCurrent","getButtons","btn","setBtnFocus","reverse","parseInt","focusPrev","newPage","oldPage","newValue","oldValue","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","ellipsisText","ariaControls","routerProps","baseUrl","useRouter","linkGen","pageGen","pageNum","makeLink","pagenum","makePage","popoverMixin","progressVariant","striped","animated","styleObject","width","progress","p","precision","round","showProgress","showValue","v","recToString","o","defaultSortCompare","a","b","sortBy","localeCompare","numeric","localSortBy","localSortDesc","sortDesc","localItems","itemsProvider","apiUrl","fields","bordered","small","responsive","headVariant","footVariant","sortCompare","noProviderPaging","noProviderSorting","noProviderFiltering","busy","footClone","labelSortAsc","labelSortDesc","showEmpty","emptyText","emptyFilteredText","_providerUpdate","hasProvider","tableClass","headClass","footClass","providerFiltering","providerSorting","providerPaging","context","_items","slice","numOriginalItems","regex","lastIndex","sort","r","fieldClass","field","key","sortable","class","thClass","tdClass","cellVariant","_cellVariants","rowClass","_rowVariant","rowClicked","rowDblClicked","rowHovered","headClicked","sortChanged","refresh","_providerSetLocal","hasFormatter","callFormatter","$parent","currentTab","card","lazy","setTab","fade","$set","navStyle","sign","nextTab","previousTab","force","tab","updateTabs","$slots","componentInstance","tabsContainer","enter","beforeLeave","localActive","controlledBy","buttonId","headHtml","inBrowser","BVT","EVENT_TOGGLE","EVENT_STATE","unbind","isServer","Element","s","matches","ownerDocument","NAME","EVENT","BVSS","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","DROPDOWN_MENU","DROPDOWN_TOGGLE","NAV_LINK","LIST_ITEM","ACTIVE","NAV_LIST_GROUP","NAV","LIST_GROUP","DROPDOWN","OffsetMethod","OFFSET","POSITION","vm","listen","scroller","_getScroller","tagName","unListen","autoMethod","offsetMethod","offsetBase","_getScrollTop","_getScrollHeight","charAt","bcr","offsetTop","process","scrollTop","maxScroll","_getOffsetHeight","_activate","_clear","scheduleRefresh","handleEvent","dispose","self","pageYOffset","innerHeight","queries","links","dropdown","_setActiveState","_setParentsSiblingActiveState","$props","previousElementSibling","inserted","update","componentUpdated","VuePlugin","install","Vue","_bootstrap_vue_installed","component","directive","directives","use"],"mappings":"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"}